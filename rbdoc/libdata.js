/* Index used for searching */
/*
   Fields used:
     url, name, type, filename, authors, routine name, comments, parameters,
     categories, and attributes
*/
title = "Documentation for /Users/safusu/Documents/suncentering/";
subtitle = "Generated by IDLdoc";
libdata = new Array();
libdataItem = 0;



libdata[libdataItem++] = new Array("obsolete_code/boxit.html", "boxit.pro", '.pro file in <a href="obsolete_code/dir-overview.html">obsolete_code/ directory</a>', "boxit.pro", "", "", "", "", "          -1", "");
  
  
  libdata[libdataItem++] = new Array("obsolete_code/boxit.html#boxit", "boxit", 'routine in <a href="obsolete_code/boxit.html">boxit.pro</a>', "boxit.pro", "", "boxit", "		Makes a box around the sun (or round piece of paper) with equal sized padding for every scenario.   ", "file", "          -1", "");
  
  

libdata[libdataItem++] = new Array("./center.html", "center.pro", '.pro file in <a href="./dir-overview.html">./ directory</a>', "center.pro", "   JEREN SUZUKI: <span class= code-output >   Space Sciences Laboratory</span> <span class= code-output >   7 Gauss Way</span> <span class= code-output >   Berkeley, CA 94720 USA</span> <span class= code-output >   E-mail: jsuzuki@ssl.berkeley.edu</span>  ", "", " At the end of the day this should find the center of the sun using a variety of (working) methods   Compiled the doc with idldoc,root='/Users/jerensuzuki/Documents/suncentering', $  output='rbdoc',format_style='rst',/user,/quiet,markup_style='rst'   ", "", "          -1", "");
  
  
  libdata[libdataItem++] = new Array("./center.html#center", "center", 'routine in <a href="./center.html">center.pro</a>', "center.pro", "", "center", "       Finds the centroid using a variety of compression levels        Removed the 'vX' suffix because it got confusing keeping track of which numbers went with what         Important!:        IDL uses the origin to be the top left corner for 2d arrays and a column is indexed from 0        starting from the top. You have been WARNED.  ", "file       File to be read in  ministrip_length       How long the cut-down strip is  scan_width       How far apart the scans are  time       Prints the elapsed time  order       What order polynomial to use for POLY_FIT()  plot       If set, makes some nice plots.  sigmavalue       Sets the threshold to be: <span class= code-output >   max(image) - sigmavalue*stddev(image)</span>  savstep       The number of steps to include in the fits file.        savstep = 1: cropped image        savstep = 2: long strips        savstep = 3: limb strips        savstep = 4: center of mask  saveonly       Determines whether or not savstep saves steps leading up to savstep or just savstep  storestruct       Toggles whether or not we want to save data at all   ", "          -1", "   More Keywords/parameters     How strict are we going to be for the outputs of each compression file?     Deal with fiducials hitting the limb (Does it even matter?)     Deal with scan_width; scan_width=5 seems to produce some pretty good results.     I fixed the values being stuck, it was because I added to the index where the image value &gt; thresh,    I should've subtracted instead. Note: Don't do that again.     Threshold value doesn't have a safety in terms of cosmic rays or single pixels with absurdly high    values. Got to have some sort of catch here just in case.     For some reason, after I added code to look at 5 center chords, the y-limbs are all wonky. Why?    They cross through fiducials, that's why. The fiducials are so wide that a median filter won't get    rid of them.  ");
  
  libdata[libdataItem++] = new Array("./center.html#scanbox", "scanbox", 'routine in <a href="./center.html">center.pro</a>', "center.pro", "", "scanbox", "       Boxit was too computation-intensive, this is more a rough boxing program.        Uses knowledge of approx size of sun to only scan until it hits the sun then        moves the crop borders based on the given parameters.   ", "file       File to be read in  time       Print the elapsed time  meanthreshscan_width       How far apart the scanning should be. Fine tuned compared to scanbox  savstep       The number of steps to include in the fits file.        savstep = 1: cropped image        savstep = 2: long strips        savstep = 3: limb strips        savstep = 4: center of mask  saveonly       Determines whether or not savstep saves steps leading up to savstep or just savstep  sigmavalue       Sets the threshold to be:        max(image) - sigmavalue*stddev(image)  storestruct       Toggles whether or not we want to save data at all   ", "          -1", "       cropped = scanbox(file='$PWD/sep11_postit/104533_20120912_124300_353097_0.bin',/time)   ");
  
  libdata[libdataItem++] = new Array("./center.html#comp2", "comp2", 'routine in <a href="./center.html">center.pro</a>', "center.pro", "", "comp2", "           Finds the centroid by summing all values over a certain threshold and averaging them.   ", "file       File to be read in  time       Prints the elapsed time  plot       Makes a nice plot  sigmavalue       Sets the threshold to be:        max(image) - sigmavalue*stddev(image)         Having a sigmavalue=2 makes the pixels chosen from the sun more circular than sigmavalue=1   xpos       X center  ypos       Y center  thresh       Threshold used to select pixels   ", "          -1", "           comp2,xpos,ypos,thresh,time=time,sigmavalue=sigmavalue,file=file   ");
  
  libdata[libdataItem++] = new Array("./center.html#comp3", "comp3", 'routine in <a href="./center.html">center.pro</a>', "center.pro", "", "comp3", "           Looks only at the positions of pixels above a threshold and doen't care        About their actual values, like in comp2. More  accurate  to find the        center than comp2 since this gives all solar pixels equal weighting.   ", "file       File to be read in  time       Prints the elapsed time  sigmavalue       Sets the threshold to be:        max(image) - sigmavalue*stddev(image)         Having a sigmavalue=2 makes the pixels chosen from the sun more circular than sigmavalue=1   xpos       X center  ypos       Y center  thresh       Threshold used to select pixels   ", "          -1", "           comp3,xpos,ypos,thresh,time=time,sigmavalue=sigmavalue,file=file   ");
  
  libdata[libdataItem++] = new Array("./center.html#comp4", "comp4", 'routine in <a href="./center.html">center.pro</a>', "center.pro", "", "comp4", "           Only saves 5 strips centered around the solar diameter to reduce the amount of limb-            darkened pixels and to make the polynomial-fitted limbs more-or-less look similar.            Called into comp5.  ", "file       File to be read in  time       Prints the elapsed time  scan_width       Indicates how far apart to scan  sigmavalue       Sets the threshold to be: <span class= code-output >max(image) - sigmavalue*stddev(image)</span>  savstep       The number of steps to include in the fits file.        savstep = 1: cropped image        savstep = 2: long strips        savstep = 3: limb strips        savstep = 4: center of mask  saveonly       Determines whether or not savstep saves steps leading up to savstep or just savstep  nstrips       How many strips to select, centered around the row/col diameter  storestruct       Toggles whether or not we want to save data at all   xstrips       Structure containing row strips  ystrips       Structure containing column strips  thresh       Threshold used to select pixels   ", "          -1", "           comp4,xstrips,ystrips,thresh,/time,scan_width=10   ");
  
  libdata[libdataItem++] = new Array("./center.html#comp5", "comp5", 'routine in <a href="./center.html">center.pro</a>', "center.pro", "", "comp5", "           Calls comp4 to acquire data strips then saves limb strips.   ", "file       File to be read in  time       Prints the elapsed time  ministrip_length       How long the total array of the cut-down strip will be  scan_width       Indicates how far apart to scan  sigmavalue       Sets the threshold to be:     max(image) - sigmavalue*stddev(image)   savstep       The number of steps to include in the fits file.        savstep = 1: cropped image        savstep = 2: long strips        savstep = 3: limb strips        savstep = 4: center of mask  saveonly       Determines whether or not savstep saves steps leading up to savstep or just savstep  storestruct       Toggles whether or not we want to save data at all   xstrips       Contains the row sctructures of strips  ystrips       Contains the col sctructures of strips  thresh       Threshold value used   ", "          -1", "           comp5,xstrips,ystrips,thresh      Exactly how much data should be stored in a structure? Since we're interested in saving space,    doesn't make sense to repeat any data in the structures.  ");
  
  libdata[libdataItem++] = new Array("./center.html#comp6", "comp6", 'routine in <a href="./center.html">center.pro</a>', "center.pro", "", "comp6", "       Uses the data from comp5 and fits an n-th order polynomial to the limb to find where        it crosses the threshold. Imports the strips from comp5.   ", "file       File to be read in  order       What order polynomial to use for POLY_FIT()  time       Prints the elapsed time  scan_width       Ondicates how far apart to scan  ministrip_length       How long the trimmed down strip will be  plot       If set, makes some nice plots.  sigmavalue       Sets the threshold to be:     max(image) - sigmavalue*stddev(image)   savstep       The number of steps to include in the fits file.        savstep = 1: cropped image        savstep = 2: long strips        savstep = 3: limb strips        savstep = 4: center of mask  saveonly       Determines whether or not savstep saves steps leading up to savstep or just savstep  storestruct       Toggles whether or not we want to save data at all   xpos       X Center  ypos       Y Center   ", "          -1", "           comp6,xpos,ypos,order=3   ");
  
  

libdata[libdataItem++] = new Array("obsolete_code/center.html", "center.pro", '.pro file in <a href="obsolete_code/dir-overview.html">obsolete_code/ directory</a>', "center.pro", "   JEREN SUZUKI: <span class= code-output >   Space Sciences Laboratory</span> <span class= code-output >   7 Gauss Way</span> <span class= code-output >   Berkeley, CA 94720 USA</span> <span class= code-output >   E-mail: jsuzuki@ssl.berkeley.edu</span>  ", "", " At the end of the day this should find the center of the sun using a variety of (working) methods   Compiled the doc with idldoc,root='/Users/jerensuzuki/Documents/suncentering', $  output='rbdoc',format_style='rst',/user,/quiet,markup_style='rst'   ", "", "          -1", "");
  
  
  libdata[libdataItem++] = new Array("obsolete_code/center.html#scanbox", "scanbox", 'routine in <a href="obsolete_code/center.html">center.pro</a>', "center.pro", "", "scanbox", "       Boxit was too computation-intensive, this is more a rough boxing program   ", "file       File to be read in  time       Print the elapsed time  meanthresh       Use the average of the image as the threshold value. Otherwise, use half of max  scan_width       How far apart the scanning should be   ", "          -1", "       cropped = scanbox(file='$PWD/sep11_postit/104533_20120912_124300_353097_0.bin',/time)   ");
  
  libdata[libdataItem++] = new Array("obsolete_code/center.html#comp2", "comp2", 'routine in <a href="obsolete_code/center.html">center.pro</a>', "center.pro", "", "comp2", "           Finds the centroid by summing all values over a certain threshold and averaging them   ", "file       File to be read in  time       Prints the elapsed time  plot       Makes a nice plot  sigmavalue       Sets the threshold to be max(image) - sigmavalue*stddev(image)   xpos       X center  ypos       Y center  thresh       Threshold used to select pixels   ", "          -1", "           comp2,xpos,ypos,/plot   ");
  
  libdata[libdataItem++] = new Array("obsolete_code/center.html#comp4", "comp4", 'routine in <a href="obsolete_code/center.html">center.pro</a>', "center.pro", "", "comp4", "           Only used to save the strips into structures.  ", "file       File to be read in  time       Prints the elapsed time  scan_width       Indicates how far apart to scan  sigmavalue       Sets the threshold to be max(image) - sigmavalue*stddev(image)   xstrips       Structure containing row strips  ystrips       Structure containing column strips  thresh       Threshold used to select pixels   ", "          -1", "           comp4,xstrips,ystrips,thresh,/time,scan_width=10,/thalf   ");
  
  libdata[libdataItem++] = new Array("obsolete_code/center.html#comp5", "comp5", 'routine in <a href="obsolete_code/center.html">center.pro</a>', "center.pro", "", "comp5", "           Only used to save the cut-down strips into structures. Doesn't import            the whole strip data from comp4, it goes straight from scanbox (skips comp4).   ", "file       File to be read in  time       Prints the elapsed time  ministrip_length       How long the total array of the cut-down strip will be  scan_width       Indicates how far apart to scan  sigmavalue       Sets the threshold to be max(image) - sigmavalue*stddev(image)   xstrips       Contains the row sctructures of strips  ystrips       Contains the col sctructures of strips  thresh       Threshold value used   ", "          -1", "           comp5,xstrips,ystrips,thresh      Exactly how much data should be stored in a structure? Since we're interested in saving space,    doesn't make sense to repeat any data in the structures.  ");
  
  libdata[libdataItem++] = new Array("obsolete_code/center.html#comp6v2", "comp6v2", 'routine in <a href="obsolete_code/center.html">center.pro</a>', "center.pro", "", "comp6v2", "       Uses the data from comp5 and draws a linear/quadratic/cubic/etc. function to find midpoint.        Order is the power of the function. Different from comp6 in that this method uses fz_roots()        and comp6 uses spline to interpolate where the limb crosses a threshold. Imports the strips        from comp5.   ", "file       File to be read in  order       What order polynomial to use for POLY_FIT()  time       Prints the elapsed time  scan_width       Ondicates how far apart to scan  ministrip_length       How long the trimmed down strip will be  plot       If set, makes some nice plots.  sigmavalue       Sets the threshold to be max(image) - sigmavalue*stddev(image)   xpos       X Center  ypos       Y Center   ", "          -1", "           comp6,xpos,ypos,order=3   ");
  
  libdata[libdataItem++] = new Array("obsolete_code/center.html#cc", "cc", 'routine in <a href="obsolete_code/center.html">center.pro</a>', "center.pro", "", "cc", "", "", "          -1", "");
  
  libdata[libdataItem++] = new Array("obsolete_code/center.html#makesomescatplots", "makesomescatplots", 'routine in <a href="obsolete_code/center.html">center.pro</a>', "center.pro", "", "makesomescatplots", "   Makes a few scatter plots based on varying parameters. Sucks that the values are hardcoded.  ", "", "          -1", "");
  
  libdata[libdataItem++] = new Array("obsolete_code/center.html#msmsp", "msmsp", 'routine in <a href="obsolete_code/center.html">center.pro</a>', "center.pro", "", "msmsp", "   Abbreviated form of  Make Some More Scatter Plots     Making more scat plots now that I've fixed my program and am now moving onto bmp images   ", "", "          -1", "");
  
  libdata[libdataItem++] = new Array("obsolete_code/center.html#center", "center", 'routine in <a href="obsolete_code/center.html">center.pro</a>', "center.pro", "", "center", "       Finds the centroid using a variety of compression levels         Important!:        IDL uses the origin to be the top left corner for 2d arrays and a column is indexed from 0        starting from the top. You have been WARNED.  ", "file       File to be read in  ministrip_length       How long the cut-down strip is  scan_width       How far apart the scans are  time       Prints the elapsed time  order       What order polynomial to use for POLY_FIT()  plot       If set, makes some nice plots.  sigmavalue       Sets the threshold to be: <span class= code-output >   max(image) - sigmavalue*stddev(image)</span>  ", "          -1", "   More Keywords/parameters     How strict are we going to be for the outputs of each compression file?     Deal with fiducials hitting the limb (Does it even matter?)     Deal with scan_width; scan_width=5 seems to produce some pretty good results.     I fixed the values being stuck, it was because I added to the index where the image value &gt; thresh,    I should've subtracted instead. Note: Don't do that again.     Probably too early to say, but I think I've finished this program. It's robust and gets near-perfect    values for each blur amount. The only thing that changes the fit considerably is what order poly-    nomial I use.   ");
  
  

libdata[libdataItem++] = new Array("obsolete_code/centerv2.html", "centerv2.pro", '.pro file in <a href="obsolete_code/dir-overview.html">obsolete_code/ directory</a>', "centerv2.pro", "   JEREN SUZUKI: <span class= code-output >   Space Sciences Laboratory</span> <span class= code-output >   7 Gauss Way</span> <span class= code-output >   Berkeley, CA 94720 USA</span> <span class= code-output >   E-mail: jsuzuki@ssl.berkeley.edu</span>  ", "", " At the end of the day this should find the center of the sun using a variety of (working) methods   Compiled the doc with idldoc,root='/Users/jerensuzuki/Documents/suncentering', $  output='rbdoc',format_style='rst',/user,/quiet,markup_style='rst'   ", "", "          -1", "");
  
  
  libdata[libdataItem++] = new Array("obsolete_code/centerv2.html#scanbox", "scanbox", 'routine in <a href="obsolete_code/centerv2.html">centerv2.pro</a>', "centerv2.pro", "", "scanbox", "       Boxit was too computation-intensive, this is more a rough boxing program   ", "file       File to be read in  time       Print the elapsed time  meanthreshscan_width       How far apart the scanning should be  savstep       The number of steps to include in the fits file.        savstep = 1: cropped image        savstep = 2: long strips        savstep = 3: limb strips        savstep = 4: center of mask  saveonly       Determines whether or not savstep saves steps leading up to savstep or just savstep   sigmavalue       Sets the threshold to be:        max(image) - sigmavalue*stddev(image)  ", "          -1", "       cropped = scanbox(file='$PWD/sep11_postit/104533_20120912_124300_353097_0.bin',/time)   ");
  
  libdata[libdataItem++] = new Array("obsolete_code/centerv2.html#comp2", "comp2", 'routine in <a href="obsolete_code/centerv2.html">centerv2.pro</a>', "centerv2.pro", "", "comp2", "           Finds the centroid by summing all values over a certain threshold and averaging them   ", "file       File to be read in  time       Prints the elapsed time  plot       Makes a nice plot  sigmavalue       Sets the threshold to be:        max(image) - sigmavalue*stddev(image)   savstep       The number of steps to include in the fits file.        savstep = 1: cropped image        savstep = 2: long strips        savstep = 3: limb strips        savstep = 4: center of mask  saveonly       Determines whether or not savstep saves steps leading up to savstep or just savstep   xpos       X center  ypos       Y center  thresh       Threshold used to select pixels   ", "          -1", "           comp2,xpos,ypos,thresh,time=time,sigmavalue=sigmavalue,file=file   ");
  
  libdata[libdataItem++] = new Array("obsolete_code/centerv2.html#comp4", "comp4", 'routine in <a href="obsolete_code/centerv2.html">centerv2.pro</a>', "centerv2.pro", "", "comp4", "           Only used to save the strips into structures.  ", "file       File to be read in  time       Prints the elapsed time  scan_width       Indicates how far apart to scan  sigmavalue       Sets the threshold to be: <span class= code-output >max(image) - sigmavalue*stddev(image)</span>  savstep       The number of steps to include in the fits file.        savstep = 1: cropped image        savstep = 2: long strips        savstep = 3: limb strips        savstep = 4: center of mask  saveonly       Determines whether or not savstep saves steps leading up to savstep or just savstep   xstrips       Structure containing row strips  ystrips       Structure containing column strips  thresh       Threshold used to select pixels   ", "          -1", "           comp4,xstrips,ystrips,thresh,/time,scan_width=10   ");
  
  libdata[libdataItem++] = new Array("obsolete_code/centerv2.html#comp5v2", "comp5v2", 'routine in <a href="obsolete_code/centerv2.html">centerv2.pro</a>', "centerv2.pro", "", "comp5v2", "           Only used to save the cut-down strips into structures. Imports strips from            comp4 like a good code should.   ", "file       File to be read in  time       Prints the elapsed time  ministrip_length       How long the total array of the cut-down strip will be  scan_width       Indicates how far apart to scan  sigmavalue       Sets the threshold to be:     max(image) - sigmavalue*stddev(image)   savstep       The number of steps to include in the fits file.        savstep = 1: cropped image        savstep = 2: long strips        savstep = 3: limb strips        savstep = 4: center of mask  saveonly       Determines whether or not savstep saves steps leading up to savstep or just savstep   xstrips       Contains the row sctructures of strips  ystrips       Contains the col sctructures of strips  thresh       Threshold value used   ", "          -1", "           comp5v2,xstrips,ystrips,thresh      Exactly how much data should be stored in a structure? Since we're interested in saving space,    doesn't make sense to repeat any data in the structures.  ");
  
  libdata[libdataItem++] = new Array("obsolete_code/centerv2.html#comp6v2", "comp6v2", 'routine in <a href="obsolete_code/centerv2.html">centerv2.pro</a>', "centerv2.pro", "", "comp6v2", "       Uses the data from comp5v2 and draws a linear/quadratic/cubic/etc. function to find midpoint.        Order is the power of the function. Different from comp6 in that this method uses fz_roots()        and comp6 uses spline to interpolate where the limb crosses a threshold. Imports the strips        from comp5v2.   ", "file       File to be read in  order       What order polynomial to use for POLY_FIT()  time       Prints the elapsed time  scan_width       Ondicates how far apart to scan  ministrip_length       How long the trimmed down strip will be  plot       If set, makes some nice plots.  sigmavalue       Sets the threshold to be:     max(image) - sigmavalue*stddev(image)   savstep       The number of steps to include in the fits file.        savstep = 1: cropped image        savstep = 2: long strips        savstep = 3: limb strips        savstep = 4: center of mask  saveonly       Determines whether or not savstep saves steps leading up to savstep or just savstep   xpos       X Center  ypos       Y Center   ", "          -1", "           comp6,xpos,ypos,order=3   ");
  
  libdata[libdataItem++] = new Array("obsolete_code/centerv2.html#cc", "cc", 'routine in <a href="obsolete_code/centerv2.html">centerv2.pro</a>', "centerv2.pro", "", "cc", "", "", "          -1", "");
  
  libdata[libdataItem++] = new Array("obsolete_code/centerv2.html#makesomescatplots", "makesomescatplots", 'routine in <a href="obsolete_code/centerv2.html">centerv2.pro</a>', "centerv2.pro", "", "makesomescatplots", "   Makes a few scatter plots based on varying parameters. Sucks that the values are hardcoded.  ", "", "          -1", "");
  
  libdata[libdataItem++] = new Array("obsolete_code/centerv2.html#msmsp", "msmsp", 'routine in <a href="obsolete_code/centerv2.html">centerv2.pro</a>', "centerv2.pro", "", "msmsp", "   Abbreviated form of  Make Some More Scatter Plots     Making more scat plots now that I've fixed my program and am now moving onto bmp images   ", "", "          -1", "");
  
  libdata[libdataItem++] = new Array("obsolete_code/centerv2.html#centerv2", "centerv2", 'routine in <a href="obsolete_code/centerv2.html">centerv2.pro</a>', "centerv2.pro", "", "centerv2", "       Finds the centroid using a variety of compression levels         Important!:        IDL uses the origin to be the top left corner for 2d arrays and a column is indexed from 0        starting from the top. You have been WARNED.  ", "file       File to be read in  ministrip_length       How long the cut-down strip is  scan_width       How far apart the scans are  time       Prints the elapsed time  order       What order polynomial to use for POLY_FIT()  plot       If set, makes some nice plots.  sigmavalue       Sets the threshold to be: <span class= code-output >   max(image) - sigmavalue*stddev(image)</span>  savstep       The number of steps to include in the fits file.        savstep = 1: cropped image        savstep = 2: long strips        savstep = 3: limb strips        savstep = 4: center of mask  saveonly       Determines whether or not savstep saves steps leading up to savstep or just savstep   ", "          -1", "   More Keywords/parameters     How strict are we going to be for the outputs of each compression file?     Deal with fiducials hitting the limb (Does it even matter?)     Deal with scan_width; scan_width=5 seems to produce some pretty good results.     I fixed the values being stuck, it was because I added to the index where the image value &gt; thresh,    I should've subtracted instead. Note: Don't do that again.     Threshold value doesn't have a safety in terms of cosmic rays or single pixels with absurdly high    values. Got to have some sort of catch here just in case.  ");
  
  

libdata[libdataItem++] = new Array("obsolete_code/centerv3.html", "centerv3.pro", '.pro file in <a href="obsolete_code/dir-overview.html">obsolete_code/ directory</a>', "centerv3.pro", "   JEREN SUZUKI: <span class= code-output >   Space Sciences Laboratory</span> <span class= code-output >   7 Gauss Way</span> <span class= code-output >   Berkeley, CA 94720 USA</span> <span class= code-output >   E-mail: jsuzuki@ssl.berkeley.edu</span>  ", "", " At the end of the day this should find the center of the sun using a variety of (working) methods   Compiled the doc with idldoc,root='/Users/jerensuzuki/Documents/suncentering', $  output='rbdoc',format_style='rst',/user,/quiet,markup_style='rst'   ", "", "          -1", "");
  
  
  libdata[libdataItem++] = new Array("obsolete_code/centerv3.html#centerv3", "centerv3", 'routine in <a href="obsolete_code/centerv3.html">centerv3.pro</a>', "centerv3.pro", "", "centerv3", "       Finds the centroid using a variety of compression levels         Different from v2 in that this one is slightly more organized and uses a different version of        comp2.         Important!:        IDL uses the origin to be the top left corner for 2d arrays and a column is indexed from 0        starting from the top. You have been WARNED.  ", "file       File to be read in  ministrip_length       How long the cut-down strip is  scan_width       How far apart the scans are  time       Prints the elapsed time  order       What order polynomial to use for POLY_FIT()  plot       If set, makes some nice plots.  sigmavalue       Sets the threshold to be: <span class= code-output >   max(image) - sigmavalue*stddev(image)</span>  savstep       The number of steps to include in the fits file.        savstep = 1: cropped image        savstep = 2: long strips        savstep = 3: limb strips        savstep = 4: center of mask  saveonly       Determines whether or not savstep saves steps leading up to savstep or just savstep   ", "          -1", "   More Keywords/parameters     How strict are we going to be for the outputs of each compression file?     Deal with fiducials hitting the limb (Does it even matter?)     Deal with scan_width; scan_width=5 seems to produce some pretty good results.     I fixed the values being stuck, it was because I added to the index where the image value &gt; thresh,    I should've subtracted instead. Note: Don't do that again.     Threshold value doesn't have a safety in terms of cosmic rays or single pixels with absurdly high    values. Got to have some sort of catch here just in case.  ");
  
  libdata[libdataItem++] = new Array("obsolete_code/centerv3.html#scanbox", "scanbox", 'routine in <a href="obsolete_code/centerv3.html">centerv3.pro</a>', "centerv3.pro", "", "scanbox", "       Boxit was too computation-intensive, this is more a rough boxing program   ", "file       File to be read in  time       Print the elapsed time  meanthreshscan_width       How far apart the scanning should be  savstep       The number of steps to include in the fits file.        savstep = 1: cropped image        savstep = 2: long strips        savstep = 3: limb strips        savstep = 4: center of mask  saveonly       Determines whether or not savstep saves steps leading up to savstep or just savstep   sigmavalue       Sets the threshold to be:        max(image) - sigmavalue*stddev(image)  ", "          -1", "       cropped = scanbox(file='$PWD/sep11_postit/104533_20120912_124300_353097_0.bin',/time)   ");
  
  libdata[libdataItem++] = new Array("obsolete_code/centerv3.html#comp2", "comp2", 'routine in <a href="obsolete_code/centerv3.html">centerv3.pro</a>', "centerv3.pro", "", "comp2", "           Finds the centroid by summing all values over a certain threshold and averaging them   ", "file       File to be read in  time       Prints the elapsed time  plot       Makes a nice plot  sigmavalue       Sets the threshold to be:        max(image) - sigmavalue*stddev(image)   savstep       The number of steps to include in the fits file.        savstep = 1: cropped image        savstep = 2: long strips        savstep = 3: limb strips        savstep = 4: center of mask  saveonly       Determines whether or not savstep saves steps leading up to savstep or just savstep   xpos       X center  ypos       Y center  thresh       Threshold used to select pixels   ", "          -1", "           comp2,xpos,ypos,thresh,time=time,sigmavalue=sigmavalue,file=file   ");
  
  libdata[libdataItem++] = new Array("obsolete_code/centerv3.html#comp4", "comp4", 'routine in <a href="obsolete_code/centerv3.html">centerv3.pro</a>', "centerv3.pro", "", "comp4", "           Only used to save the strips into structures.  ", "file       File to be read in  time       Prints the elapsed time  scan_width       Indicates how far apart to scan  sigmavalue       Sets the threshold to be: <span class= code-output >max(image) - sigmavalue*stddev(image)</span>  savstep       The number of steps to include in the fits file.        savstep = 1: cropped image        savstep = 2: long strips        savstep = 3: limb strips        savstep = 4: center of mask  saveonly       Determines whether or not savstep saves steps leading up to savstep or just savstep   xstrips       Structure containing row strips  ystrips       Structure containing column strips  thresh       Threshold used to select pixels   ", "          -1", "           comp4,xstrips,ystrips,thresh,/time,scan_width=10   ");
  
  libdata[libdataItem++] = new Array("obsolete_code/centerv3.html#comp5v2", "comp5v2", 'routine in <a href="obsolete_code/centerv3.html">centerv3.pro</a>', "centerv3.pro", "", "comp5v2", "           Only used to save the cut-down strips into structures. Imports strips from            comp4 like a good code should.   ", "file       File to be read in  time       Prints the elapsed time  ministrip_length       How long the total array of the cut-down strip will be  scan_width       Indicates how far apart to scan  sigmavalue       Sets the threshold to be:     max(image) - sigmavalue*stddev(image)   savstep       The number of steps to include in the fits file.        savstep = 1: cropped image        savstep = 2: long strips        savstep = 3: limb strips        savstep = 4: center of mask  saveonly       Determines whether or not savstep saves steps leading up to savstep or just savstep   xstrips       Contains the row sctructures of strips  ystrips       Contains the col sctructures of strips  thresh       Threshold value used   ", "          -1", "           comp5v2,xstrips,ystrips,thresh      Exactly how much data should be stored in a structure? Since we're interested in saving space,    doesn't make sense to repeat any data in the structures.  ");
  
  libdata[libdataItem++] = new Array("obsolete_code/centerv3.html#comp6v2", "comp6v2", 'routine in <a href="obsolete_code/centerv3.html">centerv3.pro</a>', "centerv3.pro", "", "comp6v2", "       Uses the data from comp5v2 and draws a linear/quadratic/cubic/etc. function to find midpoint.        Order is the power of the function. Different from comp6 in that this method uses fz_roots()        and comp6 uses spline to interpolate where the limb crosses a threshold. Imports the strips        from comp5v2.   ", "file       File to be read in  order       What order polynomial to use for POLY_FIT()  time       Prints the elapsed time  scan_width       Ondicates how far apart to scan  ministrip_length       How long the trimmed down strip will be  plot       If set, makes some nice plots.  sigmavalue       Sets the threshold to be:     max(image) - sigmavalue*stddev(image)   savstep       The number of steps to include in the fits file.        savstep = 1: cropped image        savstep = 2: long strips        savstep = 3: limb strips        savstep = 4: center of mask  saveonly       Determines whether or not savstep saves steps leading up to savstep or just savstep   xpos       X Center  ypos       Y Center   ", "          -1", "           comp6,xpos,ypos,order=3   ");
  
  libdata[libdataItem++] = new Array("obsolete_code/centerv3.html#cc", "cc", 'routine in <a href="obsolete_code/centerv3.html">centerv3.pro</a>', "centerv3.pro", "", "cc", "", "", "          -1", "");
  
  libdata[libdataItem++] = new Array("obsolete_code/centerv3.html#msmsp", "msmsp", 'routine in <a href="obsolete_code/centerv3.html">centerv3.pro</a>', "centerv3.pro", "", "msmsp", "   Abbreviated form of  Make Some More Scatter Plots     Making more scat plots now that I've fixed my program and am now moving onto bmp images   ", "", "          -1", "");
  
  

libdata[libdataItem++] = new Array("obsolete_code/centerv4.html", "centerv4.pro", '.pro file in <a href="obsolete_code/dir-overview.html">obsolete_code/ directory</a>', "centerv4.pro", "   JEREN SUZUKI: <span class= code-output >   Space Sciences Laboratory</span> <span class= code-output >   7 Gauss Way</span> <span class= code-output >   Berkeley, CA 94720 USA</span> <span class= code-output >   E-mail: jsuzuki@ssl.berkeley.edu</span>  ", "", " At the end of the day this should find the center of the sun using a variety of (working) methods   Compiled the doc with idldoc,root='/Users/jerensuzuki/Documents/suncentering', $  output='rbdoc',format_style='rst',/user,/quiet,markup_style='rst'   ", "", "          -1", "");
  
  
  libdata[libdataItem++] = new Array("obsolete_code/centerv4.html#centerv4", "centerv4", 'routine in <a href="obsolete_code/centerv4.html">centerv4.pro</a>', "centerv4.pro", "", "centerv4", "       Finds the centroid using a variety of compression levels         Different from v2 in that this one is slightly more organized and uses a different version of        comp2v2.         Important!:        IDL uses the origin to be the top left corner for 2d arrays and a column is indexed from 0        starting from the top. You have been WARNED.  ", "file       File to be read in  ministrip_length       How long the cut-down strip is  scan_width       How far apart the scans are  time       Prints the elapsed time  order       What order polynomial to use for POLY_FIT()  plot       If set, makes some nice plots.  sigmavalue       Sets the threshold to be: <span class= code-output >   max(image) - sigmavalue*stddev(image)</span>  savstep       The number of steps to include in the fits file.        savstep = 1: cropped image        savstep = 2: long strips        savstep = 3: limb strips        savstep = 4: center of mask  saveonly       Determines whether or not savstep saves steps leading up to savstep or just savstep  storestruct       Toggles whether or not we want to save data at all   ", "          -1", "   More Keywords/parameters     How strict are we going to be for the outputs of each compression file?     Deal with fiducials hitting the limb (Does it even matter?)     Deal with scan_width; scan_width=5 seems to produce some pretty good results.     I fixed the values being stuck, it was because I added to the index where the image value &gt; thresh,    I should've subtracted instead. Note: Don't do that again.     Threshold value doesn't have a safety in terms of cosmic rays or single pixels with absurdly high    values. Got to have some sort of catch here just in case.  ");
  
  libdata[libdataItem++] = new Array("obsolete_code/centerv4.html#scanboxv2", "scanboxv2", 'routine in <a href="obsolete_code/centerv4.html">centerv4.pro</a>', "centerv4.pro", "", "scanboxv2", "       Boxit was too computation-intensive, this is more a rough boxing program.    Compared to scanbox, scanboxv2 uses knowledge of approx size of sun to only scan    until it hits the sun then moves the crop borders based on the given parameters.   ", "file       File to be read in  time       Print the elapsed time  meanthreshscan_width       How far apart the scanning should be. Fine tuned compared to scanbox  savstep       The number of steps to include in the fits file.        savstep = 1: cropped image        savstep = 2: long strips        savstep = 3: limb strips        savstep = 4: center of mask  saveonly       Determines whether or not savstep saves steps leading up to savstep or just savstep  sigmavalue       Sets the threshold to be:        max(image) - sigmavalue*stddev(image)  storestruct       Toggles whether or not we want to save data at all   ", "          -1", "       cropped = scanboxv2(file='$PWD/sep11_postit/104533_20120912_124300_353097_0.bin',/time)   ");
  
  libdata[libdataItem++] = new Array("obsolete_code/centerv4.html#comp2v2", "comp2v2", 'routine in <a href="obsolete_code/centerv4.html">centerv4.pro</a>', "centerv4.pro", "", "comp2v2", "           Finds the centroid by summing all values over a certain threshold and averaging them.        Differs from comp2 in that this one uses a much, much more beautiful way to create the mask   ", "file       File to be read in  time       Prints the elapsed time  plot       Makes a nice plot  sigmavalue       Sets the threshold to be:        max(image) - sigmavalue*stddev(image)         Having a sigmavalue=2 makes the pixels chosen from the sun more circular than sigmavalue=1   xpos       X center  ypos       Y center  thresh       Threshold used to select pixels   ", "          -1", "           comp2v2,xpos,ypos,thresh,time=time,sigmavalue=sigmavalue,file=file   ");
  
  libdata[libdataItem++] = new Array("obsolete_code/centerv4.html#comp3", "comp3", 'routine in <a href="obsolete_code/centerv4.html">centerv4.pro</a>', "centerv4.pro", "", "comp3", "           Looks only at the positions of pixels above a threshold and doen't care        About their actual values, like in comp2v2. More  accurate  to find the        center than comp2v2 since this gives all solar pixels equal weighting.   ", "file       File to be read in  time       Prints the elapsed time  plot       Makes a nice plot  sigmavalue       Sets the threshold to be:        max(image) - sigmavalue*stddev(image)         Having a sigmavalue=2 makes the pixels chosen from the sun more circular than sigmavalue=1   xpos       X center  ypos       Y center  thresh       Threshold used to select pixels   ", "          -1", "           comp3,xpos,ypos,thresh,time=time,sigmavalue=sigmavalue,file=file   ");
  
  libdata[libdataItem++] = new Array("obsolete_code/centerv4.html#comp3v2", "comp3v2", 'routine in <a href="obsolete_code/centerv4.html">centerv4.pro</a>', "centerv4.pro", "", "comp3v2", "           Looks only at the positions of pixels above a threshold and doen't care        about their actual values, like in comp2v2. Different from comp3 in that this        version uses sort instead of the 2d array where   ", "file       File to be read in  time       Prints the elapsed time  plot       Makes a nice plot  sigmavalue       Sets the threshold to be:        max(image) - sigmavalue*stddev(image)         Having a sigmavalue=2 makes the pixels chosen from the sun more circular than sigmavalue=1   xpos       X center  ypos       Y center  thresh       Threshold used to select pixels   ", "          -1", "           comp3,xpos,ypos,thresh,time=time,sigmavalue=sigmavalue,file=file   ");
  
  libdata[libdataItem++] = new Array("obsolete_code/centerv4.html#comp4", "comp4", 'routine in <a href="obsolete_code/centerv4.html">centerv4.pro</a>', "centerv4.pro", "", "comp4", "           Only used to save the strips into structures.  ", "file       File to be read in  time       Prints the elapsed time  scan_width       Indicates how far apart to scan  sigmavalue       Sets the threshold to be: <span class= code-output >max(image) - sigmavalue*stddev(image)</span>  savstep       The number of steps to include in the fits file.        savstep = 1: cropped image        savstep = 2: long strips        savstep = 3: limb strips        savstep = 4: center of mask  saveonly       Determines whether or not savstep saves steps leading up to savstep or just savstep  storestruct       Toggles whether or not we want to save data at all   xstrips       Structure containing row strips  ystrips       Structure containing column strips  thresh       Threshold used to select pixels   ", "          -1", "           comp4,xstrips,ystrips,thresh,/time,scan_width=10   ");
  
  libdata[libdataItem++] = new Array("obsolete_code/centerv4.html#comp4v2", "comp4v2", 'routine in <a href="obsolete_code/centerv4.html">centerv4.pro</a>', "centerv4.pro", "", "comp4v2", "           Only used to save the strips into structures. Different from comp4 in that comp4v2            only saves 5 strips centered around the solar diameter to reduce the amount of limb-            darkened pixels and to make the polynomial-fitted limbs more-or-less look similar.  ", "file       File to be read in  time       Prints the elapsed time  scan_width       Indicates how far apart to scan  sigmavalue       Sets the threshold to be: <span class= code-output >max(image) - sigmavalue*stddev(image)</span>  savstep       The number of steps to include in the fits file.        savstep = 1: cropped image        savstep = 2: long strips        savstep = 3: limb strips        savstep = 4: center of mask  saveonly       Determines whether or not savstep saves steps leading up to savstep or just savstep  nstrips       How many strips to select, centered around the row/col diameter  storestruct       Toggles whether or not we want to save data at all   xstrips       Structure containing row strips  ystrips       Structure containing column strips  thresh       Threshold used to select pixels   ", "          -1", "           comp4v2,xstrips,ystrips,thresh,/time,scan_width=10   ");
  
  libdata[libdataItem++] = new Array("obsolete_code/centerv4.html#comp5v3", "comp5v3", 'routine in <a href="obsolete_code/centerv4.html">centerv4.pro</a>', "centerv4.pro", "", "comp5v3", "           Only used to save the cut-down strips into structures. Differs from comp5v2            in that this one uses comp4v2. That's it.   ", "file       File to be read in  time       Prints the elapsed time  ministrip_length       How long the total array of the cut-down strip will be  scan_width       Indicates how far apart to scan  sigmavalue       Sets the threshold to be:     max(image) - sigmavalue*stddev(image)   savstep       The number of steps to include in the fits file.        savstep = 1: cropped image        savstep = 2: long strips        savstep = 3: limb strips        savstep = 4: center of mask  saveonly       Determines whether or not savstep saves steps leading up to savstep or just savstep  storestruct       Toggles whether or not we want to save data at all   xstrips       Contains the row sctructures of strips  ystrips       Contains the col sctructures of strips  thresh       Threshold value used   ", "          -1", "           comp5v3,xstrips,ystrips,thresh      Exactly how much data should be stored in a structure? Since we're interested in saving space,    doesn't make sense to repeat any data in the structures.  ");
  
  libdata[libdataItem++] = new Array("obsolete_code/centerv4.html#comp6v2", "comp6v2", 'routine in <a href="obsolete_code/centerv4.html">centerv4.pro</a>', "centerv4.pro", "", "comp6v2", "       Uses the data from comp5v3 and draws a linear/quadratic/cubic/etc. function to find midpoint.        Order is the power of the function. Different from comp6 in that this method uses fz_roots()        and comp6 uses spline to interpolate where the limb crosses a threshold. Imports the strips        from comp5v3.   ", "file       File to be read in  order       What order polynomial to use for POLY_FIT()  time       Prints the elapsed time  scan_width       Ondicates how far apart to scan  ministrip_length       How long the trimmed down strip will be  plot       If set, makes some nice plots.  sigmavalue       Sets the threshold to be:     max(image) - sigmavalue*stddev(image)   savstep       The number of steps to include in the fits file.        savstep = 1: cropped image        savstep = 2: long strips        savstep = 3: limb strips        savstep = 4: center of mask  saveonly       Determines whether or not savstep saves steps leading up to savstep or just savstep  storestruct       Toggles whether or not we want to save data at all   xpos       X Center  ypos       Y Center   ", "          -1", "           comp6,xpos,ypos,order=3   ");
  
  

libdata[libdataItem++] = new Array("obsolete_code/closest.html", "closest.pro", '.pro file in <a href="obsolete_code/dir-overview.html">obsolete_code/ directory</a>', "closest.pro", "", "", "", "", "          -1", "");
  
  
  libdata[libdataItem++] = new Array("obsolete_code/closest.html#closest", "closest", 'routine in <a href="obsolete_code/closest.html">closest.pro</a>', "closest.pro", "", "closest", " NAME:    CLOSEST   PURPOSE:    Find the element of ARRAY that is the closest in value to VALUE   CATEGORY:    utilities   CALLING SEQUENCE:    index = CLOSEST(array,value)   INPUTS:    ARRAY = the array to search    VALUE = the value we want to find the closest approach to   OUTPUTS:    INDEX = the index into ARRAY which is the element closest to VALUE     OPTIONAL PARAMETERS:    none   COMMON BLOCKS:    none.  SIDE EFFECTS:    none.  MODIFICATION HISTORY:    Written by: Trevor Harris, Physics Dept., University of Adelaide,        July, 1990.   ", "arrayvalue", "          -1", "");
  
  

libdata[libdataItem++] = new Array("./comparemethods.html", "comparemethods.pro", '.pro file in <a href="./dir-overview.html">./ directory</a>', "comparemethods.pro", "", "", "", "", "          -1", "");
  
  
  libdata[libdataItem++] = new Array("./comparemethods.html#comparemethods", "comparemethods", 'routine in <a href="./comparemethods.html">comparemethods.pro</a>', "comparemethods.pro", "", "comparemethods", "       Compare each of our 3 methods to see how different they really are   ", "", "          -1", "");
  
  

libdata[libdataItem++] = new Array("./cropit.html", "cropit.pro", '.pro file in <a href="./dir-overview.html">./ directory</a>', "cropit.pro", "", "", "", "", "          -1", "");
  
  
  libdata[libdataItem++] = new Array("./cropit.html#cropit", "cropit", 'routine in <a href="./cropit.html">cropit.pro</a>', "cropit.pro", "", "cropit", "       Loads a triple-sun image and crops out selected regions one-by-one.   ", "region           Which sun out of the three to find the center of. Defaults to the brightest sun  time         Print the elapsed time   inputarr           Starting image to crop  location           Structure containing the cropped image along with the X and Y distances from origin  scan_width           How apart the scans are for minicrop().  sigmavalue          Sets the threshold to be: <span class= code-output >max(image) - sigmavalue*stddev(image)</span>  sundiam           Approximate diameter of sun in pixels. (Based on bmp image)   ", "          -1", "       cropped = cropit(inputarr,scan_width,sigmavalue,sundiam,region=1)   ");
  
  

libdata[libdataItem++] = new Array("./data__center.html", "data__center.pro", '.pro file in <a href="./dir-overview.html">./ directory</a>', "data__center.pro", "", "", "", "", "          -1", "");
  
  
  libdata[libdataItem++] = new Array("./data__center.html#data::center", "data::center", 'routine in <a href="./data__center.html">data__center.pro</a>', "data__center.pro", "", "data::center", "       Had to make a new version of comp3 because the old one called scanbox() by default   ", "region           Which sun out of the three to find the center of. Defaults to the brightest sun  time           Print the elapsed time  file           What file to find 4 centers for  scan_width           How apart the scans are for minicrop().  sigmavalue          Sets the threshold to be: <span class= code-output >max(image) - sigmavalue*stddev(image)</span>  sundiam           Approximate diameter of sun in pixels. (Based on bmp image)   ", "          -1", "");
  
  

libdata[libdataItem++] = new Array("./data__combine.html", "data__combine.pro", '.pro file in <a href="./dir-overview.html">./ directory</a>', "data__combine.pro", "", "", "", "", "          -1", "");
  
  
  libdata[libdataItem++] = new Array("./data__combine.html#data::combine", "data::combine", 'routine in <a href="./data__combine.html">data__combine.pro</a>', "data__combine.pro", "", "data::combine", "       Finds the centers of a triple-sun image and loads all relevant information        including offsets and angles into a new structure.   ", "time           Outputs how much time the program takes   file           What file to find 4 centers for  scan_width           How apart the scans are for minicrop().  sigmavalue          Sets the threshold to be: <span class= code-output >max(image) - sigmavalue*stddev(image)</span>  sundiam           Approximate diameter of sun in pixels. (Based on bmp image)   ", "          -1", "");
  
  

libdata[libdataItem++] = new Array("./data__crop.html", "data__crop.pro", '.pro file in <a href="./dir-overview.html">./ directory</a>', "data__crop.pro", "", "", "", "", "          -1", "");
  
  
  libdata[libdataItem++] = new Array("./data__crop.html#data::crop", "data::crop", 'routine in <a href="./data__crop.html">data__crop.pro</a>', "data__crop.pro", "", "data::crop", "       Loads a triple-sun image and crops out selected regions one-by-one.   ", "timeregion           Which sun out of the three to find the center of. Defaults to the brightest sun   file           What file to find 4 centers for  scan_width           How apart the scans are for minicrop().  sigmavalue          Sets the threshold to be: <span class= code-output >max(image) - sigmavalue*stddev(image)</span>  sundiam           Approximate diameter of sun in pixels. (Based on bmp image)   ", "          -1", "");
  
  

libdata[libdataItem++] = new Array("./data__define.html", "data__define.pro", '.pro file in <a href="./dir-overview.html">./ directory</a>', "data__define.pro", "", "", "", "", "          -1", "");
  
  
  libdata[libdataItem++] = new Array("./data__define.html#data::init", "data::init", 'routine in <a href="./data__define.html">data__define.pro</a>', "data__define.pro", "", "data::init", "", "", "          -1", "");
  
  libdata[libdataItem++] = new Array("./data__define.html#data::set", "data::set", 'routine in <a href="./data__define.html">data__define.pro</a>', "data__define.pro", "", "data::set", "", "value", "          -1", "");
  
  libdata[libdataItem++] = new Array("./data__define.html#data::get", "data::get", 'routine in <a href="./data__define.html">data__define.pro</a>', "data__define.pro", "", "data::get", "", "value", "          -1", "");
  
  libdata[libdataItem++] = new Array("./data__define.html#data::read", "data::read", 'routine in <a href="./data__define.html">data__define.pro</a>', "data__define.pro", "", "data::read", "", "file", "          -1", "");
  
  libdata[libdataItem++] = new Array("./data__define.html#data__define", "data__define", 'routine in <a href="./data__define.html">data__define.pro</a>', "data__define.pro", "", "data__define", "", "", "          -1", "");
  
  

libdata[libdataItem++] = new Array("./data__minicrop.html", "data__minicrop.pro", '.pro file in <a href="./dir-overview.html">./ directory</a>', "data__minicrop.pro", "", "", "", "", "          -1", "");
  
  
  libdata[libdataItem++] = new Array("./data__minicrop.html#data::minicrop", "data::minicrop", 'routine in <a href="./data__minicrop.html">data__minicrop.pro</a>', "data__minicrop.pro", "", "data::minicrop", "       Figures out where the boundaries are depending solely on the threshold.   ", "time           Print the elapsed time  scan_width           How apart the scans are for minicrop().  sundiam           Approximate diameter of sun in pixels. (Based on bmp image)  temparr           2D array to check boundary limits of 		thresh : in, required, type=float 			What the minimum threshold will be for scanning  thresh", "          -1", "");
  
  

libdata[libdataItem++] = new Array("obsolete_code/doesntfindanything.html", "doesntfindanything.pro", '.pro file in <a href="obsolete_code/dir-overview.html">obsolete_code/ directory</a>', "doesntfindanything.pro", "", "", "", "", "          -1", "");
  
  
  libdata[libdataItem++] = new Array("obsolete_code/doesntfindanything.html#doesntfindanything", "doesntfindanything", 'routine in <a href="obsolete_code/doesntfindanything.html">doesntfindanything.pro</a>', "doesntfindanything.pro", "", "doesntfindanything", "			Finds the centroid by looking at strips of data   ", "filexposypos", "          -1", "			comp4,xpos,ypos   			xpos - x center 			ypos - y center   ");
  
  

libdata[libdataItem++] = new Array("./getstruct.html", "getstruct.pro", '.pro file in <a href="./dir-overview.html">./ directory</a>', "getstruct.pro", "", "", "", "", "          -1", "");
  
  
  libdata[libdataItem++] = new Array("./getstruct.html#getstruct", "getstruct", 'routine in <a href="./getstruct.html">getstruct.pro</a>', "getstruct.pro", "", "getstruct", "       Finds the centers of a triple-sun image and loads all relevant information        including offsets and angles into a new structure.   ", "time           Outputs how much time the program takes  file           What file to find 4 centers for  struct           Structure containing the centers and cropped images of all 3 suns  scan_width           How apart the scans are for minicrop().  sigmavalue          Sets the threshold to be: <span class= code-output >max(image) - sigmavalue*stddev(image)</span>  sundiam           Approximate diameter of sun in pixels. (Based on bmp image)   ", "          -1", "");
  
  

libdata[libdataItem++] = new Array("./minicrop.html", "minicrop.pro", '.pro file in <a href="./dir-overview.html">./ directory</a>', "minicrop.pro", "", "", "", "", "          -1", "");
  
  
  libdata[libdataItem++] = new Array("./minicrop.html#minicrop", "minicrop", 'routine in <a href="./minicrop.html">minicrop.pro</a>', "minicrop.pro", "", "minicrop", "       Small function to keep code small in cropit. Finds the row where the threshold is crossed        and then steps back in the x-direction to find the left side of the cropping box. Skips        over the sun by a predetermined value then crops out the sun.   ", "time           Print the elapsed time  temparr           2D array to check boundary limits of  rowscan           Where to crop the rows from  colscan           Where to crop the columns from  rowendscan           Where to crop the rows to  colendscan           Where to crop the columns to  scan_width           How apart the scans are for minicrop().  sundiam           Approximate diameter of sun in pixels. (Based on bmp image)  thresh           What the minimum threshold will be for scanning   ", "          -1", "");
  
  

libdata[libdataItem++] = new Array("obsolete_code/newbox.html", "newbox.pro", '.pro file in <a href="obsolete_code/dir-overview.html">obsolete_code/ directory</a>', "newbox.pro", "", "", "", "", "          -1", "");
  
  
  libdata[libdataItem++] = new Array("obsolete_code/newbox.html#newbox", "newbox", 'routine in <a href="obsolete_code/newbox.html">newbox.pro</a>', "newbox.pro", "", "newbox", "			Since I kind of fucked up boxit, doing another one.  ", "filebmp", "          -1", "		newbox,file='$PWD/sep11_postit/104533_20120912_124300_353097_0.bin'  ");
  
  

libdata[libdataItem++] = new Array("./nutri.html", "nutri.pro", '.pro file in <a href="./dir-overview.html">./ directory</a>', "nutri.pro", "   JEREN SUZUKI: <span class= code-output >   Space Sciences Laboratory</span> <span class= code-output >   7 Gauss Way</span> <span class= code-output >   Berkeley, CA 94720 USA</span> <span class= code-output >   E-mail: jsuzuki@ssl.berkeley.edu</span>  ", "", " NAME:    NUTRI   PURPOSE:    Finds the center of 3 suns in a single image. Currently limited to a .bmp test image.   ", "", "          -1", "");
  

libdata[libdataItem++] = new Array("./nutricenter.html", "nutricenter.pro", '.pro file in <a href="./dir-overview.html">./ directory</a>', "nutricenter.pro", "", "", "", "", "          -1", "");
  
  
  libdata[libdataItem++] = new Array("./nutricenter.html#data::init", "data::init", 'routine in <a href="./nutricenter.html">nutricenter.pro</a>', "nutricenter.pro", "", "data::init", "", "", "          -1", "");
  
  libdata[libdataItem++] = new Array("./nutricenter.html#data::set", "data::set", 'routine in <a href="./nutricenter.html">nutricenter.pro</a>', "nutricenter.pro", "", "data::set", "", "value", "          -1", "");
  
  libdata[libdataItem++] = new Array("./nutricenter.html#data::get", "data::get", 'routine in <a href="./nutricenter.html">nutricenter.pro</a>', "nutricenter.pro", "", "data::get", "", "value", "          -1", "");
  
  libdata[libdataItem++] = new Array("./nutricenter.html#data__define", "data__define", 'routine in <a href="./nutricenter.html">nutricenter.pro</a>', "nutricenter.pro", "", "data__define", "", "", "          -1", "");
  
  libdata[libdataItem++] = new Array("./nutricenter.html#minicrop::init", "minicrop::init", 'routine in <a href="./nutricenter.html">nutricenter.pro</a>', "nutricenter.pro", "", "minicrop::init", "", "scan_widthsundiamthreshtemparrtime", "          -1", "");
  
  libdata[libdataItem++] = new Array("./nutricenter.html#boundaries::cleanup", "boundaries::cleanup", 'routine in <a href="./nutricenter.html">nutricenter.pro</a>', "nutricenter.pro", "", "boundaries::cleanup", "", "", "          -1", "");
  
  libdata[libdataItem++] = new Array("./nutricenter.html#minicrop__define", "minicrop__define", 'routine in <a href="./nutricenter.html">nutricenter.pro</a>', "nutricenter.pro", "", "minicrop__define", "", "", "          -1", "");
  
  libdata[libdataItem++] = new Array("./nutricenter.html#boundaries::init", "boundaries::init", 'routine in <a href="./nutricenter.html">nutricenter.pro</a>', "nutricenter.pro", "", "boundaries::init", "   Loads a triple-sun image and crops out selected regions one-by-one.   ", "regioninputarrscan_width       How far apart the scanning should be.  sundiamsigmavalue       Sets the threshold to be: <span class= code-output >   max(image) - sigmavalue*stddev(image)</span>  time       Print the elapsed time  ", "          -1", "       cropped = boundaries(region=1,inputarr=image,sundiam=sundiam,scan_width=scan_width,$            thresh=thresh)   ");
  
  libdata[libdataItem++] = new Array("./nutricenter.html#boundaries::cleanup", "boundaries::cleanup", 'routine in <a href="./nutricenter.html">nutricenter.pro</a>', "nutricenter.pro", "", "boundaries::cleanup", "", "", "          -1", "");
  
  libdata[libdataItem++] = new Array("./nutricenter.html#boundaries__define", "boundaries__define", 'routine in <a href="./nutricenter.html">nutricenter.pro</a>', "nutricenter.pro", "", "boundaries__define", "", "", "          -1", "");
  
  libdata[libdataItem++] = new Array("./nutricenter.html#cropit::init", "cropit::init", 'routine in <a href="./nutricenter.html">nutricenter.pro</a>', "nutricenter.pro", "", "cropit::init", "   Loads a triple-sun image and crops out selected regions one-by-one.   ", "regionscan_width       How far apart the scanning should be.  sundiamsigmavalue       Sets the threshold to be: <span class= code-output >   max(image) - sigmavalue*stddev(image)</span>  time       Print the elapsed time  ", "          -1", "       cropped = cropit(region=1,inputarr=image,sundiam=sundiam,scan_width=scan_width,$            thresh=thresh)   ");
  
  libdata[libdataItem++] = new Array("./nutricenter.html#cropit::cleanup", "cropit::cleanup", 'routine in <a href="./nutricenter.html">nutricenter.pro</a>', "nutricenter.pro", "", "cropit::cleanup", "", "", "          -1", "");
  
  libdata[libdataItem++] = new Array("./nutricenter.html#cropit__define", "cropit__define", 'routine in <a href="./nutricenter.html">nutricenter.pro</a>', "nutricenter.pro", "", "cropit__define", "", "", "          -1", "");
  
  libdata[libdataItem++] = new Array("./nutricenter.html#centerit::init", "centerit::init", 'routine in <a href="./nutricenter.html">nutricenter.pro</a>', "nutricenter.pro", "", "centerit::init", "       Had to make a new version of comp3 because the old one called scanbox() by default   ", "file           What file to load in  time           Print the elapsed time  sigmavalue           Sets the threshold to be: <span class= code-output >   max(image) - sigmavalue*stddev(image)</span>  region           Which sun out of the three to find the center of. Defaults to the brightest sun  ", "          -1", "");
  
  libdata[libdataItem++] = new Array("./nutricenter.html#centerit::cleanup", "centerit::cleanup", 'routine in <a href="./nutricenter.html">nutricenter.pro</a>', "nutricenter.pro", "", "centerit::cleanup", "", "", "          -1", "");
  
  libdata[libdataItem++] = new Array("./nutricenter.html#centerit__define", "centerit__define", 'routine in <a href="./nutricenter.html">nutricenter.pro</a>', "nutricenter.pro", "", "centerit__define", "", "", "          -1", "");
  
  libdata[libdataItem++] = new Array("./nutricenter.html#getstruct::init", "getstruct::init", 'routine in <a href="./nutricenter.html">nutricenter.pro</a>', "nutricenter.pro", "", "getstruct::init", "       Finds the centers of a triple-sun image and loads all relevant information        including offsets and angles into a new structure.   ", "scan_width           How apart the scans are for minicrop(). Overrides defaults in tribox().  file           What file to find 4 centers for  sigmavalue          Sets the threshold to be: <span class= code-output >max(image) - sigmavalue*stddev(image)</span>   time           Outputs how much time the program takes  ", "          -1", "");
  
  libdata[libdataItem++] = new Array("./nutricenter.html#getstruct::minicrop", "getstruct::minicrop", 'routine in <a href="./nutricenter.html">nutricenter.pro</a>', "nutricenter.pro", "", "getstruct::minicrop", "", "scan_widthsundiamthreshtemparrtime", "          -1", "");
  
  libdata[libdataItem++] = new Array("./nutricenter.html#getstruct::cleanup", "getstruct::cleanup", 'routine in <a href="./nutricenter.html">nutricenter.pro</a>', "nutricenter.pro", "", "getstruct::cleanup", "", "", "          -1", "");
  
  libdata[libdataItem++] = new Array("./nutricenter.html#getstruct__define", "getstruct__define", 'routine in <a href="./nutricenter.html">nutricenter.pro</a>', "nutricenter.pro", "", "getstruct__define", "", "", "          -1", "");
  
  libdata[libdataItem++] = new Array("./nutricenter.html#nutricenter", "nutricenter", 'routine in <a href="./nutricenter.html">nutricenter.pro</a>', "nutricenter.pro", "", "nutricenter", "       Finds the centers of a triple-sun image and loads all relevant information        including offsets and angles into a new structure.   ", "scan_width           How apart the scans are for minicrop(). Overrides defaults in tribox().  file           What file to find 4 centers for  sigmavalue          Sets the threshold to be: <span class= code-output >max(image) - sigmavalue*stddev(image)</span>   time           Outputs how much time the program takes  ", "          -1", "");
  
  

libdata[libdataItem++] = new Array("./quantifyblur.html", "quantifyblur.pro", '.pro file in <a href="./dir-overview.html">./ directory</a>', "quantifyblur.pro", "", "", "", "", "          -1", "");
  
  
  libdata[libdataItem++] = new Array("./quantifyblur.html#quantifyblur", "quantifyblur", 'routine in <a href="./quantifyblur.html">quantifyblur.pro</a>', "quantifyblur.pro", "", "quantifyblur", "       Quantify how many pixels it takes to make transitions.         Black   -&gt;  1-sigma        1-sigma -&gt;  White        Black   -&gt;  White        over x & y  ", "", "          -1", "");
  
  

libdata[libdataItem++] = new Array("obsolete_code/rb.html", "rb.pro", '.pro file in <a href="obsolete_code/dir-overview.html">obsolete_code/ directory</a>', "rb.pro", "   JEREN SUZUKI: <span class= code-output >   Space Sciences Laboratory</span> <span class= code-output >   7 Gauss Way</span> <span class= code-output >   Berkeley, CA 94720 USA</span> <span class= code-output >   E-mail: jsuzuki@ssl.berkeley.edu</span>  ", "", " At the end of the day this should find the center of the sun using a variety of (working) methods   Compiled the doc with idldoc,root='/Users/jerensuzuki/Documents/suncentering', $  output='rbdoc',format_style='rst',/user,/quiet,markup_style='rst'   ", "", "          -1", "");
  
  
  libdata[libdataItem++] = new Array("obsolete_code/rb.html#scanbox", "scanbox", 'routine in <a href="obsolete_code/rb.html">rb.pro</a>', "rb.pro", "", "scanbox", "       Boxit was too computation-intensive, this is more a rough boxing program   ", "file       File to be read in  time       Print the elapsed time  meanthresh       Use the average of the image as the threshold value. Otherwise, use half of max  scan_width       How far apart the scanning should be   ", "          -1", "       cropped = scanbox(file='$PWD/sep11_postit/104533_20120912_124300_353097_0.bin',/time)   ");
  
  libdata[libdataItem++] = new Array("obsolete_code/rb.html#comp2", "comp2", 'routine in <a href="obsolete_code/rb.html">rb.pro</a>', "rb.pro", "", "comp2", "           Finds the centroid by summing all values over a certain threshold and averaging them   ", "file       File to be read in  time       Prints the elapsed time  plot       Makes a nice plot  sigmavalue       Sets the threshold to be max(image) - sigmavalue*stddev(image)   xpos       X center  ypos       Y center  thresh       Threshold used to select pixels   ", "          -1", "           comp2,xpos,ypos,/plot   ");
  
  libdata[libdataItem++] = new Array("obsolete_code/rb.html#comp4", "comp4", 'routine in <a href="obsolete_code/rb.html">rb.pro</a>', "rb.pro", "", "comp4", "           Only used to save the strips into structures.  ", "file       File to be read in  time       Prints the elapsed time  scan_width       Indicates how far apart to scan  sigmavalue       Sets the threshold to be max(image) - sigmavalue*stddev(image)   xstrips       Structure containing row strips  ystrips       Structure containing column strips  thresh       Threshold used to select pixels   ", "          -1", "           comp4,xstrips,ystrips,thresh,/time,scan_width=10,/thalf   ");
  
  libdata[libdataItem++] = new Array("obsolete_code/rb.html#comp5", "comp5", 'routine in <a href="obsolete_code/rb.html">rb.pro</a>', "rb.pro", "", "comp5", "           Only used to save the cut-down strips into structures.   ", "file       File to be read in  time       Prints the elapsed time  ministrip_length       How long the total array of the cut-down strip will be  scan_width       Indicates how far apart to scan  sigmavalue       Sets the threshold to be max(image) - sigmavalue*stddev(image)   xstrips       Contains the row sctructures of strips  ystrips       Contains the col sctructures of strips  thresh       Threshold value used   ", "          -1", "           comp5,xstrips,ystrips,thresh   ");
  
  libdata[libdataItem++] = new Array("obsolete_code/rb.html#comp6", "comp6", 'routine in <a href="obsolete_code/rb.html">rb.pro</a>', "rb.pro", "", "comp6", "       Uses the data from comp5 and draws a linear/quadratic/cubic function to find midpoint.        Order is the power of the function.   ", "file       File to be read in  order       What order polynomial to use for POLY_FIT()  time       Prints the elapsed time  scan_width       Ondicates how far apart to scan  ministrip_length       How long the trimmed down strip will be  plot       If set, makes some nice plots.  sigmavalue       Sets the threshold to be max(image) - sigmavalue*stddev(image)   xpos       X Center  ypos       Y Center   ", "          -1", "           comp6,xpos,ypos,order=3   ");
  
  libdata[libdataItem++] = new Array("obsolete_code/rb.html#cc", "cc", 'routine in <a href="obsolete_code/rb.html">rb.pro</a>', "rb.pro", "", "cc", "", "", "          -1", "");
  
  libdata[libdataItem++] = new Array("obsolete_code/rb.html#rb", "rb", 'routine in <a href="obsolete_code/rb.html">rb.pro</a>', "rb.pro", "", "rb", "       Finds the centroid using a variety of compression levels  ", "file       File to be read in  ministrip_length       How long the cut-down strip is  scan_width       How far apart the scans are  time       Prints the elapsed time  order       What order polynomial to use for POLY_FIT()  plot       If set, makes some nice plots.  sigmavalue       Sets the threshold to be max(image) - sigmavalue*stddev(image)   ", "          -1", "   More Keywords/parameters     How strict are we going to be for the outputs of each compression file?   ");
  
  

libdata[libdataItem++] = new Array("./scatter.html", "scatter.pro", '.pro file in <a href="./dir-overview.html">./ directory</a>', "scatter.pro", "   JEREN SUZUKI: <span class= code-output >   Space Sciences Laboratory</span> <span class= code-output >   7 Gauss Way</span> <span class= code-output >   Berkeley, CA 94720 USA</span> <span class= code-output >   E-mail: jsuzuki@ssl.berkeley.edu</span>  ", "", " Bunch of code deisgned to make sure the things I write are doing the things I want   Compiled the doc with idldoc,root='/Users/jerensuzuki/Documents/suncentering', $  output='rbdoc',format_style='rst',/user,/quiet,markup_style='rst'   ", "", "          -1", "");
  
  
  libdata[libdataItem++] = new Array("./scatter.html#cc", "cc", 'routine in <a href="./scatter.html">scatter.pro</a>', "scatter.pro", "", "cc", "", "", "          -1", "");
  
  libdata[libdataItem++] = new Array("./scatter.html#makesomescatplots", "makesomescatplots", 'routine in <a href="./scatter.html">scatter.pro</a>', "scatter.pro", "", "makesomescatplots", "   Makes a few scatter plots based on varying parameters. Sucks that the values are hardcoded.     Also, as of Nov 14, these are all wrong.  ", "", "          -1", "");
  
  libdata[libdataItem++] = new Array("./scatter.html#scatter", "scatter", 'routine in <a href="./scatter.html">scatter.pro</a>', "scatter.pro", "", "scatter", "   Abbreviated form of  Make Some More Scatter Plots     Making more scat plots now that I've fixed my program and am now moving onto bmp images   ", "", "          -1", "");
  
  

libdata[libdataItem++] = new Array("obsolete_code/tmp.html", "tmp.pro", '.pro file in <a href="obsolete_code/dir-overview.html">obsolete_code/ directory</a>', "tmp.pro", "", "", "", "", "          -1", "");
  

libdata[libdataItem++] = new Array("./tribox.html", "tribox.pro", '.pro file in <a href="./dir-overview.html">./ directory</a>', "tribox.pro", "", "", "", "", "          -1", "");
  
  
  libdata[libdataItem++] = new Array("./tribox.html#tribox", "tribox", 'routine in <a href="./tribox.html">tribox.pro</a>', "tribox.pro", "", "tribox", "       The triple-sun variant of scanbox(), the goal of this is to provide cropped regions for        each centering method to compute the centers of.   ", "region           Which sun out of the three to find the center of. Defaults to the brightest sun  time           Print the elapsed time   file           File to be read in  scan_width           How apart the scans are for minicrop().  sigmavalue          Sets the threshold to be: <span class= code-output >max(image) - sigmavalue*stddev(image)</span>  sundiam           Approximate diameter of sun in pixels. (Based on bmp image)   ", "          -1", "       cropped = scanbox(file='triplesun.bmp',/time)   ");
  
  

libdata[libdataItem++] = new Array("./tricenter.html", "tricenter.pro", '.pro file in <a href="./dir-overview.html">./ directory</a>', "tricenter.pro", "   JEREN SUZUKI: <span class= code-output >   Space Sciences Laboratory</span> <span class= code-output >   7 Gauss Way</span> <span class= code-output >   Berkeley, CA 94720 USA</span> <span class= code-output >   E-mail: jsuzuki@ssl.berkeley.edu</span>  ", "", " NAME:    TRICENTER   PURPOSE:    Finds the center of 3 suns in a single image. Currently limited to a .bmp test image.   ", "", "          -1", "");
  

libdata[libdataItem++] = new Array("./trimask.html", "trimask.pro", '.pro file in <a href="./dir-overview.html">./ directory</a>', "trimask.pro", "", "", "", "", "          -1", "");
  
  
  libdata[libdataItem++] = new Array("./trimask.html#trimask", "trimask", 'routine in <a href="./trimask.html">trimask.pro</a>', "trimask.pro", "", "trimask", "       Had to make a new version of comp3 because the old one called scanbox() by default   ", "region           Which sun out of the three to find the center of. Defaults to the brightest sun  time           Print the elapsed time  file           What file to load in  xpos           Computed X position of center  ypos           Computed Y position of center  scan_width           How apart the scans are for minicrop().  sigmavalue          Sets the threshold to be: <span class= code-output >max(image) - sigmavalue*stddev(image)</span>  sundiam           Approximate diameter of sun in pixels. (Based on bmp image)  thresh           Threshold used in finding center   ", "          -1", "");
  
  


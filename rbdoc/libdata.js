/* Index used for searching */
/*
   Fields used:
     url, name, type, filename, authors, routine name, comments, parameters,
     categories, and attributes
*/
title = "Documentation for /Users/jerensuzuki/Documents/suncentering/";
subtitle = "Generated by IDLdoc";
libdata = new Array();
libdataItem = 0;



libdata[libdataItem++] = new Array("obsolete_code/alpha.html", "alpha.pro", '.pro file in <a href="obsolete_code/dir-overview.html">obsolete_code/ directory</a>', "alpha.pro", "   JEREN SUZUKI: <span class= code-output >   Space Sciences Laboratory</span> <span class= code-output >   7 Gauss Way</span> <span class= code-output >   Berkeley, CA 94720 USA</span> <span class= code-output >   E-mail: jsuzuki@ssl.berkeley.edu</span>  ", "", " NAME:    KAHUNA   PURPOSE:    Finds the center of 3 suns in a single image. Currently limited to a .bmp test image. Instead    of scanning rows to crop, scans in a circle. Using solar centers, identifies fiducial positions.   ", "", "          -1", "");
  
  
  libdata[libdataItem++] = new Array("obsolete_code/alpha.html#alpha", "alpha", 'routine in <a href="obsolete_code/alpha.html">alpha.pro</a>', "alpha.pro", "", "alpha", "       This version uses limb fitting opposed to masking (tricenter).   ", "time           Outputs how much time the program takes   ", "          -1", "       Find and ISOLATE fiducials, not just mask them out         Ignore center if sun is too close to edge (or if when cropping, we cro outside wholeimage)         Use 25% of median(image)        Um, let's not (Apr24)         Make sure program doesn't freak out when sun isn't in POV   ");
  
  

libdata[libdataItem++] = new Array("albert_version/alpha.html", "alpha.pro", '.pro file in <a href="albert_version/dir-overview.html">albert_version/ directory</a>', "alpha.pro", "", "", "", "", "          -1", "");
  
  
  libdata[libdataItem++] = new Array("albert_version/alpha.html#alpha", "alpha", 'routine in <a href="albert_version/alpha.html">alpha.pro</a>', "alpha.pro", "", "alpha", "      Finds the center of N whole suns and M partial suns using limb-fitting for the whole suns and simple centroiding for the partial suns   ", "", "          -1", "       NONE, BRAH   idldoc,root='/Users/jerensuzuki/Documents/suncentering', output='rbdoc',format_style='rst',/user,/quiet,markup_style='rst'  ");
  
  

libdata[libdataItem++] = new Array("obsolete_code/barkbark.html", "barkbark.pro", '.pro file in <a href="obsolete_code/dir-overview.html">obsolete_code/ directory</a>', "barkbark.pro", "", "", "", "", "          -1", "");
  
  
  libdata[libdataItem++] = new Array("obsolete_code/barkbark.html#barkbark", "barkbark", 'routine in <a href="obsolete_code/barkbark.html">barkbark.pro</a>', "barkbark.pro", "", "barkbark", "", "inputthresh", "          -1", "");
  
  

libdata[libdataItem++] = new Array("./beta.html", "beta.pro", '.pro file in <a href="./dir-overview.html">./ directory</a>', "beta.pro", "", "", "", "", "          -1", "");
  
  
  libdata[libdataItem++] = new Array("./beta.html#beta", "beta", 'routine in <a href="./beta.html">beta.pro</a>', "beta.pro", "", "beta", "      Finds the center of N whole suns and M partial suns using limb-fitting for the whole suns and simple centroiding for the partial suns   ", "", "          -1", "       NONE, BRAH   idldoc,root='/Users/jerensuzuki/Documents/suncentering', output='rbdoc',format_style='rst',/user,/quiet,markup_style='rst'  ");
  
  

libdata[libdataItem++] = new Array("obsolete_code/betterwhichcropmethod.html", "betterwhichcropmethod.pro", '.pro file in <a href="obsolete_code/dir-overview.html">obsolete_code/ directory</a>', "betterwhichcropmethod.pro", "", "", "", "", "          -1", "");
  
  
  libdata[libdataItem++] = new Array("obsolete_code/betterwhichcropmethod.html#betterwhichcropmethod", "betterwhichcropmethod", 'routine in <a href="obsolete_code/betterwhichcropmethod.html">betterwhichcropmethod.pro</a>', "betterwhichcropmethod.pro", "", "betterwhichcropmethod", "       Crops differently according to which region is selected.   ", "region           1) main sun            2) 50% brightness sun            3) 25% brightness sun  ", "          -1", "");
  
  

libdata[libdataItem++] = new Array("obsolete_code/bordercheck.html", "bordercheck.pro", '.pro file in <a href="obsolete_code/dir-overview.html">obsolete_code/ directory</a>', "bordercheck.pro", "", "", "", "", "          -1", "");
  
  
  libdata[libdataItem++] = new Array("obsolete_code/bordercheck.html#bordercheck", "bordercheck", 'routine in <a href="obsolete_code/bordercheck.html">bordercheck.pro</a>', "bordercheck.pro", "", "bordercheck", "", "input", "          -1", "");
  
  

libdata[libdataItem++] = new Array("obsolete_code/boxit.html", "boxit.pro", '.pro file in <a href="obsolete_code/dir-overview.html">obsolete_code/ directory</a>', "boxit.pro", "", "", "", "", "          -1", "");
  
  
  libdata[libdataItem++] = new Array("obsolete_code/boxit.html#boxit", "boxit", 'routine in <a href="obsolete_code/boxit.html">boxit.pro</a>', "boxit.pro", "", "boxit", "		Makes a box around the sun (or round piece of paper) with equal sized padding for every scenario.   ", "file", "          -1", "");
  
  

libdata[libdataItem++] = new Array("obsolete_code/center.html", "center.pro", '.pro file in <a href="obsolete_code/dir-overview.html">obsolete_code/ directory</a>', "center.pro", "   JEREN SUZUKI: <span class= code-output >   Space Sciences Laboratory</span> <span class= code-output >   7 Gauss Way</span> <span class= code-output >   Berkeley, CA 94720 USA</span> <span class= code-output >   E-mail: jsuzuki@ssl.berkeley.edu</span>  ", "", " At the end of the day this should find the center of the sun using a variety of (working) methods   Compiled the doc with idldoc,root='/Users/jerensuzuki/Documents/suncentering', $  output='rbdoc',format_style='rst',/user,/quiet,markup_style='rst'   ", "", "          -1", "");
  
  
  libdata[libdataItem++] = new Array("obsolete_code/center.html#scanbox", "scanbox", 'routine in <a href="obsolete_code/center.html">center.pro</a>', "center.pro", "", "scanbox", "       Boxit was too computation-intensive, this is more a rough boxing program   ", "file       File to be read in  time       Print the elapsed time  meanthresh       Use the average of the image as the threshold value. Otherwise, use half of max  scan_width       How far apart the scanning should be   ", "          -1", "       cropped = scanbox(file='$PWD/sep11_postit/104533_20120912_124300_353097_0.bin',/time)   ");
  
  libdata[libdataItem++] = new Array("obsolete_code/center.html#comp2", "comp2", 'routine in <a href="obsolete_code/center.html">center.pro</a>', "center.pro", "", "comp2", "           Finds the centroid by summing all values over a certain threshold and averaging them   ", "file       File to be read in  time       Prints the elapsed time  plot       Makes a nice plot  sigmavalue       Sets the threshold to be max(image) - sigmavalue*stddev(image)   xpos       X center  ypos       Y center  thresh       Threshold used to select pixels   ", "          -1", "           comp2,xpos,ypos,/plot   ");
  
  libdata[libdataItem++] = new Array("obsolete_code/center.html#comp4", "comp4", 'routine in <a href="obsolete_code/center.html">center.pro</a>', "center.pro", "", "comp4", "           Only used to save the strips into structures.  ", "file       File to be read in  time       Prints the elapsed time  scan_width       Indicates how far apart to scan  sigmavalue       Sets the threshold to be max(image) - sigmavalue*stddev(image)   xstrips       Structure containing row strips  ystrips       Structure containing column strips  thresh       Threshold used to select pixels   ", "          -1", "           comp4,xstrips,ystrips,thresh,/time,scan_width=10,/thalf   ");
  
  libdata[libdataItem++] = new Array("obsolete_code/center.html#comp5", "comp5", 'routine in <a href="obsolete_code/center.html">center.pro</a>', "center.pro", "", "comp5", "           Only used to save the cut-down strips into structures. Doesn't import            the whole strip data from comp4, it goes straight from scanbox (skips comp4).   ", "file       File to be read in  time       Prints the elapsed time  ministrip_length       How long the total array of the cut-down strip will be  scan_width       Indicates how far apart to scan  sigmavalue       Sets the threshold to be max(image) - sigmavalue*stddev(image)   xstrips       Contains the row sctructures of strips  ystrips       Contains the col sctructures of strips  thresh       Threshold value used   ", "          -1", "           comp5,xstrips,ystrips,thresh      Exactly how much data should be stored in a structure? Since we're interested in saving space,    doesn't make sense to repeat any data in the structures.  ");
  
  libdata[libdataItem++] = new Array("obsolete_code/center.html#comp6v2", "comp6v2", 'routine in <a href="obsolete_code/center.html">center.pro</a>', "center.pro", "", "comp6v2", "       Uses the data from comp5 and draws a linear/quadratic/cubic/etc. function to find midpoint.        Order is the power of the function. Different from comp6 in that this method uses fz_roots()        and comp6 uses spline to interpolate where the limb crosses a threshold. Imports the strips        from comp5.   ", "file       File to be read in  order       What order polynomial to use for POLY_FIT()  time       Prints the elapsed time  scan_width       Ondicates how far apart to scan  ministrip_length       How long the trimmed down strip will be  plot       If set, makes some nice plots.  sigmavalue       Sets the threshold to be max(image) - sigmavalue*stddev(image)   xpos       X Center  ypos       Y Center   ", "          -1", "           comp6,xpos,ypos,order=3   ");
  
  libdata[libdataItem++] = new Array("obsolete_code/center.html#cc", "cc", 'routine in <a href="obsolete_code/center.html">center.pro</a>', "center.pro", "", "cc", "", "", "          -1", "");
  
  libdata[libdataItem++] = new Array("obsolete_code/center.html#makesomescatplots", "makesomescatplots", 'routine in <a href="obsolete_code/center.html">center.pro</a>', "center.pro", "", "makesomescatplots", "   Makes a few scatter plots based on varying parameters. Sucks that the values are hardcoded.  ", "", "          -1", "");
  
  libdata[libdataItem++] = new Array("obsolete_code/center.html#msmsp", "msmsp", 'routine in <a href="obsolete_code/center.html">center.pro</a>', "center.pro", "", "msmsp", "   Abbreviated form of  Make Some More Scatter Plots     Making more scat plots now that I've fixed my program and am now moving onto bmp images   ", "", "          -1", "");
  
  libdata[libdataItem++] = new Array("obsolete_code/center.html#center", "center", 'routine in <a href="obsolete_code/center.html">center.pro</a>', "center.pro", "", "center", "       Finds the centroid using a variety of compression levels         Important!:        IDL uses the origin to be the top left corner for 2d arrays and a column is indexed from 0        starting from the top. You have been WARNED.  ", "file       File to be read in  ministrip_length       How long the cut-down strip is  scan_width       How far apart the scans are  time       Prints the elapsed time  order       What order polynomial to use for POLY_FIT()  plot       If set, makes some nice plots.  sigmavalue       Sets the threshold to be: <span class= code-output >   max(image) - sigmavalue*stddev(image)</span>  ", "          -1", "   More Keywords/parameters     How strict are we going to be for the outputs of each compression file?     Deal with fiducials hitting the limb (Does it even matter?)     Deal with scan_width; scan_width=5 seems to produce some pretty good results.     I fixed the values being stuck, it was because I added to the index where the image value &gt; thresh,    I should've subtracted instead. Note: Don't do that again.     Probably too early to say, but I think I've finished this program. It's robust and gets near-perfect    values for each blur amount. The only thing that changes the fit considerably is what order poly-    nomial I use.   ");
  
  

libdata[libdataItem++] = new Array("obsolete_code/center_newer.html", "center_newer.pro", '.pro file in <a href="obsolete_code/dir-overview.html">obsolete_code/ directory</a>', "center_newer.pro", "   JEREN SUZUKI: <span class= code-output >   Space Sciences Laboratory</span> <span class= code-output >   7 Gauss Way</span> <span class= code-output >   Berkeley, CA 94720 USA</span> <span class= code-output >   E-mail: jsuzuki@ssl.berkeley.edu</span>  ", "", " At the end of the day this should find the center of the sun using a variety of (working) methods   Compiled the doc with idldoc,root='/Users/jerensuzuki/Documents/suncentering', $  output='rbdoc',format_style='rst',/user,/quiet,markup_style='rst'   ", "", "          -1", "");
  
  
  libdata[libdataItem++] = new Array("obsolete_code/center_newer.html#center", "center", 'routine in <a href="obsolete_code/center_newer.html">center_newer.pro</a>', "center_newer.pro", "", "center", "       Finds the centroid using a variety of compression levels        Removed the 'vX' suffix because it got confusing keeping track of which numbers went with what         Important!:        IDL uses the origin to be the top left corner for 2d arrays and a column is indexed from 0        starting from the top. You have been WARNED.  ", "file       File to be read in  ministrip_length       How long the cut-down strip is  scan_width       How far apart the scans are  time       Prints the elapsed time  order       What order polynomial to use for POLY_FIT()  plot       If set, makes some nice plots.  sigmavalue       Sets the threshold to be: <span class= code-output >   max(image) - sigmavalue*stddev(image)</span>  savstep       The number of steps to include in the fits file.        savstep = 1: cropped image        savstep = 2: long strips        savstep = 3: limb strips        savstep = 4: center of mask  saveonly       Determines whether or not savstep saves steps leading up to savstep or just savstep  storestruct       Toggles whether or not we want to save data at all   ", "          -1", "   More Keywords/parameters     How strict are we going to be for the outputs of each compression file?     Deal with fiducials hitting the limb (Does it even matter?)     Deal with scan_width; scan_width=5 seems to produce some pretty good results.     I fixed the values being stuck, it was because I added to the index where the image value &gt; thresh,    I should've subtracted instead. Note: Don't do that again.     Threshold value doesn't have a safety in terms of cosmic rays or single pixels with absurdly high    values. Got to have some sort of catch here just in case.     For some reason, after I added code to look at 5 center chords, the y-limbs are all wonky. Why?    They cross through fiducials, that's why. The fiducials are so wide that a median filter won't get    rid of them.  ");
  
  libdata[libdataItem++] = new Array("obsolete_code/center_newer.html#scanbox", "scanbox", 'routine in <a href="obsolete_code/center_newer.html">center_newer.pro</a>', "center_newer.pro", "", "scanbox", "       Boxit was too computation-intensive, this is more a rough boxing program.        Uses knowledge of approx size of sun to only scan until it hits the sun then        moves the crop borders based on the given parameters.   ", "file       File to be read in  time       Print the elapsed time  meanthreshscan_width       How far apart the scanning should be. Fine tuned compared to scanbox  savstep       The number of steps to include in the fits file.        savstep = 1: cropped image        savstep = 2: long strips        savstep = 3: limb strips        savstep = 4: center of mask  saveonly       Determines whether or not savstep saves steps leading up to savstep or just savstep  sigmavalue       Sets the threshold to be:        max(image) - sigmavalue*stddev(image)  storestruct       Toggles whether or not we want to save data at all   ", "          -1", "       cropped = scanbox(file='$PWD/sep11_postit/104533_20120912_124300_353097_0.bin',/time)   ");
  
  libdata[libdataItem++] = new Array("obsolete_code/center_newer.html#comp2", "comp2", 'routine in <a href="obsolete_code/center_newer.html">center_newer.pro</a>', "center_newer.pro", "", "comp2", "           Finds the centroid by summing all values over a certain threshold and averaging them.   ", "file       File to be read in  time       Prints the elapsed time  plot       Makes a nice plot  sigmavalue       Sets the threshold to be:        max(image) - sigmavalue*stddev(image)         Having a sigmavalue=2 makes the pixels chosen from the sun more circular than sigmavalue=1   xpos       X center  ypos       Y center  thresh       Threshold used to select pixels   ", "          -1", "           comp2,xpos,ypos,thresh,time=time,sigmavalue=sigmavalue,file=file   ");
  
  libdata[libdataItem++] = new Array("obsolete_code/center_newer.html#comp3", "comp3", 'routine in <a href="obsolete_code/center_newer.html">center_newer.pro</a>', "center_newer.pro", "", "comp3", "           Looks only at the positions of pixels above a threshold and doen't care        About their actual values, like in comp2. More  accurate  to find the        center than comp2 since this gives all solar pixels equal weighting.   ", "file       File to be read in  time       Prints the elapsed time  sigmavalue       Sets the threshold to be:        max(image) - sigmavalue*stddev(image)         Having a sigmavalue=2 makes the pixels chosen from the sun more circular than sigmavalue=1   xpos       X center  ypos       Y center  thresh       Threshold used to select pixels   ", "          -1", "           comp3,xpos,ypos,thresh,time=time,sigmavalue=sigmavalue,file=file   ");
  
  libdata[libdataItem++] = new Array("obsolete_code/center_newer.html#comp4", "comp4", 'routine in <a href="obsolete_code/center_newer.html">center_newer.pro</a>', "center_newer.pro", "", "comp4", "           Only saves 5 strips centered around the solar diameter to reduce the amount of limb-            darkened pixels and to make the polynomial-fitted limbs more-or-less look similar.            Called into comp5.  ", "file       File to be read in  time       Prints the elapsed time  scan_width       Indicates how far apart to scan  sigmavalue       Sets the threshold to be: <span class= code-output >max(image) - sigmavalue*stddev(image)</span>  savstep       The number of steps to include in the fits file.        savstep = 1: cropped image        savstep = 2: long strips        savstep = 3: limb strips        savstep = 4: center of mask  saveonly       Determines whether or not savstep saves steps leading up to savstep or just savstep  nstrips       How many strips to select, centered around the row/col diameter  storestruct       Toggles whether or not we want to save data at all   xstrips       Structure containing row strips  ystrips       Structure containing column strips  thresh       Threshold used to select pixels   ", "          -1", "           comp4,xstrips,ystrips,thresh,/time,scan_width=10   ");
  
  libdata[libdataItem++] = new Array("obsolete_code/center_newer.html#comp5", "comp5", 'routine in <a href="obsolete_code/center_newer.html">center_newer.pro</a>', "center_newer.pro", "", "comp5", "           Calls comp4 to acquire data strips then saves limb strips.   ", "file       File to be read in  time       Prints the elapsed time  ministrip_length       How long the total array of the cut-down strip will be  scan_width       Indicates how far apart to scan  sigmavalue       Sets the threshold to be:     max(image) - sigmavalue*stddev(image)   savstep       The number of steps to include in the fits file.        savstep = 1: cropped image        savstep = 2: long strips        savstep = 3: limb strips        savstep = 4: center of mask  saveonly       Determines whether or not savstep saves steps leading up to savstep or just savstep  storestruct       Toggles whether or not we want to save data at all   xstrips       Contains the row sctructures of strips  ystrips       Contains the col sctructures of strips  thresh       Threshold value used   ", "          -1", "           comp5,xstrips,ystrips,thresh      Exactly how much data should be stored in a structure? Since we're interested in saving space,    doesn't make sense to repeat any data in the structures.  ");
  
  libdata[libdataItem++] = new Array("obsolete_code/center_newer.html#comp6", "comp6", 'routine in <a href="obsolete_code/center_newer.html">center_newer.pro</a>', "center_newer.pro", "", "comp6", "       Uses the data from comp5 and fits an n-th order polynomial to the limb to find where        it crosses the threshold. Imports the strips from comp5.   ", "file       File to be read in  order       What order polynomial to use for POLY_FIT()  time       Prints the elapsed time  scan_width       Ondicates how far apart to scan  ministrip_length       How long the trimmed down strip will be  plot       If set, makes some nice plots.  sigmavalue       Sets the threshold to be:     max(image) - sigmavalue*stddev(image)   savstep       The number of steps to include in the fits file.        savstep = 1: cropped image        savstep = 2: long strips        savstep = 3: limb strips        savstep = 4: center of mask  saveonly       Determines whether or not savstep saves steps leading up to savstep or just savstep  storestruct       Toggles whether or not we want to save data at all   xpos       X Center  ypos       Y Center   ", "          -1", "           comp6,xpos,ypos,order=3   ");
  
  

libdata[libdataItem++] = new Array("obsolete_code/centerv2.html", "centerv2.pro", '.pro file in <a href="obsolete_code/dir-overview.html">obsolete_code/ directory</a>', "centerv2.pro", "   JEREN SUZUKI: <span class= code-output >   Space Sciences Laboratory</span> <span class= code-output >   7 Gauss Way</span> <span class= code-output >   Berkeley, CA 94720 USA</span> <span class= code-output >   E-mail: jsuzuki@ssl.berkeley.edu</span>  ", "", " At the end of the day this should find the center of the sun using a variety of (working) methods   Compiled the doc with idldoc,root='/Users/jerensuzuki/Documents/suncentering', $  output='rbdoc',format_style='rst',/user,/quiet,markup_style='rst'   ", "", "          -1", "");
  
  
  libdata[libdataItem++] = new Array("obsolete_code/centerv2.html#scanbox", "scanbox", 'routine in <a href="obsolete_code/centerv2.html">centerv2.pro</a>', "centerv2.pro", "", "scanbox", "       Boxit was too computation-intensive, this is more a rough boxing program   ", "file       File to be read in  time       Print the elapsed time  meanthreshscan_width       How far apart the scanning should be  savstep       The number of steps to include in the fits file.        savstep = 1: cropped image        savstep = 2: long strips        savstep = 3: limb strips        savstep = 4: center of mask  saveonly       Determines whether or not savstep saves steps leading up to savstep or just savstep   sigmavalue       Sets the threshold to be:        max(image) - sigmavalue*stddev(image)  ", "          -1", "       cropped = scanbox(file='$PWD/sep11_postit/104533_20120912_124300_353097_0.bin',/time)   ");
  
  libdata[libdataItem++] = new Array("obsolete_code/centerv2.html#comp2", "comp2", 'routine in <a href="obsolete_code/centerv2.html">centerv2.pro</a>', "centerv2.pro", "", "comp2", "           Finds the centroid by summing all values over a certain threshold and averaging them   ", "file       File to be read in  time       Prints the elapsed time  plot       Makes a nice plot  sigmavalue       Sets the threshold to be:        max(image) - sigmavalue*stddev(image)   savstep       The number of steps to include in the fits file.        savstep = 1: cropped image        savstep = 2: long strips        savstep = 3: limb strips        savstep = 4: center of mask  saveonly       Determines whether or not savstep saves steps leading up to savstep or just savstep   xpos       X center  ypos       Y center  thresh       Threshold used to select pixels   ", "          -1", "           comp2,xpos,ypos,thresh,time=time,sigmavalue=sigmavalue,file=file   ");
  
  libdata[libdataItem++] = new Array("obsolete_code/centerv2.html#comp4", "comp4", 'routine in <a href="obsolete_code/centerv2.html">centerv2.pro</a>', "centerv2.pro", "", "comp4", "           Only used to save the strips into structures.  ", "file       File to be read in  time       Prints the elapsed time  scan_width       Indicates how far apart to scan  sigmavalue       Sets the threshold to be: <span class= code-output >max(image) - sigmavalue*stddev(image)</span>  savstep       The number of steps to include in the fits file.        savstep = 1: cropped image        savstep = 2: long strips        savstep = 3: limb strips        savstep = 4: center of mask  saveonly       Determines whether or not savstep saves steps leading up to savstep or just savstep   xstrips       Structure containing row strips  ystrips       Structure containing column strips  thresh       Threshold used to select pixels   ", "          -1", "           comp4,xstrips,ystrips,thresh,/time,scan_width=10   ");
  
  libdata[libdataItem++] = new Array("obsolete_code/centerv2.html#comp5v2", "comp5v2", 'routine in <a href="obsolete_code/centerv2.html">centerv2.pro</a>', "centerv2.pro", "", "comp5v2", "           Only used to save the cut-down strips into structures. Imports strips from            comp4 like a good code should.   ", "file       File to be read in  time       Prints the elapsed time  ministrip_length       How long the total array of the cut-down strip will be  scan_width       Indicates how far apart to scan  sigmavalue       Sets the threshold to be:     max(image) - sigmavalue*stddev(image)   savstep       The number of steps to include in the fits file.        savstep = 1: cropped image        savstep = 2: long strips        savstep = 3: limb strips        savstep = 4: center of mask  saveonly       Determines whether or not savstep saves steps leading up to savstep or just savstep   xstrips       Contains the row sctructures of strips  ystrips       Contains the col sctructures of strips  thresh       Threshold value used   ", "          -1", "           comp5v2,xstrips,ystrips,thresh      Exactly how much data should be stored in a structure? Since we're interested in saving space,    doesn't make sense to repeat any data in the structures.  ");
  
  libdata[libdataItem++] = new Array("obsolete_code/centerv2.html#comp6v2", "comp6v2", 'routine in <a href="obsolete_code/centerv2.html">centerv2.pro</a>', "centerv2.pro", "", "comp6v2", "       Uses the data from comp5v2 and draws a linear/quadratic/cubic/etc. function to find midpoint.        Order is the power of the function. Different from comp6 in that this method uses fz_roots()        and comp6 uses spline to interpolate where the limb crosses a threshold. Imports the strips        from comp5v2.   ", "file       File to be read in  order       What order polynomial to use for POLY_FIT()  time       Prints the elapsed time  scan_width       Ondicates how far apart to scan  ministrip_length       How long the trimmed down strip will be  plot       If set, makes some nice plots.  sigmavalue       Sets the threshold to be:     max(image) - sigmavalue*stddev(image)   savstep       The number of steps to include in the fits file.        savstep = 1: cropped image        savstep = 2: long strips        savstep = 3: limb strips        savstep = 4: center of mask  saveonly       Determines whether or not savstep saves steps leading up to savstep or just savstep   xpos       X Center  ypos       Y Center   ", "          -1", "           comp6,xpos,ypos,order=3   ");
  
  libdata[libdataItem++] = new Array("obsolete_code/centerv2.html#cc", "cc", 'routine in <a href="obsolete_code/centerv2.html">centerv2.pro</a>', "centerv2.pro", "", "cc", "", "", "          -1", "");
  
  libdata[libdataItem++] = new Array("obsolete_code/centerv2.html#makesomescatplots", "makesomescatplots", 'routine in <a href="obsolete_code/centerv2.html">centerv2.pro</a>', "centerv2.pro", "", "makesomescatplots", "   Makes a few scatter plots based on varying parameters. Sucks that the values are hardcoded.  ", "", "          -1", "");
  
  libdata[libdataItem++] = new Array("obsolete_code/centerv2.html#msmsp", "msmsp", 'routine in <a href="obsolete_code/centerv2.html">centerv2.pro</a>', "centerv2.pro", "", "msmsp", "   Abbreviated form of  Make Some More Scatter Plots     Making more scat plots now that I've fixed my program and am now moving onto bmp images   ", "", "          -1", "");
  
  libdata[libdataItem++] = new Array("obsolete_code/centerv2.html#centerv2", "centerv2", 'routine in <a href="obsolete_code/centerv2.html">centerv2.pro</a>', "centerv2.pro", "", "centerv2", "       Finds the centroid using a variety of compression levels         Important!:        IDL uses the origin to be the top left corner for 2d arrays and a column is indexed from 0        starting from the top. You have been WARNED.  ", "file       File to be read in  ministrip_length       How long the cut-down strip is  scan_width       How far apart the scans are  time       Prints the elapsed time  order       What order polynomial to use for POLY_FIT()  plot       If set, makes some nice plots.  sigmavalue       Sets the threshold to be: <span class= code-output >   max(image) - sigmavalue*stddev(image)</span>  savstep       The number of steps to include in the fits file.        savstep = 1: cropped image        savstep = 2: long strips        savstep = 3: limb strips        savstep = 4: center of mask  saveonly       Determines whether or not savstep saves steps leading up to savstep or just savstep   ", "          -1", "   More Keywords/parameters     How strict are we going to be for the outputs of each compression file?     Deal with fiducials hitting the limb (Does it even matter?)     Deal with scan_width; scan_width=5 seems to produce some pretty good results.     I fixed the values being stuck, it was because I added to the index where the image value &gt; thresh,    I should've subtracted instead. Note: Don't do that again.     Threshold value doesn't have a safety in terms of cosmic rays or single pixels with absurdly high    values. Got to have some sort of catch here just in case.  ");
  
  

libdata[libdataItem++] = new Array("obsolete_code/centerv3.html", "centerv3.pro", '.pro file in <a href="obsolete_code/dir-overview.html">obsolete_code/ directory</a>', "centerv3.pro", "   JEREN SUZUKI: <span class= code-output >   Space Sciences Laboratory</span> <span class= code-output >   7 Gauss Way</span> <span class= code-output >   Berkeley, CA 94720 USA</span> <span class= code-output >   E-mail: jsuzuki@ssl.berkeley.edu</span>  ", "", " At the end of the day this should find the center of the sun using a variety of (working) methods   Compiled the doc with idldoc,root='/Users/jerensuzuki/Documents/suncentering', $  output='rbdoc',format_style='rst',/user,/quiet,markup_style='rst'   ", "", "          -1", "");
  
  
  libdata[libdataItem++] = new Array("obsolete_code/centerv3.html#centerv3", "centerv3", 'routine in <a href="obsolete_code/centerv3.html">centerv3.pro</a>', "centerv3.pro", "", "centerv3", "       Finds the centroid using a variety of compression levels         Different from v2 in that this one is slightly more organized and uses a different version of        comp2.         Important!:        IDL uses the origin to be the top left corner for 2d arrays and a column is indexed from 0        starting from the top. You have been WARNED.  ", "file       File to be read in  ministrip_length       How long the cut-down strip is  scan_width       How far apart the scans are  time       Prints the elapsed time  order       What order polynomial to use for POLY_FIT()  plot       If set, makes some nice plots.  sigmavalue       Sets the threshold to be: <span class= code-output >   max(image) - sigmavalue*stddev(image)</span>  savstep       The number of steps to include in the fits file.        savstep = 1: cropped image        savstep = 2: long strips        savstep = 3: limb strips        savstep = 4: center of mask  saveonly       Determines whether or not savstep saves steps leading up to savstep or just savstep   ", "          -1", "   More Keywords/parameters     How strict are we going to be for the outputs of each compression file?     Deal with fiducials hitting the limb (Does it even matter?)     Deal with scan_width; scan_width=5 seems to produce some pretty good results.     I fixed the values being stuck, it was because I added to the index where the image value &gt; thresh,    I should've subtracted instead. Note: Don't do that again.     Threshold value doesn't have a safety in terms of cosmic rays or single pixels with absurdly high    values. Got to have some sort of catch here just in case.  ");
  
  libdata[libdataItem++] = new Array("obsolete_code/centerv3.html#scanbox", "scanbox", 'routine in <a href="obsolete_code/centerv3.html">centerv3.pro</a>', "centerv3.pro", "", "scanbox", "       Boxit was too computation-intensive, this is more a rough boxing program   ", "file       File to be read in  time       Print the elapsed time  meanthreshscan_width       How far apart the scanning should be  savstep       The number of steps to include in the fits file.        savstep = 1: cropped image        savstep = 2: long strips        savstep = 3: limb strips        savstep = 4: center of mask  saveonly       Determines whether or not savstep saves steps leading up to savstep or just savstep   sigmavalue       Sets the threshold to be:        max(image) - sigmavalue*stddev(image)  ", "          -1", "       cropped = scanbox(file='$PWD/sep11_postit/104533_20120912_124300_353097_0.bin',/time)   ");
  
  libdata[libdataItem++] = new Array("obsolete_code/centerv3.html#comp2", "comp2", 'routine in <a href="obsolete_code/centerv3.html">centerv3.pro</a>', "centerv3.pro", "", "comp2", "           Finds the centroid by summing all values over a certain threshold and averaging them   ", "file       File to be read in  time       Prints the elapsed time  plot       Makes a nice plot  sigmavalue       Sets the threshold to be:        max(image) - sigmavalue*stddev(image)   savstep       The number of steps to include in the fits file.        savstep = 1: cropped image        savstep = 2: long strips        savstep = 3: limb strips        savstep = 4: center of mask  saveonly       Determines whether or not savstep saves steps leading up to savstep or just savstep   xpos       X center  ypos       Y center  thresh       Threshold used to select pixels   ", "          -1", "           comp2,xpos,ypos,thresh,time=time,sigmavalue=sigmavalue,file=file   ");
  
  libdata[libdataItem++] = new Array("obsolete_code/centerv3.html#comp4", "comp4", 'routine in <a href="obsolete_code/centerv3.html">centerv3.pro</a>', "centerv3.pro", "", "comp4", "           Only used to save the strips into structures.  ", "file       File to be read in  time       Prints the elapsed time  scan_width       Indicates how far apart to scan  sigmavalue       Sets the threshold to be: <span class= code-output >max(image) - sigmavalue*stddev(image)</span>  savstep       The number of steps to include in the fits file.        savstep = 1: cropped image        savstep = 2: long strips        savstep = 3: limb strips        savstep = 4: center of mask  saveonly       Determines whether or not savstep saves steps leading up to savstep or just savstep   xstrips       Structure containing row strips  ystrips       Structure containing column strips  thresh       Threshold used to select pixels   ", "          -1", "           comp4,xstrips,ystrips,thresh,/time,scan_width=10   ");
  
  libdata[libdataItem++] = new Array("obsolete_code/centerv3.html#comp5v2", "comp5v2", 'routine in <a href="obsolete_code/centerv3.html">centerv3.pro</a>', "centerv3.pro", "", "comp5v2", "           Only used to save the cut-down strips into structures. Imports strips from            comp4 like a good code should.   ", "file       File to be read in  time       Prints the elapsed time  ministrip_length       How long the total array of the cut-down strip will be  scan_width       Indicates how far apart to scan  sigmavalue       Sets the threshold to be:     max(image) - sigmavalue*stddev(image)   savstep       The number of steps to include in the fits file.        savstep = 1: cropped image        savstep = 2: long strips        savstep = 3: limb strips        savstep = 4: center of mask  saveonly       Determines whether or not savstep saves steps leading up to savstep or just savstep   xstrips       Contains the row sctructures of strips  ystrips       Contains the col sctructures of strips  thresh       Threshold value used   ", "          -1", "           comp5v2,xstrips,ystrips,thresh      Exactly how much data should be stored in a structure? Since we're interested in saving space,    doesn't make sense to repeat any data in the structures.  ");
  
  libdata[libdataItem++] = new Array("obsolete_code/centerv3.html#comp6v2", "comp6v2", 'routine in <a href="obsolete_code/centerv3.html">centerv3.pro</a>', "centerv3.pro", "", "comp6v2", "       Uses the data from comp5v2 and draws a linear/quadratic/cubic/etc. function to find midpoint.        Order is the power of the function. Different from comp6 in that this method uses fz_roots()        and comp6 uses spline to interpolate where the limb crosses a threshold. Imports the strips        from comp5v2.   ", "file       File to be read in  order       What order polynomial to use for POLY_FIT()  time       Prints the elapsed time  scan_width       Ondicates how far apart to scan  ministrip_length       How long the trimmed down strip will be  plot       If set, makes some nice plots.  sigmavalue       Sets the threshold to be:     max(image) - sigmavalue*stddev(image)   savstep       The number of steps to include in the fits file.        savstep = 1: cropped image        savstep = 2: long strips        savstep = 3: limb strips        savstep = 4: center of mask  saveonly       Determines whether or not savstep saves steps leading up to savstep or just savstep   xpos       X Center  ypos       Y Center   ", "          -1", "           comp6,xpos,ypos,order=3   ");
  
  libdata[libdataItem++] = new Array("obsolete_code/centerv3.html#cc", "cc", 'routine in <a href="obsolete_code/centerv3.html">centerv3.pro</a>', "centerv3.pro", "", "cc", "", "", "          -1", "");
  
  libdata[libdataItem++] = new Array("obsolete_code/centerv3.html#msmsp", "msmsp", 'routine in <a href="obsolete_code/centerv3.html">centerv3.pro</a>', "centerv3.pro", "", "msmsp", "   Abbreviated form of  Make Some More Scatter Plots     Making more scat plots now that I've fixed my program and am now moving onto bmp images   ", "", "          -1", "");
  
  

libdata[libdataItem++] = new Array("obsolete_code/centerv4.html", "centerv4.pro", '.pro file in <a href="obsolete_code/dir-overview.html">obsolete_code/ directory</a>', "centerv4.pro", "   JEREN SUZUKI: <span class= code-output >   Space Sciences Laboratory</span> <span class= code-output >   7 Gauss Way</span> <span class= code-output >   Berkeley, CA 94720 USA</span> <span class= code-output >   E-mail: jsuzuki@ssl.berkeley.edu</span>  ", "", " At the end of the day this should find the center of the sun using a variety of (working) methods   Compiled the doc with idldoc,root='/Users/jerensuzuki/Documents/suncentering', $  output='rbdoc',format_style='rst',/user,/quiet,markup_style='rst'   ", "", "          -1", "");
  
  
  libdata[libdataItem++] = new Array("obsolete_code/centerv4.html#centerv4", "centerv4", 'routine in <a href="obsolete_code/centerv4.html">centerv4.pro</a>', "centerv4.pro", "", "centerv4", "       Finds the centroid using a variety of compression levels         Different from v2 in that this one is slightly more organized and uses a different version of        comp2v2.         Important!:        IDL uses the origin to be the top left corner for 2d arrays and a column is indexed from 0        starting from the top. You have been WARNED.  ", "file       File to be read in  ministrip_length       How long the cut-down strip is  scan_width       How far apart the scans are  time       Prints the elapsed time  order       What order polynomial to use for POLY_FIT()  plot       If set, makes some nice plots.  sigmavalue       Sets the threshold to be: <span class= code-output >   max(image) - sigmavalue*stddev(image)</span>  savstep       The number of steps to include in the fits file.        savstep = 1: cropped image        savstep = 2: long strips        savstep = 3: limb strips        savstep = 4: center of mask  saveonly       Determines whether or not savstep saves steps leading up to savstep or just savstep  storestruct       Toggles whether or not we want to save data at all   ", "          -1", "   More Keywords/parameters     How strict are we going to be for the outputs of each compression file?     Deal with fiducials hitting the limb (Does it even matter?)     Deal with scan_width; scan_width=5 seems to produce some pretty good results.     I fixed the values being stuck, it was because I added to the index where the image value &gt; thresh,    I should've subtracted instead. Note: Don't do that again.     Threshold value doesn't have a safety in terms of cosmic rays or single pixels with absurdly high    values. Got to have some sort of catch here just in case.  ");
  
  libdata[libdataItem++] = new Array("obsolete_code/centerv4.html#scanboxv2", "scanboxv2", 'routine in <a href="obsolete_code/centerv4.html">centerv4.pro</a>', "centerv4.pro", "", "scanboxv2", "       Boxit was too computation-intensive, this is more a rough boxing program.    Compared to scanbox, scanboxv2 uses knowledge of approx size of sun to only scan    until it hits the sun then moves the crop borders based on the given parameters.   ", "file       File to be read in  time       Print the elapsed time  meanthreshscan_width       How far apart the scanning should be. Fine tuned compared to scanbox  savstep       The number of steps to include in the fits file.        savstep = 1: cropped image        savstep = 2: long strips        savstep = 3: limb strips        savstep = 4: center of mask  saveonly       Determines whether or not savstep saves steps leading up to savstep or just savstep  sigmavalue       Sets the threshold to be:        max(image) - sigmavalue*stddev(image)  storestruct       Toggles whether or not we want to save data at all   ", "          -1", "       cropped = scanboxv2(file='$PWD/sep11_postit/104533_20120912_124300_353097_0.bin',/time)   ");
  
  libdata[libdataItem++] = new Array("obsolete_code/centerv4.html#comp2v2", "comp2v2", 'routine in <a href="obsolete_code/centerv4.html">centerv4.pro</a>', "centerv4.pro", "", "comp2v2", "           Finds the centroid by summing all values over a certain threshold and averaging them.        Differs from comp2 in that this one uses a much, much more beautiful way to create the mask   ", "file       File to be read in  time       Prints the elapsed time  plot       Makes a nice plot  sigmavalue       Sets the threshold to be:        max(image) - sigmavalue*stddev(image)         Having a sigmavalue=2 makes the pixels chosen from the sun more circular than sigmavalue=1   xpos       X center  ypos       Y center  thresh       Threshold used to select pixels   ", "          -1", "           comp2v2,xpos,ypos,thresh,time=time,sigmavalue=sigmavalue,file=file   ");
  
  libdata[libdataItem++] = new Array("obsolete_code/centerv4.html#comp3", "comp3", 'routine in <a href="obsolete_code/centerv4.html">centerv4.pro</a>', "centerv4.pro", "", "comp3", "           Looks only at the positions of pixels above a threshold and doen't care        About their actual values, like in comp2v2. More  accurate  to find the        center than comp2v2 since this gives all solar pixels equal weighting.   ", "file       File to be read in  time       Prints the elapsed time  plot       Makes a nice plot  sigmavalue       Sets the threshold to be:        max(image) - sigmavalue*stddev(image)         Having a sigmavalue=2 makes the pixels chosen from the sun more circular than sigmavalue=1   xpos       X center  ypos       Y center  thresh       Threshold used to select pixels   ", "          -1", "           comp3,xpos,ypos,thresh,time=time,sigmavalue=sigmavalue,file=file   ");
  
  libdata[libdataItem++] = new Array("obsolete_code/centerv4.html#comp3v2", "comp3v2", 'routine in <a href="obsolete_code/centerv4.html">centerv4.pro</a>', "centerv4.pro", "", "comp3v2", "           Looks only at the positions of pixels above a threshold and doen't care        about their actual values, like in comp2v2. Different from comp3 in that this        version uses sort instead of the 2d array where   ", "file       File to be read in  time       Prints the elapsed time  plot       Makes a nice plot  sigmavalue       Sets the threshold to be:        max(image) - sigmavalue*stddev(image)         Having a sigmavalue=2 makes the pixels chosen from the sun more circular than sigmavalue=1   xpos       X center  ypos       Y center  thresh       Threshold used to select pixels   ", "          -1", "           comp3,xpos,ypos,thresh,time=time,sigmavalue=sigmavalue,file=file   ");
  
  libdata[libdataItem++] = new Array("obsolete_code/centerv4.html#comp4", "comp4", 'routine in <a href="obsolete_code/centerv4.html">centerv4.pro</a>', "centerv4.pro", "", "comp4", "           Only used to save the strips into structures.  ", "file       File to be read in  time       Prints the elapsed time  scan_width       Indicates how far apart to scan  sigmavalue       Sets the threshold to be: <span class= code-output >max(image) - sigmavalue*stddev(image)</span>  savstep       The number of steps to include in the fits file.        savstep = 1: cropped image        savstep = 2: long strips        savstep = 3: limb strips        savstep = 4: center of mask  saveonly       Determines whether or not savstep saves steps leading up to savstep or just savstep  storestruct       Toggles whether or not we want to save data at all   xstrips       Structure containing row strips  ystrips       Structure containing column strips  thresh       Threshold used to select pixels   ", "          -1", "           comp4,xstrips,ystrips,thresh,/time,scan_width=10   ");
  
  libdata[libdataItem++] = new Array("obsolete_code/centerv4.html#comp4v2", "comp4v2", 'routine in <a href="obsolete_code/centerv4.html">centerv4.pro</a>', "centerv4.pro", "", "comp4v2", "           Only used to save the strips into structures. Different from comp4 in that comp4v2            only saves 5 strips centered around the solar diameter to reduce the amount of limb-            darkened pixels and to make the polynomial-fitted limbs more-or-less look similar.  ", "file       File to be read in  time       Prints the elapsed time  scan_width       Indicates how far apart to scan  sigmavalue       Sets the threshold to be: <span class= code-output >max(image) - sigmavalue*stddev(image)</span>  savstep       The number of steps to include in the fits file.        savstep = 1: cropped image        savstep = 2: long strips        savstep = 3: limb strips        savstep = 4: center of mask  saveonly       Determines whether or not savstep saves steps leading up to savstep or just savstep  nstrips       How many strips to select, centered around the row/col diameter  storestruct       Toggles whether or not we want to save data at all   xstrips       Structure containing row strips  ystrips       Structure containing column strips  thresh       Threshold used to select pixels   ", "          -1", "           comp4v2,xstrips,ystrips,thresh,/time,scan_width=10   ");
  
  libdata[libdataItem++] = new Array("obsolete_code/centerv4.html#comp5v3", "comp5v3", 'routine in <a href="obsolete_code/centerv4.html">centerv4.pro</a>', "centerv4.pro", "", "comp5v3", "           Only used to save the cut-down strips into structures. Differs from comp5v2            in that this one uses comp4v2. That's it.   ", "file       File to be read in  time       Prints the elapsed time  ministrip_length       How long the total array of the cut-down strip will be  scan_width       Indicates how far apart to scan  sigmavalue       Sets the threshold to be:     max(image) - sigmavalue*stddev(image)   savstep       The number of steps to include in the fits file.        savstep = 1: cropped image        savstep = 2: long strips        savstep = 3: limb strips        savstep = 4: center of mask  saveonly       Determines whether or not savstep saves steps leading up to savstep or just savstep  storestruct       Toggles whether or not we want to save data at all   xstrips       Contains the row sctructures of strips  ystrips       Contains the col sctructures of strips  thresh       Threshold value used   ", "          -1", "           comp5v3,xstrips,ystrips,thresh      Exactly how much data should be stored in a structure? Since we're interested in saving space,    doesn't make sense to repeat any data in the structures.  ");
  
  libdata[libdataItem++] = new Array("obsolete_code/centerv4.html#comp6v2", "comp6v2", 'routine in <a href="obsolete_code/centerv4.html">centerv4.pro</a>', "centerv4.pro", "", "comp6v2", "       Uses the data from comp5v3 and draws a linear/quadratic/cubic/etc. function to find midpoint.        Order is the power of the function. Different from comp6 in that this method uses fz_roots()        and comp6 uses spline to interpolate where the limb crosses a threshold. Imports the strips        from comp5v3.   ", "file       File to be read in  order       What order polynomial to use for POLY_FIT()  time       Prints the elapsed time  scan_width       Ondicates how far apart to scan  ministrip_length       How long the trimmed down strip will be  plot       If set, makes some nice plots.  sigmavalue       Sets the threshold to be:     max(image) - sigmavalue*stddev(image)   savstep       The number of steps to include in the fits file.        savstep = 1: cropped image        savstep = 2: long strips        savstep = 3: limb strips        savstep = 4: center of mask  saveonly       Determines whether or not savstep saves steps leading up to savstep or just savstep  storestruct       Toggles whether or not we want to save data at all   xpos       X Center  ypos       Y Center   ", "          -1", "           comp6,xpos,ypos,order=3   ");
  
  

libdata[libdataItem++] = new Array("obsolete_code/centroidtest.html", "centroidtest.pro", '.pro file in <a href="obsolete_code/dir-overview.html">obsolete_code/ directory</a>', "centroidtest.pro", "", "", "", "", "          -1", "");
  
  
  libdata[libdataItem++] = new Array("obsolete_code/centroidtest.html#centroidtest", "centroidtest", 'routine in <a href="obsolete_code/centroidtest.html">centroidtest.pro</a>', "centroidtest.pro", "", "centroidtest", "", "input", "          -1", "");
  
  

libdata[libdataItem++] = new Array("albert_version/centroidwholesuns.html", "centroidwholesuns.pro", '.pro file in <a href="albert_version/dir-overview.html">albert_version/ directory</a>', "centroidwholesuns.pro", "", "", "", "", "          -1", "");
  
  
  libdata[libdataItem++] = new Array("albert_version/centroidwholesuns.html#centroidwholesuns", "centroidwholesuns", 'routine in <a href="albert_version/centroidwholesuns.html">centroidwholesuns.pro</a>', "centroidwholesuns.pro", "", "centroidwholesuns", "       Finds the centers of a triple-sun image and loads all relevant information        including offsets and angles into a new structure.   ", "inputstruct           Structure containing the centers and cropped images of all 3 suns   inputimage           Image that we start out with   ", "          -1", "");
  
  

libdata[libdataItem++] = new Array("./centroidwholesuns.html", "centroidwholesuns.pro", '.pro file in <a href="./dir-overview.html">./ directory</a>', "centroidwholesuns.pro", "", "", "", "", "          -1", "");
  
  
  libdata[libdataItem++] = new Array("./centroidwholesuns.html#centroidwholesuns", "centroidwholesuns", 'routine in <a href="./centroidwholesuns.html">centroidwholesuns.pro</a>', "centroidwholesuns.pro", "", "centroidwholesuns", "       Finds the centers of a triple-sun image and loads all relevant information        including offsets and angles into a new structure.   ", "inputstruct           Structure containing the centers and cropped images of all 3 suns   inputimage           Image that we start out with   ", "          -1", "");
  
  

libdata[libdataItem++] = new Array("albert_version/obsolete_files/checkimage.html", "checkimage.pro", '.pro file in <a href="albert_version/obsolete_files/dir-overview.html">albert_version/obsolete_files/ directory</a>', "checkimage.pro", "", "", "", "", "          -1", "");
  
  
  libdata[libdataItem++] = new Array("albert_version/obsolete_files/checkimage.html#checkimage", "checkimage", 'routine in <a href="albert_version/obsolete_files/checkimage.html">checkimage.pro</a>', "checkimage.pro", "", "checkimage", "       Checks image   ", "input", "          -1", "");
  
  

libdata[libdataItem++] = new Array("./checkimage.html", "checkimage.pro", '.pro file in <a href="./dir-overview.html">./ directory</a>', "checkimage.pro", "", "", "", "", "          -1", "");
  
  
  libdata[libdataItem++] = new Array("./checkimage.html#checkimage", "checkimage", 'routine in <a href="./checkimage.html">checkimage.pro</a>', "checkimage.pro", "", "checkimage", "       Checks image   ", "input", "          -1", "");
  
  

libdata[libdataItem++] = new Array("obsolete_code/circscancrop.html", "circscancrop.pro", '.pro file in <a href="obsolete_code/dir-overview.html">obsolete_code/ directory</a>', "circscancrop.pro", "", "", "", "", "          -1", "");
  
  
  libdata[libdataItem++] = new Array("obsolete_code/circscancrop.html#circscancrop", "circscancrop", 'routine in <a href="obsolete_code/circscancrop.html">circscancrop.pro</a>', "circscancrop.pro", "", "circscancrop", "       Quickly finds the center of the main sun, scans in a circle, and locates the two secondary        suns' centers. Crops either of the secondary suns based on what region specified.   ", "region           Which sun out of the three to find the center of. Defaults to the brightest sun  time           Print the elapsed time  mainxpos           X position of 100% brightness sun to scan in a circle around  mainypos           Y position of 100% brightness sun to scan in a circle around  image           Cropped area  thresh           Threshold used in finding center  xpos           Computed X position of center  ypos           Computed Y position of center  xoffset           X offset of cropped region's bottom left corner  yoffset           Y offset of cropped region's bottom left corner   ", "          -1", "");
  
  

libdata[libdataItem++] = new Array("obsolete_code/closest.html", "closest.pro", '.pro file in <a href="obsolete_code/dir-overview.html">obsolete_code/ directory</a>', "closest.pro", "", "", "", "", "          -1", "");
  
  
  libdata[libdataItem++] = new Array("obsolete_code/closest.html#closest", "closest", 'routine in <a href="obsolete_code/closest.html">closest.pro</a>', "closest.pro", "", "closest", " NAME:    CLOSEST   PURPOSE:    Find the element of ARRAY that is the closest in value to VALUE   CATEGORY:    utilities   CALLING SEQUENCE:    index = CLOSEST(array,value)   INPUTS:    ARRAY = the array to search    VALUE = the value we want to find the closest approach to   OUTPUTS:    INDEX = the index into ARRAY which is the element closest to VALUE     OPTIONAL PARAMETERS:    none   COMMON BLOCKS:    none.  SIDE EFFECTS:    none.  MODIFICATION HISTORY:    Written by: Trevor Harris, Physics Dept., University of Adelaide,        July, 1990.   ", "arrayvalue", "          -1", "");
  
  

libdata[libdataItem++] = new Array("obsolete_code/comparemethods.html", "comparemethods.pro", '.pro file in <a href="obsolete_code/dir-overview.html">obsolete_code/ directory</a>', "comparemethods.pro", "", "", "", "", "          -1", "");
  
  
  libdata[libdataItem++] = new Array("obsolete_code/comparemethods.html#comparemethods", "comparemethods", 'routine in <a href="obsolete_code/comparemethods.html">comparemethods.pro</a>', "comparemethods.pro", "", "comparemethods", "       Compare each of our 3 methods to see how different they really are   ", "", "          -1", "");
  
  

libdata[libdataItem++] = new Array("obsolete_code/corr_fid.html", "corr_fid.pro", '.pro file in <a href="obsolete_code/dir-overview.html">obsolete_code/ directory</a>', "corr_fid.pro", "", "", "", "", "          -1", "");
  
  
  libdata[libdataItem++] = new Array("obsolete_code/corr_fid.html#corr_fid", "corr_fid", 'routine in <a href="obsolete_code/corr_fid.html">corr_fid.pro</a>', "corr_fid.pro", "", "corr_fid", "", "inputimageinputstruct", "          -1", "");
  
  

libdata[libdataItem++] = new Array("obsolete_code/countsuns.html", "countsuns.pro", '.pro file in <a href="obsolete_code/dir-overview.html">obsolete_code/ directory</a>', "countsuns.pro", "", "", "", "", "          -1", "");
  
  
  libdata[libdataItem++] = new Array("obsolete_code/countsuns.html#countsuns", "countsuns", 'routine in <a href="obsolete_code/countsuns.html">countsuns.pro</a>', "countsuns.pro", "", "countsuns", "", "input", "          -1", "");
  
  

libdata[libdataItem++] = new Array("obsolete_code/cropit.html", "cropit.pro", '.pro file in <a href="obsolete_code/dir-overview.html">obsolete_code/ directory</a>', "cropit.pro", "", "", "", "", "          -1", "");
  
  
  libdata[libdataItem++] = new Array("obsolete_code/cropit.html#cropit", "cropit", 'routine in <a href="obsolete_code/cropit.html">cropit.pro</a>', "cropit.pro", "", "cropit", "       Loads a triple-sun image and crops out selected regions one-by-one.   ", "region           Which sun out of the three to find the center of. Defaults to the brightest sun  time         Print the elapsed time   inputarr           Starting image to crop  location           Structure containing the cropped image along with the X and Y distances from origin  scan_width           How apart the scans are for minicrop().  sigmavalue          Sets the threshold to be: <span class= code-output >max(image) - sigmavalue*stddev(image)</span>  sundiam           Approximate diameter of sun in pixels. (Based on bmp image)   ", "          -1", "       cropped = cropit(inputarr,scan_width,sigmavalue,sundiam,region=1)   ");
  
  

libdata[libdataItem++] = new Array("obsolete_code/cropme.html", "cropme.pro", '.pro file in <a href="obsolete_code/dir-overview.html">obsolete_code/ directory</a>', "cropme.pro", "", "", "", "", "          -1", "");
  
  
  libdata[libdataItem++] = new Array("obsolete_code/cropme.html#cropme", "cropme", 'routine in <a href="obsolete_code/cropme.html">cropme.pro</a>', "cropme.pro", "", "cropme", "", "inputpix", "          -1", "");
  
  

libdata[libdataItem++] = new Array("obsolete_code/crosstest.html", "crosstest.pro", '.pro file in <a href="obsolete_code/dir-overview.html">obsolete_code/ directory</a>', "crosstest.pro", "", "", "", "", "          -1", "");
  
  
  libdata[libdataItem++] = new Array("obsolete_code/crosstest.html#crosstest", "crosstest", 'routine in <a href="obsolete_code/crosstest.html">crosstest.pro</a>', "crosstest.pro", "", "crosstest", "", "inputimageinputstruct", "          -1", "");
  
  

libdata[libdataItem++] = new Array("obsolete_code/curr.html", "curr.pro", '.pro file in <a href="obsolete_code/dir-overview.html">obsolete_code/ directory</a>', "curr.pro", "", "", "", "", "          -1", "");
  
  
  libdata[libdataItem++] = new Array("obsolete_code/curr.html#curr", "curr", 'routine in <a href="obsolete_code/curr.html">curr.pro</a>', "curr.pro", "", "curr", "       This version uses limb fitting opposed to masking (tricenter).   ", "time           Outputs how much time the program takes   ", "          -1", "       Find and ISOLATE fiducials, not just mask them out         Ignore center if sun is too close to edge (or if when cropping, we cro outside wholeimage)         Use 25% of median(image)        Um, let's not (Apr24)         Make sure program doesn't freak out when sun isn't in POV   ");
  
  

libdata[libdataItem++] = new Array("albert_version/obsolete_files/cutofftest.html", "cutofftest.pro", '.pro file in <a href="albert_version/obsolete_files/dir-overview.html">albert_version/obsolete_files/ directory</a>', "cutofftest.pro", "", "", "", "", "          -1", "");
  
  
  libdata[libdataItem++] = new Array("albert_version/obsolete_files/cutofftest.html#cutofftest", "cutofftest", 'routine in <a href="albert_version/obsolete_files/cutofftest.html">cutofftest.pro</a>', "cutofftest.pro", "", "cutofftest", "", "inputimageinputstructfidstruct", "          -1", "");
  
  

libdata[libdataItem++] = new Array("obsolete_code/data__center.html", "data__center.pro", '.pro file in <a href="obsolete_code/dir-overview.html">obsolete_code/ directory</a>', "data__center.pro", "", "", "", "", "          -1", "");
  
  
  libdata[libdataItem++] = new Array("obsolete_code/data__center.html#data::center", "data::center", 'routine in <a href="obsolete_code/data__center.html">data__center.pro</a>', "data__center.pro", "", "data::center", "       Had to make a new version of comp3 because the old one called scanbox() by default   ", "region           Which sun out of the three to find the center of. Defaults to the brightest sun  time           Print the elapsed time  file           What file to find 3 centers for  scan_width           How apart the scans are for minicrop().  sigmavalue          Sets the threshold to be: <span class= code-output >max(image) - sigmavalue*stddev(image)</span>  sundiam           Approximate diameter of sun in pixels. (Based on bmp image)   ", "          -1", "");
  
  

libdata[libdataItem++] = new Array("obsolete_code/data__combine.html", "data__combine.pro", '.pro file in <a href="obsolete_code/dir-overview.html">obsolete_code/ directory</a>', "data__combine.pro", "", "", "", "", "          -1", "");
  
  
  libdata[libdataItem++] = new Array("obsolete_code/data__combine.html#data::combine", "data::combine", 'routine in <a href="obsolete_code/data__combine.html">data__combine.pro</a>', "data__combine.pro", "", "data::combine", "       Finds the centers of a triple-sun image and loads all relevant information        including offsets and angles into a new structure.   ", "time           Outputs how much time the program takes   file           What file to find 3 centers for  scan_width           How apart the scans are for minicrop().  sigmavalue          Sets the threshold to be: <span class= code-output >max(image) - sigmavalue*stddev(image)</span>  sundiam           Approximate diameter of sun in pixels. (Based on bmp image)   ", "          -1", "");
  
  

libdata[libdataItem++] = new Array("obsolete_code/data__crop.html", "data__crop.pro", '.pro file in <a href="obsolete_code/dir-overview.html">obsolete_code/ directory</a>', "data__crop.pro", "", "", "", "", "          -1", "");
  
  
  libdata[libdataItem++] = new Array("obsolete_code/data__crop.html#data::crop", "data::crop", 'routine in <a href="obsolete_code/data__crop.html">data__crop.pro</a>', "data__crop.pro", "", "data::crop", "       Loads a triple-sun image and crops out selected regions one-by-one.   ", "timeregion           Which sun out of the three to find the center of. Defaults to the brightest sun   file           What file to find 3 centers for  scan_width           How apart the scans are for minicrop().  sigmavalue          Sets the threshold to be: <span class= code-output >max(image) - sigmavalue*stddev(image)</span>  sundiam           Approximate diameter of sun in pixels. (Based on bmp image)   ", "          -1", "");
  
  

libdata[libdataItem++] = new Array("obsolete_code/data__define.html", "data__define.pro", '.pro file in <a href="obsolete_code/dir-overview.html">obsolete_code/ directory</a>', "data__define.pro", "", "", "", "", "          -1", "");
  
  
  libdata[libdataItem++] = new Array("obsolete_code/data__define.html#data::init", "data::init", 'routine in <a href="obsolete_code/data__define.html">data__define.pro</a>', "data__define.pro", "", "data::init", "", "", "          -1", "");
  
  libdata[libdataItem++] = new Array("obsolete_code/data__define.html#data::set", "data::set", 'routine in <a href="obsolete_code/data__define.html">data__define.pro</a>', "data__define.pro", "", "data::set", "", "value", "          -1", "");
  
  libdata[libdataItem++] = new Array("obsolete_code/data__define.html#data::get", "data::get", 'routine in <a href="obsolete_code/data__define.html">data__define.pro</a>', "data__define.pro", "", "data::get", "", "value", "          -1", "");
  
  libdata[libdataItem++] = new Array("obsolete_code/data__define.html#data::read", "data::read", 'routine in <a href="obsolete_code/data__define.html">data__define.pro</a>', "data__define.pro", "", "data::read", "", "file", "          -1", "");
  
  libdata[libdataItem++] = new Array("obsolete_code/data__define.html#data__define", "data__define", 'routine in <a href="obsolete_code/data__define.html">data__define.pro</a>', "data__define.pro", "", "data__define", "", "", "          -1", "");
  
  

libdata[libdataItem++] = new Array("obsolete_code/data__minicrop.html", "data__minicrop.pro", '.pro file in <a href="obsolete_code/dir-overview.html">obsolete_code/ directory</a>', "data__minicrop.pro", "", "", "", "", "          -1", "");
  
  
  libdata[libdataItem++] = new Array("obsolete_code/data__minicrop.html#data::minicrop", "data::minicrop", 'routine in <a href="obsolete_code/data__minicrop.html">data__minicrop.pro</a>', "data__minicrop.pro", "", "data::minicrop", "       Figures out where the boundaries are depending solely on the threshold.   ", "time           Print the elapsed time  scan_width           How apart the scans are for minicrop().  sundiam           Approximate diameter of sun in pixels. (Based on bmp image)  temparr           2D array to check boundary limits of 		thresh : in, required, type=float 			What the minimum threshold will be for scanning  thresh", "          -1", "");
  
  

libdata[libdataItem++] = new Array("./defparams.html", "defparams.pro", '.pro file in <a href="./dir-overview.html">./ directory</a>', "defparams.pro", "", "", "", "", "          -1", "");
  
  
  libdata[libdataItem++] = new Array("./defparams.html#defparams", "defparams", 'routine in <a href="./defparams.html">defparams.pro</a>', "defparams.pro", "", "defparams", "", "", "          -1", "");
  
  

libdata[libdataItem++] = new Array("albert_version/defparams.html", "defparams.pro", '.pro file in <a href="albert_version/dir-overview.html">albert_version/ directory</a>', "defparams.pro", "", "", "", "", "          -1", "");
  
  
  libdata[libdataItem++] = new Array("albert_version/defparams.html#defparams", "defparams", 'routine in <a href="albert_version/defparams.html">defparams.pro</a>', "defparams.pro", "", "defparams", "", "", "          -1", "");
  
  

libdata[libdataItem++] = new Array("albert_version/defsysvarthresh.html", "defsysvarthresh.pro", '.pro file in <a href="albert_version/dir-overview.html">albert_version/ directory</a>', "defsysvarthresh.pro", "", "", "", "", "          -1", "");
  
  
  libdata[libdataItem++] = new Array("albert_version/defsysvarthresh.html#defsysvarthresh", "defsysvarthresh", 'routine in <a href="albert_version/defsysvarthresh.html">defsysvarthresh.pro</a>', "defsysvarthresh.pro", "", "defsysvarthresh", "       Defines solar thresholds   ", "input           Starting input image   ", "          -1", "");
  
  

libdata[libdataItem++] = new Array("./defsysvarthresh.html", "defsysvarthresh.pro", '.pro file in <a href="./dir-overview.html">./ directory</a>', "defsysvarthresh.pro", "", "", "", "", "          -1", "");
  
  
  libdata[libdataItem++] = new Array("./defsysvarthresh.html#defsysvarthresh", "defsysvarthresh", 'routine in <a href="./defsysvarthresh.html">defsysvarthresh.pro</a>', "defsysvarthresh.pro", "", "defsysvarthresh", "       Defines solar thresholds   ", "input           Starting input image   ", "          -1", "");
  
  

libdata[libdataItem++] = new Array("obsolete_code/doesntfindanything.html", "doesntfindanything.pro", '.pro file in <a href="obsolete_code/dir-overview.html">obsolete_code/ directory</a>', "doesntfindanything.pro", "", "", "", "", "          -1", "");
  
  
  libdata[libdataItem++] = new Array("obsolete_code/doesntfindanything.html#doesntfindanything", "doesntfindanything", 'routine in <a href="obsolete_code/doesntfindanything.html">doesntfindanything.pro</a>', "doesntfindanything.pro", "", "doesntfindanything", "			Finds the centroid by looking at strips of data   ", "filexposypos", "          -1", "			comp4,xpos,ypos   			xpos - x center 			ypos - y center   ");
  
  

libdata[libdataItem++] = new Array("obsolete_code/edgefidcheck.html", "edgefidcheck.pro", '.pro file in <a href="obsolete_code/dir-overview.html">obsolete_code/ directory</a>', "edgefidcheck.pro", "", "", "", "", "          -1", "");
  
  
  libdata[libdataItem++] = new Array("obsolete_code/edgefidcheck.html#edgefidcheck", "edgefidcheck", 'routine in <a href="obsolete_code/edgefidcheck.html">edgefidcheck.pro</a>', "edgefidcheck.pro", "", "edgefidcheck", "", "inputthresh", "          -1", "");
  
  

libdata[libdataItem++] = new Array("obsolete_code/evenfastercenter.html", "evenfastercenter.pro", '.pro file in <a href="obsolete_code/dir-overview.html">obsolete_code/ directory</a>', "evenfastercenter.pro", "", "", "", "", "          -1", "");
  
  
  libdata[libdataItem++] = new Array("obsolete_code/evenfastercenter.html#evenfastercenter", "evenfastercenter", 'routine in <a href="obsolete_code/evenfastercenter.html">evenfastercenter.pro</a>', "evenfastercenter.pro", "", "evenfastercenter", "", "inputidedsuns", "          -1", "");
  
  

libdata[libdataItem++] = new Array("./everysun.html", "everysun.pro", '.pro file in <a href="./dir-overview.html">./ directory</a>', "everysun.pro", "", "", "", "", "          -1", "");
  
  
  libdata[libdataItem++] = new Array("./everysun.html#everysun", "everysun", 'routine in <a href="./everysun.html">everysun.pro</a>', "everysun.pro", "", "everysun", "       Finds the rough centroiding centers of any and all suns   ", "input           The raw input image   ", "          -1", "");
  
  

libdata[libdataItem++] = new Array("albert_version/everysun.html", "everysun.pro", '.pro file in <a href="albert_version/dir-overview.html">albert_version/ directory</a>', "everysun.pro", "", "", "", "", "          -1", "");
  
  
  libdata[libdataItem++] = new Array("albert_version/everysun.html#everysun", "everysun", 'routine in <a href="albert_version/everysun.html">everysun.pro</a>', "everysun.pro", "", "everysun", "       Finds the rough centroiding centers of any and all suns   ", "input           The raw input image   ", "          -1", "");
  
  

libdata[libdataItem++] = new Array("obsolete_code/fastcenter.html", "fastcenter.pro", '.pro file in <a href="obsolete_code/dir-overview.html">obsolete_code/ directory</a>', "fastcenter.pro", "", "", "", "", "          -1", "");
  
  
  libdata[libdataItem++] = new Array("obsolete_code/fastcenter.html#fastcenter", "fastcenter", 'routine in <a href="obsolete_code/fastcenter.html">fastcenter.pro</a>', "fastcenter.pro", "", "fastcenter", "", "input", "          -1", "");
  
  

libdata[libdataItem++] = new Array("obsolete_code/fastercenter.html", "fastercenter.pro", '.pro file in <a href="obsolete_code/dir-overview.html">obsolete_code/ directory</a>', "fastercenter.pro", "", "", "", "", "          -1", "");
  
  
  libdata[libdataItem++] = new Array("obsolete_code/fastercenter.html#fastercenter", "fastercenter", 'routine in <a href="obsolete_code/fastercenter.html">fastercenter.pro</a>', "fastercenter.pro", "", "fastercenter", "", "inputidedsuns", "          -1", "");
  
  

libdata[libdataItem++] = new Array("obsolete_code/ff.html", "ff.pro", '.pro file in <a href="obsolete_code/dir-overview.html">obsolete_code/ directory</a>', "ff.pro", "", "", "", "", "          -1", "");
  
  
  libdata[libdataItem++] = new Array("obsolete_code/ff.html#ff", "ff", 'routine in <a href="obsolete_code/ff.html">ff.pro</a>', "ff.pro", "", "ff", "", "", "          -1", "");
  
  libdata[libdataItem++] = new Array("obsolete_code/ff.html#dim3", "dim3", 'routine in <a href="obsolete_code/ff.html">ff.pro</a>', "ff.pro", "", "dim3", "", "", "          -1", "");
  
  

libdata[libdataItem++] = new Array("albert_version/obsolete_files/fid_faster.html", "fid_faster.pro", '.pro file in <a href="albert_version/obsolete_files/dir-overview.html">albert_version/obsolete_files/ directory</a>', "fid_faster.pro", "", "", "", "", "          -1", "");
  
  
  libdata[libdataItem++] = new Array("albert_version/obsolete_files/fid_faster.html#fid_faster", "fid_faster", 'routine in <a href="albert_version/obsolete_files/fid_faster.html">fid_faster.pro</a>', "fid_faster.pro", "", "fid_faster", "", "inputimageinputstruct", "          -1", "");
  
  

libdata[libdataItem++] = new Array("./fid_locate.html", "fid_locate.pro", '.pro file in <a href="./dir-overview.html">./ directory</a>', "fid_locate.pro", "", "", "", "", "          -1", "");
  
  
  libdata[libdataItem++] = new Array("./fid_locate.html#fid_locate", "fid_locate", 'routine in <a href="./fid_locate.html">fid_locate.pro</a>', "fid_locate.pro", "", "fid_locate", "       Locates the whole and sub-pixel positions of fiducials in a cropped solar image   ", "mcenter           Finds the center of the local maxima using a binary mask instead of parabolic peak fitting.   inputimage           The raw input image   inputstruct           Structure containing all the solar information   ", "          -1", "");
  
  

libdata[libdataItem++] = new Array("albert_version/obsolete_files/fid_locate.html", "fid_locate.pro", '.pro file in <a href="albert_version/obsolete_files/dir-overview.html">albert_version/obsolete_files/ directory</a>', "fid_locate.pro", "", "", "", "", "          -1", "");
  
  
  libdata[libdataItem++] = new Array("albert_version/obsolete_files/fid_locate.html#fid_locate", "fid_locate", 'routine in <a href="albert_version/obsolete_files/fid_locate.html">fid_locate.pro</a>', "fid_locate.pro", "", "fid_locate", "       Locates the whole and sub-pixel positions of fiducials in a cropped solar image   ", "mcenter           Finds the center of the local maxima using a binary mask instead of parabolic peak fitting.   inputimage           The raw input image   inputstruct           Structure containing all the solar information   ", "          -1", "");
  
  

libdata[libdataItem++] = new Array("plots_tables_images/fidcomp.html", "fidcomp.pro", '.pro file in <a href="plots_tables_images/dir-overview.html">plots_tables_images/ directory</a>', "fidcomp.pro", "", "", "", "", "          -1", "");
  

libdata[libdataItem++] = new Array("obsolete_code/findf.html", "findf.pro", '.pro file in <a href="obsolete_code/dir-overview.html">obsolete_code/ directory</a>', "findf.pro", "", "", "", "", "          -1", "");
  

libdata[libdataItem++] = new Array("obsolete_code/galapagos.html", "galapagos.pro", '.pro file in <a href="obsolete_code/dir-overview.html">obsolete_code/ directory</a>', "galapagos.pro", "", "", "", "", "          -1", "");
  
  
  libdata[libdataItem++] = new Array("obsolete_code/galapagos.html#galapagos", "galapagos", 'routine in <a href="obsolete_code/galapagos.html">galapagos.pro</a>', "galapagos.pro", "", "galapagos", "", "inputthresh", "          -1", "");
  
  

libdata[libdataItem++] = new Array("albert_version/obsolete_files/gauss_fid.html", "gauss_fid.pro", '.pro file in <a href="albert_version/obsolete_files/dir-overview.html">albert_version/obsolete_files/ directory</a>', "gauss_fid.pro", "", "", "", "", "          -1", "");
  
  
  libdata[libdataItem++] = new Array("albert_version/obsolete_files/gauss_fid.html#gauss_fid", "gauss_fid", 'routine in <a href="albert_version/obsolete_files/gauss_fid.html">gauss_fid.pro</a>', "gauss_fid.pro", "", "gauss_fid", "", "inputimageinputstruct", "          -1", "");
  
  

libdata[libdataItem++] = new Array("obsolete_code/getstruct copy.html", "getstruct copy.pro", '.pro file in <a href="obsolete_code/dir-overview.html">obsolete_code/ directory</a>', "getstruct copy.pro", "", "", "", "", "          -1", "");
  
  
  libdata[libdataItem++] = new Array("obsolete_code/getstruct copy.html#getstruct", "getstruct", 'routine in <a href="obsolete_code/getstruct copy.html">getstruct copy.pro</a>', "getstruct copy.pro", "", "getstruct", "       Finds the centers of a triple-sun image and loads all relevant information        including offsets and angles into a new structure.   ", "time           Outputs how much time the program takes  struct           Structure containing the centers and cropped images of all 3 suns   ", "          -1", "");
  
  

libdata[libdataItem++] = new Array("obsolete_code/getstruct.html", "getstruct.pro", '.pro file in <a href="obsolete_code/dir-overview.html">obsolete_code/ directory</a>', "getstruct.pro", "", "", "", "", "          -1", "");
  
  
  libdata[libdataItem++] = new Array("obsolete_code/getstruct.html#getstruct", "getstruct", 'routine in <a href="obsolete_code/getstruct.html">getstruct.pro</a>', "getstruct.pro", "", "getstruct", "       Finds the centers of a triple-sun image and loads all relevant information        including offsets and angles into a new structure.   ", "time           Outputs how much time the program takes  file           What file to find 3 centers for  struct           Structure containing the centers and cropped images of all 3 suns  scan_width           How apart the scans are for minicrop().  sigmavalue          Sets the threshold to be: <span class= code-output >max(image) - sigmavalue*stddev(image)</span>  sundiam           Approximate diameter of sun in pixels. (Based on bmp image)   ", "          -1", "");
  
  

libdata[libdataItem++] = new Array("albert_version/obsolete_files/gord_fid.html", "gord_fid.pro", '.pro file in <a href="albert_version/obsolete_files/dir-overview.html">albert_version/obsolete_files/ directory</a>', "gord_fid.pro", "", "", "", "", "          -1", "");
  
  
  libdata[libdataItem++] = new Array("albert_version/obsolete_files/gord_fid.html#gord_fid", "gord_fid", 'routine in <a href="albert_version/obsolete_files/gord_fid.html">gord_fid.pro</a>', "gord_fid.pro", "", "gord_fid", "", "inputimageinputstruct", "          -1", "");
  
  

libdata[libdataItem++] = new Array("obsolete_code/histosmoothed.html", "histosmoothed.pro", '.pro file in <a href="obsolete_code/dir-overview.html">obsolete_code/ directory</a>', "histosmoothed.pro", "", "", "", "", "          -1", "");
  
  
  libdata[libdataItem++] = new Array("obsolete_code/histosmoothed.html#histosmoothed", "histosmoothed", 'routine in <a href="obsolete_code/histosmoothed.html">histosmoothed.pro</a>', "histosmoothed.pro", "", "histosmoothed", "", "input", "          -1", "");
  
  

libdata[libdataItem++] = new Array("obsolete_code/horiz.html", "horiz.pro", '.pro file in <a href="obsolete_code/dir-overview.html">obsolete_code/ directory</a>', "horiz.pro", "", "", "", "", "          -1", "");
  

libdata[libdataItem++] = new Array("albert_version/idsuns.html", "idsuns.pro", '.pro file in <a href="albert_version/dir-overview.html">albert_version/ directory</a>', "idsuns.pro", "", "", "", "", "          -1", "");
  
  
  libdata[libdataItem++] = new Array("albert_version/idsuns.html#idsuns", "idsuns", 'routine in <a href="albert_version/idsuns.html">idsuns.pro</a>', "idsuns.pro", "", "idsuns", "       Defines solar regions   ", "input           Starting input image   ", "          -1", "");
  
  

libdata[libdataItem++] = new Array("./idsuns.html", "idsuns.pro", '.pro file in <a href="./dir-overview.html">./ directory</a>', "idsuns.pro", "", "", "", "", "          -1", "");
  
  
  libdata[libdataItem++] = new Array("./idsuns.html#idsuns", "idsuns", 'routine in <a href="./idsuns.html">idsuns.pro</a>', "idsuns.pro", "", "idsuns", "       Defines solar regions   ", "input           Starting input image   ", "          -1", "");
  
  

libdata[libdataItem++] = new Array("obsolete_code/imageprep.html", "imageprep.pro", '.pro file in <a href="obsolete_code/dir-overview.html">obsolete_code/ directory</a>', "imageprep.pro", "", "", "", "", "          -1", "");
  
  
  libdata[libdataItem++] = new Array("obsolete_code/imageprep.html#imageprep", "imageprep", 'routine in <a href="obsolete_code/imageprep.html">imageprep.pro</a>', "imageprep.pro", "", "imageprep", "", "input", "          -1", "");
  
  

libdata[libdataItem++] = new Array("obsolete_code/kahuna _before_non-comment_removal.html", "kahuna _before_non-comment_removal.pro", '.pro file in <a href="obsolete_code/dir-overview.html">obsolete_code/ directory</a>', "kahuna _before_non-comment_removal.pro", "   JEREN SUZUKI: <span class= code-output >   Space Sciences Laboratory</span> <span class= code-output >   7 Gauss Way</span> <span class= code-output >   Berkeley, CA 94720 USA</span> <span class= code-output >   E-mail: jsuzuki@ssl.berkeley.edu</span>  ", "", " NAME:    KAHUNA   PURPOSE:    Finds the center of 3 suns in a single image. Currently limited to a .bmp test image. Instead    of scanning rows to crop, scans in a circle. Using solar centers, identifies fiducial positions.   ", "", "          -1", "");
  
  
  libdata[libdataItem++] = new Array("obsolete_code/kahuna _before_non-comment_removal.html#makelimbstrips", "makelimbstrips", 'routine in <a href="obsolete_code/kahuna _before_non-comment_removal.html">kahuna _before_non-comment_removal.pro</a>', "kahuna _before_non-comment_removal.pro", "", "makelimbstrips", "       Makes limb strips from full-length strips   ", "region           Which sun out of the three to find the center of. Defaults to the brightest sun  time           Prints the elapsed time  thresh           Threshold used to select pixels  xstrips           Structure containing row strips  ystrips           Structure containing column strips   ", "          -1", "");
  
  libdata[libdataItem++] = new Array("obsolete_code/kahuna _before_non-comment_removal.html#quickmask", "quickmask", 'routine in <a href="obsolete_code/kahuna _before_non-comment_removal.html">kahuna _before_non-comment_removal.pro</a>', "kahuna _before_non-comment_removal.pro", "", "quickmask", "       Finds center of mask where pixels are above a given threshold   ", "input_image           2D array of pixels to mask with threshold  thresh           Threshold used to select pixels  ", "          -1", "");
  
  libdata[libdataItem++] = new Array("obsolete_code/kahuna _before_non-comment_removal.html#whichcropmethod", "whichcropmethod", 'routine in <a href="obsolete_code/kahuna _before_non-comment_removal.html">kahuna _before_non-comment_removal.pro</a>', "kahuna _before_non-comment_removal.pro", "", "whichcropmethod", "       Crops differently according to which region is selected.   ", "region           1) main sun            2) 50% brightness sun            3) 25% brightness sun  ", "          -1", "");
  
  libdata[libdataItem++] = new Array("obsolete_code/kahuna _before_non-comment_removal.html#makestrips", "makestrips", 'routine in <a href="obsolete_code/kahuna _before_non-comment_removal.html">kahuna _before_non-comment_removal.pro</a>', "kahuna _before_non-comment_removal.pro", "", "makestrips", "       Only saves 5 strips centered around the solar diameter to reduce the amount of limb-            darkened pixels and to make the polynomial-fitted limbs more-or-less look similar.   ", "region       Which sun out of the three to find the center of. Defaults to the brightest sun  time       Prints elapsed time  thresh       Threshold used to select pixels  xstrips       Structure containing row strips  ystrips       Structure containing column strips   ", "          -1", "");
  
  libdata[libdataItem++] = new Array("obsolete_code/kahuna _before_non-comment_removal.html#circscancrop", "circscancrop", 'routine in <a href="obsolete_code/kahuna _before_non-comment_removal.html">kahuna _before_non-comment_removal.pro</a>', "kahuna _before_non-comment_removal.pro", "", "circscancrop", "       Quickly finds the center of the main sun, scans in a circle, and locates the two secondary        suns' centers. Crops either of the secondary suns based on what region specified.   ", "region           Which sun out of the three to find the center of. Defaults to the brightest sun  time           Print the elapsed time  mainxpos           X position of 100% brightness sun to scan in a circle around  mainypos           Y position of 100% brightness sun to scan in a circle around  image           Cropped area  thresh           Threshold used in finding center  xpos           Computed X position of center  ypos           Computed Y position of center  xoffset           X offset of cropped region's bottom left corner  yoffset           Y offset of cropped region's bottom left corner   ", "          -1", "");
  
  libdata[libdataItem++] = new Array("obsolete_code/kahuna _before_non-comment_removal.html#limbfit", "limbfit", 'routine in <a href="obsolete_code/kahuna _before_non-comment_removal.html">kahuna _before_non-comment_removal.pro</a>', "kahuna _before_non-comment_removal.pro", "", "limbfit", "       Uses the data from makelimbstrips and fits an n-th order polynomial to the limb to find where        it crosses the threshold.   ", "plot           Makes some nice plots  region           Which sun out of the three to find the center of. Defaults to the brightest sun  time           Prints the elapsed time  thresh           Threshold used to select pixels  xpos           X center  ypos           Y center   ", "          -1", "");
  
  libdata[libdataItem++] = new Array("obsolete_code/kahuna _before_non-comment_removal.html#getstruct", "getstruct", 'routine in <a href="obsolete_code/kahuna _before_non-comment_removal.html">kahuna _before_non-comment_removal.pro</a>', "kahuna _before_non-comment_removal.pro", "", "getstruct", "       Finds the centers of a triple-sun image and loads all relevant information        including offsets and angles into a new structure.   ", "time           Outputs how much time the program takes  struct           Structure containing the centers and cropped images of all 3 suns   ", "          -1", "");
  
  

libdata[libdataItem++] = new Array("obsolete_code/kahuna copy.html", "kahuna copy.pro", '.pro file in <a href="obsolete_code/dir-overview.html">obsolete_code/ directory</a>', "kahuna copy.pro", "   JEREN SUZUKI: <span class= code-output >   Space Sciences Laboratory</span> <span class= code-output >   7 Gauss Way</span> <span class= code-output >   Berkeley, CA 94720 USA</span> <span class= code-output >   E-mail: jsuzuki@ssl.berkeley.edu</span>  ", "", " NAME:    KAHUNA   PURPOSE:    Finds the center of 3 suns in a single image. Currently limited to a .bmp test image. Instead    of scanning rows to crop, scans in a circle. Using solar centers, identifies fiducial positions.   ", "", "          -1", "");
  
  
  libdata[libdataItem++] = new Array("obsolete_code/kahuna copy.html#kahuna", "kahuna", 'routine in <a href="obsolete_code/kahuna copy.html">kahuna copy.pro</a>', "kahuna copy.pro", "", "kahuna", "       This version uses limb fitting opposed to masking (tricenter).   ", "time           Outputs how much time the program takes   ", "          -1", "       Find and ISOLATE fiducials, not just mask them out         Ignore center if sun is too close to edge (or if when cropping, we cro outside wholeimage)         Use 25% of median(image)        Um, let's not (Apr24)         Make sure program doesn't freak out when sun isn't in POV   ");
  
  

libdata[libdataItem++] = new Array("obsolete_code/kahuna.html", "kahuna.pro", '.pro file in <a href="obsolete_code/dir-overview.html">obsolete_code/ directory</a>', "kahuna.pro", "   JEREN SUZUKI: <span class= code-output >   Space Sciences Laboratory</span> <span class= code-output >   7 Gauss Way</span> <span class= code-output >   Berkeley, CA 94720 USA</span> <span class= code-output >   E-mail: jsuzuki@ssl.berkeley.edu</span>  ", "", " NAME:    KAHUNA   PURPOSE:    Finds the center of 3 suns in a single image. Currently limited to a .bmp test image. Instead    of scanning rows to crop, scans in a circle. Using solar centers, identifies fiducial positions.   ", "", "          -1", "");
  
  
  libdata[libdataItem++] = new Array("obsolete_code/kahuna.html#makelimbstrips", "makelimbstrips", 'routine in <a href="obsolete_code/kahuna.html">kahuna.pro</a>', "kahuna.pro", "", "makelimbstrips", "       Makes limb strips from full-length strips   ", "region           Which sun out of the three to find the center of. Defaults to the brightest sun  time           Prints the elapsed time  thresh           Threshold used to select pixels  xstrips           Structure containing row strips  ystrips           Structure containing column strips   ", "          -1", "");
  
  libdata[libdataItem++] = new Array("obsolete_code/kahuna.html#quickmask", "quickmask", 'routine in <a href="obsolete_code/kahuna.html">kahuna.pro</a>', "kahuna.pro", "", "quickmask", "       Finds center of mask where pixels are above a given threshold   ", "input_image           2D array of pixels to mask with threshold  thresh           Threshold used to select pixels  ", "          -1", "");
  
  libdata[libdataItem++] = new Array("obsolete_code/kahuna.html#whichcropmethod", "whichcropmethod", 'routine in <a href="obsolete_code/kahuna.html">kahuna.pro</a>', "kahuna.pro", "", "whichcropmethod", "       Crops differently according to which region is selected.   ", "region           1) main sun            2) 50% brightness sun            3) 25% brightness sun  ", "          -1", "");
  
  libdata[libdataItem++] = new Array("obsolete_code/kahuna.html#makestrips", "makestrips", 'routine in <a href="obsolete_code/kahuna.html">kahuna.pro</a>', "kahuna.pro", "", "makestrips", "       Only saves 5 strips centered around the solar diameter to reduce the amount of limb-            darkened pixels and to make the polynomial-fitted limbs more-or-less look similar.   ", "region       Which sun out of the three to find the center of. Defaults to the brightest sun  time       Prints elapsed time  thresh       Threshold used to select pixels  xstrips       Structure containing row strips  ystrips       Structure containing column strips   ", "          -1", "");
  
  libdata[libdataItem++] = new Array("obsolete_code/kahuna.html#circscancrop", "circscancrop", 'routine in <a href="obsolete_code/kahuna.html">kahuna.pro</a>', "kahuna.pro", "", "circscancrop", "       Quickly finds the center of the main sun, scans in a circle, and locates the two secondary        suns' centers. Crops either of the secondary suns based on what region specified.   ", "region           Which sun out of the three to find the center of. Defaults to the brightest sun  time           Print the elapsed time  mainxpos           X position of 100% brightness sun to scan in a circle around  mainypos           Y position of 100% brightness sun to scan in a circle around  image           Cropped area  thresh           Threshold used in finding center  xpos           Computed X position of center  ypos           Computed Y position of center  xoffset           X offset of cropped region's bottom left corner  yoffset           Y offset of cropped region's bottom left corner   ", "          -1", "");
  
  libdata[libdataItem++] = new Array("obsolete_code/kahuna.html#limbfit", "limbfit", 'routine in <a href="obsolete_code/kahuna.html">kahuna.pro</a>', "kahuna.pro", "", "limbfit", "       Uses the data from makelimbstrips and fits an n-th order polynomial to the limb to find where        it crosses the threshold.   ", "plot           Makes some nice plots  region           Which sun out of the three to find the center of. Defaults to the brightest sun  time           Prints the elapsed time  thresh           Threshold used to select pixels  xpos           X center  ypos           Y center   ", "          -1", "");
  
  libdata[libdataItem++] = new Array("obsolete_code/kahuna.html#getstruct", "getstruct", 'routine in <a href="obsolete_code/kahuna.html">kahuna.pro</a>', "kahuna.pro", "", "getstruct", "       Finds the centers of a triple-sun image and loads all relevant information        including offsets and angles into a new structure.   ", "time           Outputs how much time the program takes  struct           Structure containing the centers and cropped images of all 3 suns   ", "          -1", "");
  
  libdata[libdataItem++] = new Array("obsolete_code/kahuna.html#cropme", "cropme", 'routine in <a href="obsolete_code/kahuna.html">kahuna.pro</a>', "kahuna.pro", "", "cropme", "", "inputpix", "          -1", "");
  
  libdata[libdataItem++] = new Array("obsolete_code/kahuna.html#bordercheck", "bordercheck", 'routine in <a href="obsolete_code/kahuna.html">kahuna.pro</a>', "kahuna.pro", "", "bordercheck", "", "input", "          -1", "");
  
  libdata[libdataItem++] = new Array("obsolete_code/kahuna.html#edgefidcheck", "edgefidcheck", 'routine in <a href="obsolete_code/kahuna.html">kahuna.pro</a>', "kahuna.pro", "", "edgefidcheck", "", "inputthresh", "          -1", "");
  
  

libdata[libdataItem++] = new Array("obsolete_code/kahuna_apr24.html", "kahuna_apr24.pro", '.pro file in <a href="obsolete_code/dir-overview.html">obsolete_code/ directory</a>', "kahuna_apr24.pro", "   JEREN SUZUKI: <span class= code-output >   Space Sciences Laboratory</span> <span class= code-output >   7 Gauss Way</span> <span class= code-output >   Berkeley, CA 94720 USA</span> <span class= code-output >   E-mail: jsuzuki@ssl.berkeley.edu</span>  ", "", " NAME:    KAHUNA   PURPOSE:    Finds the center of 3 suns in a single image. Currently limited to a .bmp test image. Instead    of scanning rows to crop, scans in a circle. Using solar centers, identifies fiducial positions.   ", "", "          -1", "");
  
  
  libdata[libdataItem++] = new Array("obsolete_code/kahuna_apr24.html#makelimbstrips", "makelimbstrips", 'routine in <a href="obsolete_code/kahuna_apr24.html">kahuna_apr24.pro</a>', "kahuna_apr24.pro", "", "makelimbstrips", "       Makes limb strips from full-length strips   ", "region           Which sun out of the three to find the center of. Defaults to the brightest sun  time           Prints the elapsed time  thresh           Threshold used to select pixels  xstrips           Structure containing row strips  ystrips           Structure containing column strips   ", "          -1", "");
  
  libdata[libdataItem++] = new Array("obsolete_code/kahuna_apr24.html#quickmask", "quickmask", 'routine in <a href="obsolete_code/kahuna_apr24.html">kahuna_apr24.pro</a>', "kahuna_apr24.pro", "", "quickmask", "       Finds center of mask where pixels are above a given threshold   ", "input_image           2D array of pixels to mask with threshold  thresh           Threshold used to select pixels  ", "          -1", "");
  
  libdata[libdataItem++] = new Array("obsolete_code/kahuna_apr24.html#quickfidmask", "quickfidmask", 'routine in <a href="obsolete_code/kahuna_apr24.html">kahuna_apr24.pro</a>', "kahuna_apr24.pro", "", "quickfidmask", "       Finds center of mask where pixels are above a given threshold   ", "input_image           2D array of pixels to mask with threshold  thresh           Threshold used to select pixels  ", "          -1", "");
  
  libdata[libdataItem++] = new Array("obsolete_code/kahuna_apr24.html#whichcropmethod", "whichcropmethod", 'routine in <a href="obsolete_code/kahuna_apr24.html">kahuna_apr24.pro</a>', "kahuna_apr24.pro", "", "whichcropmethod", "       Crops differently according to which region is selected.   ", "region           1) main sun            2) 50% brightness sun            3) 25% brightness sun  ", "          -1", "");
  
  libdata[libdataItem++] = new Array("obsolete_code/kahuna_apr24.html#makestrips", "makestrips", 'routine in <a href="obsolete_code/kahuna_apr24.html">kahuna_apr24.pro</a>', "kahuna_apr24.pro", "", "makestrips", "       Only saves 5 strips centered around the solar diameter to reduce the amount of limb-            darkened pixels and to make the polynomial-fitted limbs more-or-less look similar.   ", "region       Which sun out of the three to find the center of. Defaults to the brightest sun  time       Prints elapsed time  thresh       Threshold used to select pixels  xstrips       Structure containing row strips  ystrips       Structure containing column strips   ", "          -1", "");
  
  libdata[libdataItem++] = new Array("obsolete_code/kahuna_apr24.html#circscancrop", "circscancrop", 'routine in <a href="obsolete_code/kahuna_apr24.html">kahuna_apr24.pro</a>', "kahuna_apr24.pro", "", "circscancrop", "       Quickly finds the center of the main sun, scans in a circle, and locates the two secondary        suns' centers. Crops either of the secondary suns based on what region specified.   ", "region           Which sun out of the three to find the center of. Defaults to the brightest sun  time           Print the elapsed time  mainxpos           X position of 100% brightness sun to scan in a circle around  mainypos           Y position of 100% brightness sun to scan in a circle around  image           Cropped area  thresh           Threshold used in finding center  xpos           Computed X position of center  ypos           Computed Y position of center  xoffset           X offset of cropped region's bottom left corner  yoffset           Y offset of cropped region's bottom left corner   ", "          -1", "");
  
  libdata[libdataItem++] = new Array("obsolete_code/kahuna_apr24.html#limbfit", "limbfit", 'routine in <a href="obsolete_code/kahuna_apr24.html">kahuna_apr24.pro</a>', "kahuna_apr24.pro", "", "limbfit", "       Uses the data from makelimbstrips and fits an n-th order polynomial to the limb to find where        it crosses the threshold.   ", "plot           Makes some nice plots  region           Which sun out of the three to find the center of. Defaults to the brightest sun  time           Prints the elapsed time  thresh           Threshold used to select pixels  xpos           X center  ypos           Y center   ", "          -1", "");
  
  libdata[libdataItem++] = new Array("obsolete_code/kahuna_apr24.html#getstruct", "getstruct", 'routine in <a href="obsolete_code/kahuna_apr24.html">kahuna_apr24.pro</a>', "kahuna_apr24.pro", "", "getstruct", "       Finds the centers of a triple-sun image and loads all relevant information        including offsets and angles into a new structure.   ", "time           Outputs how much time the program takes  struct           Structure containing the centers and cropped images of all 3 suns   ", "          -1", "");
  
  libdata[libdataItem++] = new Array("obsolete_code/kahuna_apr24.html#auxcrop", "auxcrop", 'routine in <a href="obsolete_code/kahuna_apr24.html">kahuna_apr24.pro</a>', "kahuna_apr24.pro", "", "auxcrop", "", "", "          -1", "");
  
  libdata[libdataItem++] = new Array("obsolete_code/kahuna_apr24.html#cropme", "cropme", 'routine in <a href="obsolete_code/kahuna_apr24.html">kahuna_apr24.pro</a>', "kahuna_apr24.pro", "", "cropme", "", "inputpix", "          -1", "");
  
  libdata[libdataItem++] = new Array("obsolete_code/kahuna_apr24.html#bordercheck", "bordercheck", 'routine in <a href="obsolete_code/kahuna_apr24.html">kahuna_apr24.pro</a>', "kahuna_apr24.pro", "", "bordercheck", "", "input", "          -1", "");
  
  libdata[libdataItem++] = new Array("obsolete_code/kahuna_apr24.html#morescratch", "morescratch", 'routine in <a href="obsolete_code/kahuna_apr24.html">kahuna_apr24.pro</a>', "kahuna_apr24.pro", "", "morescratch", "", "inputthresh", "          -1", "");
  
  libdata[libdataItem++] = new Array("obsolete_code/kahuna_apr24.html#edgefidcheck", "edgefidcheck", 'routine in <a href="obsolete_code/kahuna_apr24.html">kahuna_apr24.pro</a>', "kahuna_apr24.pro", "", "edgefidcheck", "", "inputthresh", "          -1", "");
  
  libdata[libdataItem++] = new Array("obsolete_code/kahuna_apr24.html#galapagos", "galapagos", 'routine in <a href="obsolete_code/kahuna_apr24.html">kahuna_apr24.pro</a>', "kahuna_apr24.pro", "", "galapagos", "", "inputthresh", "          -1", "");
  
  libdata[libdataItem++] = new Array("obsolete_code/kahuna_apr24.html#scratch", "scratch", 'routine in <a href="obsolete_code/kahuna_apr24.html">kahuna_apr24.pro</a>', "kahuna_apr24.pro", "", "scratch", "", "inputthresh", "          -1", "");
  
  libdata[libdataItem++] = new Array("obsolete_code/kahuna_apr24.html#barkbark", "barkbark", 'routine in <a href="obsolete_code/kahuna_apr24.html">kahuna_apr24.pro</a>', "kahuna_apr24.pro", "", "barkbark", "", "inputthresh", "          -1", "");
  
  libdata[libdataItem++] = new Array("obsolete_code/kahuna_apr24.html#last6pixels", "last6pixels", 'routine in <a href="obsolete_code/kahuna_apr24.html">kahuna_apr24.pro</a>', "kahuna_apr24.pro", "", "last6pixels", "", "inputthresh", "          -1", "");
  
  libdata[libdataItem++] = new Array("obsolete_code/kahuna_apr24.html#smoothit", "smoothit", 'routine in <a href="obsolete_code/kahuna_apr24.html">kahuna_apr24.pro</a>', "kahuna_apr24.pro", "", "smoothit", "", "input", "          -1", "");
  
  

libdata[libdataItem++] = new Array("obsolete_code/last6pixels.html", "last6pixels.pro", '.pro file in <a href="obsolete_code/dir-overview.html">obsolete_code/ directory</a>', "last6pixels.pro", "", "", "", "", "          -1", "");
  
  
  libdata[libdataItem++] = new Array("obsolete_code/last6pixels.html#last6pixels", "last6pixels", 'routine in <a href="obsolete_code/last6pixels.html">last6pixels.pro</a>', "last6pixels.pro", "", "last6pixels", "", "inputthresh", "          -1", "");
  
  

libdata[libdataItem++] = new Array("obsolete_code/lclxtrem.html", "lclxtrem.pro", '.pro file in <a href="obsolete_code/dir-overview.html">obsolete_code/ directory</a>', "lclxtrem.pro", "", "", "", "", "          -1", "");
  
  
  libdata[libdataItem++] = new Array("obsolete_code/lclxtrem.html#lclxtrem", "lclxtrem", 'routine in <a href="obsolete_code/lclxtrem.html">lclxtrem.pro</a>', "lclxtrem.pro", "", "lclxtrem", " NAME:   lclxtrem  PURPOSE:   Find local minima or maxima in a 1-d vector.  DESCRIPTION:   CATEGORY:   Spectroscopy  CALLING SEQUENCE:   idx=lclxtrem(vec,width,[/MAXIMA])  INPUTS:   vec - Input vector of data points.   width - size of zone to search, minima (or maxima) separated by less than             width are never returned.  (Default = 5)  OPTIONAL INPUT PARAMETERS:   KEYWORD INPUT PARAMETERS:   MAXIMA  - Flag, if set, causes program to search for local maxima, the default             is to search for local minima  OUTPUTS:   Returns indicies into vec that give local extrema.  KEYWORD OUTPUT PARAMETERS:   COMMON BLOCKS:   SIDE EFFECTS:   RESTRICTIONS:   PROCEDURE:   MODIFICATION HISTORY:   97/12/5, Written by Marc W. Buie, Lowell Observatory   ", "MAXIMAvecin_width", "          -1", "");
  
  

libdata[libdataItem++] = new Array("obsolete_code/limbfit copy.html", "limbfit copy.pro", '.pro file in <a href="obsolete_code/dir-overview.html">obsolete_code/ directory</a>', "limbfit copy.pro", "", "", "", "", "          -1", "");
  
  
  libdata[libdataItem++] = new Array("obsolete_code/limbfit copy.html#limbfit", "limbfit", 'routine in <a href="obsolete_code/limbfit copy.html">limbfit copy.pro</a>', "limbfit copy.pro", "", "limbfit", "       Uses the data from makelimbstrips and fits an n-th order polynomial to the limb to find where        it crosses the threshold.   ", "plot           Makes some nice plots  region           Which sun out of the three to find the center of. Defaults to the brightest sun  time           Prints the elapsed time  thresh           Threshold used to select pixels  xpos           X center  ypos           Y center   ", "          -1", "");
  
  

libdata[libdataItem++] = new Array("./limbfit.html", "limbfit.pro", '.pro file in <a href="./dir-overview.html">./ directory</a>', "limbfit.pro", "", "", "", "", "          -1", "");
  
  
  libdata[libdataItem++] = new Array("./limbfit.html#limbfit", "limbfit", 'routine in <a href="./limbfit.html">limbfit.pro</a>', "limbfit.pro", "", "limbfit", "       Fits 2nd order polynomial to limb strips   ", "inputstruct           Structure containing all the solar information   inputimage           Starting input image   ", "          -1", "");
  
  

libdata[libdataItem++] = new Array("albert_version/limbfit.html", "limbfit.pro", '.pro file in <a href="albert_version/dir-overview.html">albert_version/ directory</a>', "limbfit.pro", "", "", "", "", "          -1", "");
  
  
  libdata[libdataItem++] = new Array("albert_version/limbfit.html#limbfit", "limbfit", 'routine in <a href="albert_version/limbfit.html">limbfit.pro</a>', "limbfit.pro", "", "limbfit", "       Fits 2nd order polynomial to limb strips   ", "inputstruct           Structure containing all the solar information   inputimage           Starting input image   ", "          -1", "");
  
  

libdata[libdataItem++] = new Array("obsolete_code/limbfit.html", "limbfit.pro", '.pro file in <a href="obsolete_code/dir-overview.html">obsolete_code/ directory</a>', "limbfit.pro", "", "", "", "", "          -1", "");
  
  
  libdata[libdataItem++] = new Array("obsolete_code/limbfit.html#limbfit", "limbfit", 'routine in <a href="obsolete_code/limbfit.html">limbfit.pro</a>', "limbfit.pro", "", "limbfit", "   Uses the data from makelimbstrips and fits an n-th order polynomial to the limb to find where        it crosses the threshold.   ", "nstrips           How many strips to select, centered around the row/col diameter  plot           Makes some nice plots  region           Which sun out of the three to find the center of. Defaults to the brightest sun  time           Prints the elapsed time  thresh           Threshold used to select pixels  xpos           X center  ypos           Y center   file           File to be read in  ministrip_length           How long the trimmed down strip will be  order           What order polynomial to use for POLY_FIT()  scan_width           Indicates how far apart to scan  sigmavalue           Sets the threshold to be:            max(image) - sigmavalue*stddev(image)   sundiam           Approximate diameter of sun in pixels. (Based on bmp image)  ", "          -1", "");
  
  

libdata[libdataItem++] = new Array("albert_version/obsolete_files/localmax.html", "localmax.pro", '.pro file in <a href="albert_version/obsolete_files/dir-overview.html">albert_version/obsolete_files/ directory</a>', "localmax.pro", "", "", "", "", "          -1", "");
  
  
  libdata[libdataItem++] = new Array("albert_version/obsolete_files/localmax.html#localmax", "localmax", 'routine in <a href="albert_version/obsolete_files/localmax.html">localmax.pro</a>', "localmax.pro", "", "localmax", "", "imgfloorceiling", "          -1", "");
  
  

libdata[libdataItem++] = new Array("obsolete_code/makelimbstrips.html", "makelimbstrips.pro", '.pro file in <a href="obsolete_code/dir-overview.html">obsolete_code/ directory</a>', "makelimbstrips.pro", "", "", "", "", "          -1", "");
  
  
  libdata[libdataItem++] = new Array("obsolete_code/makelimbstrips.html#makelimbstrips", "makelimbstrips", 'routine in <a href="obsolete_code/makelimbstrips.html">makelimbstrips.pro</a>', "makelimbstrips.pro", "", "makelimbstrips", "       Makes limb strips from full-length strips   ", "nstrips           How many strips to select, centered around the row/col diameter  region           Which sun out of the three to find the center of. Defaults to the brightest sun  time           Prints the elapsed time   thresh           Threshold used to select pixels   xstripsystripsfile           File to be read in  ministrip_length           How long the total array of the cut-down strip will be  scan_width           Indicates how far apart to scan  sigmavalue           Sets the threshold to be:            max(image) - sigmavalue*stddev(image)   sundiam           Approximate diameter of sun in pixels. (Based on bmp image)  ", "          -1", "   Exactly how much data should be stored in a structure? Since we're interested in saving space,    doesn't make sense to repeat any data in the structures.  ");
  
  

libdata[libdataItem++] = new Array("albert_version/makelimbstrips.html", "makelimbstrips.pro", '.pro file in <a href="albert_version/dir-overview.html">albert_version/ directory</a>', "makelimbstrips.pro", "", "", "", "", "          -1", "");
  
  
  libdata[libdataItem++] = new Array("albert_version/makelimbstrips.html#makelimbstrips", "makelimbstrips", 'routine in <a href="albert_version/makelimbstrips.html">makelimbstrips.pro</a>', "makelimbstrips.pro", "", "makelimbstrips", "       Makes limb strips from whole strips   ", "inputstruct           Structure containing all the solar information   inputimage           The raw input image   ", "          -1", "");
  
  

libdata[libdataItem++] = new Array("./makelimbstrips.html", "makelimbstrips.pro", '.pro file in <a href="./dir-overview.html">./ directory</a>', "makelimbstrips.pro", "", "", "", "", "          -1", "");
  
  
  libdata[libdataItem++] = new Array("./makelimbstrips.html#makelimbstrips", "makelimbstrips", 'routine in <a href="./makelimbstrips.html">makelimbstrips.pro</a>', "makelimbstrips.pro", "", "makelimbstrips", "       Makes limb strips from whole strips   ", "inputstruct           Structure containing all the solar information   inputimage           The raw input image   ", "          -1", "");
  
  

libdata[libdataItem++] = new Array("albert_version/obsolete_files/makeskinnylimbstrips.html", "makeskinnylimbstrips.pro", '.pro file in <a href="albert_version/obsolete_files/dir-overview.html">albert_version/obsolete_files/ directory</a>', "makeskinnylimbstrips.pro", "", "", "", "", "          -1", "");
  
  
  libdata[libdataItem++] = new Array("albert_version/obsolete_files/makeskinnylimbstrips.html#makeskinnylimbstrips", "makeskinnylimbstrips", 'routine in <a href="albert_version/obsolete_files/makeskinnylimbstrips.html">makeskinnylimbstrips.pro</a>', "makeskinnylimbstrips.pro", "", "makeskinnylimbstrips", "       Makes limb strips from whole strips   ", "inputstruct           Structure containing all the solar information   inputimage           The raw input image   ", "          -1", "");
  
  

libdata[libdataItem++] = new Array("./makeskinnylimbstrips.html", "makeskinnylimbstrips.pro", '.pro file in <a href="./dir-overview.html">./ directory</a>', "makeskinnylimbstrips.pro", "", "", "", "", "          -1", "");
  
  
  libdata[libdataItem++] = new Array("./makeskinnylimbstrips.html#makeskinnylimbstrips", "makeskinnylimbstrips", 'routine in <a href="./makeskinnylimbstrips.html">makeskinnylimbstrips.pro</a>', "makeskinnylimbstrips.pro", "", "makeskinnylimbstrips", "       Makes limb strips from whole strips   ", "inputstruct           Structure containing all the solar information   inputimage           The raw input image   ", "          -1", "");
  
  

libdata[libdataItem++] = new Array("./makeslimlimbstrips.html", "makeslimlimbstrips.pro", '.pro file in <a href="./dir-overview.html">./ directory</a>', "makeslimlimbstrips.pro", "", "", "", "", "          -1", "");
  
  
  libdata[libdataItem++] = new Array("./makeslimlimbstrips.html#makeslimlimbstrips", "makeslimlimbstrips", 'routine in <a href="./makeslimlimbstrips.html">makeslimlimbstrips.pro</a>', "makeslimlimbstrips.pro", "", "makeslimlimbstrips", "       Makes limb strips from whole strips   ", "inputstruct           Structure containing all the solar information   inputimage           The raw input image   ", "          -1", "");
  
  

libdata[libdataItem++] = new Array("albert_version/makeslimlimbstrips.html", "makeslimlimbstrips.pro", '.pro file in <a href="albert_version/dir-overview.html">albert_version/ directory</a>', "makeslimlimbstrips.pro", "", "", "", "", "          -1", "");
  
  
  libdata[libdataItem++] = new Array("albert_version/makeslimlimbstrips.html#makeslimlimbstrips", "makeslimlimbstrips", 'routine in <a href="albert_version/makeslimlimbstrips.html">makeslimlimbstrips.pro</a>', "makeslimlimbstrips.pro", "", "makeslimlimbstrips", "       Makes limb strips from whole strips   ", "inputstruct           Structure containing all the solar information   inputimage           The raw input image   ", "          -1", "");
  
  

libdata[libdataItem++] = new Array("./makestrips.html", "makestrips.pro", '.pro file in <a href="./dir-overview.html">./ directory</a>', "makestrips.pro", "", "", "", "", "          -1", "");
  
  
  libdata[libdataItem++] = new Array("./makestrips.html#makestrips", "makestrips", 'routine in <a href="./makestrips.html">makestrips.pro</a>', "makestrips.pro", "", "makestrips", "       Makes strips using approx centroiding method to make cropped areas   ", "inputstruct           Structure containing all the solar information   inputimage           The raw input image   ", "          -1", "");
  
  

libdata[libdataItem++] = new Array("albert_version/makestrips.html", "makestrips.pro", '.pro file in <a href="albert_version/dir-overview.html">albert_version/ directory</a>', "makestrips.pro", "", "", "", "", "          -1", "");
  
  
  libdata[libdataItem++] = new Array("albert_version/makestrips.html#makestrips", "makestrips", 'routine in <a href="albert_version/makestrips.html">makestrips.pro</a>', "makestrips.pro", "", "makestrips", "       Makes strips using approx centroiding method to make cropped areas   ", "inputstruct           Structure containing all the solar information   inputimage           The raw input image   ", "          -1", "");
  
  

libdata[libdataItem++] = new Array("obsolete_code/makestrips.html", "makestrips.pro", '.pro file in <a href="obsolete_code/dir-overview.html">obsolete_code/ directory</a>', "makestrips.pro", "", "", "", "", "          -1", "");
  
  
  libdata[libdataItem++] = new Array("obsolete_code/makestrips.html#makestrips", "makestrips", 'routine in <a href="obsolete_code/makestrips.html">makestrips.pro</a>', "makestrips.pro", "", "makestrips", "		Only saves 5 strips centered around the solar diameter to reduce the amount of limb-        	darkened pixels and to make the polynomial-fitted limbs more-or-less look similar.   ", "nstripsregiontimethreshxstripsystripsfilescan_widthsigmavaluesundiam", "          -1", "");
  
  

libdata[libdataItem++] = new Array("obsolete_code/makestrips_may8.html", "makestrips_may8.pro", '.pro file in <a href="obsolete_code/dir-overview.html">obsolete_code/ directory</a>', "makestrips_may8.pro", "", "", "", "", "          -1", "");
  
  
  libdata[libdataItem++] = new Array("obsolete_code/makestrips_may8.html#makestrips", "makestrips", 'routine in <a href="obsolete_code/makestrips_may8.html">makestrips_may8.pro</a>', "makestrips_may8.pro", "", "makestrips", "       Only saves 5 strips centered around the solar diameter to reduce the amount of limb-            darkened pixels and to make the polynomial-fitted limbs more-or-less look similar.   ", "region       Which sun out of the three to find the center of. Defaults to the brightest sun  time       Prints elapsed time  thresh       Threshold used to select pixels  xstrips       Structure containing row strips  ystrips       Structure containing column strips   ", "          -1", "");
  
  

libdata[libdataItem++] = new Array("obsolete_code/merrygotrace.html", "merrygotrace.pro", '.pro file in <a href="obsolete_code/dir-overview.html">obsolete_code/ directory</a>', "merrygotrace.pro", "   JEREN SUZUKI: <span class= code-output >   Space Sciences Laboratory</span> <span class= code-output >   7 Gauss Way</span> <span class= code-output >   Berkeley, CA 94720 USA</span> <span class= code-output >   E-mail: jsuzuki@ssl.berkeley.edu</span>  ", "", " NAME:    MERRYGOTRACE   PURPOSE:    Finds the center of 3 suns in a single image. Currently limited to a .bmp test image. Instead    of scanning rows to crop, scans in a circle.   ", "", "          -1", "");
  
  
  libdata[libdataItem++] = new Array("obsolete_code/merrygotrace.html#makelimbstrips", "makelimbstrips", 'routine in <a href="obsolete_code/merrygotrace.html">merrygotrace.pro</a>', "merrygotrace.pro", "", "makelimbstrips", "       Makes limb strips from full-length strips   ", "region           Which sun out of the three to find the center of. Defaults to the brightest sun  time           Prints the elapsed time  thresh           Threshold used to select pixels  xstrips           Structure containing row strips  ystrips           Structure containing column strips   ", "          -1", "");
  
  libdata[libdataItem++] = new Array("obsolete_code/merrygotrace.html#quickmask", "quickmask", 'routine in <a href="obsolete_code/merrygotrace.html">merrygotrace.pro</a>', "merrygotrace.pro", "", "quickmask", "       Finds center of mask where pixels are above a given threshold   ", "image           2D array of pixels to mask with threshold  thresh           Threshold used to select pixels  ", "          -1", "");
  
  libdata[libdataItem++] = new Array("obsolete_code/merrygotrace.html#whichcropmethod", "whichcropmethod", 'routine in <a href="obsolete_code/merrygotrace.html">merrygotrace.pro</a>', "merrygotrace.pro", "", "whichcropmethod", "       Crops differently according to which region is selected.   ", "region           1) main sun            2) 50% brightness sun            3) 25% brightness sun  ", "          -1", "");
  
  libdata[libdataItem++] = new Array("obsolete_code/merrygotrace.html#makestrips", "makestrips", 'routine in <a href="obsolete_code/merrygotrace.html">merrygotrace.pro</a>', "merrygotrace.pro", "", "makestrips", "       Only saves 5 strips centered around the solar diameter to reduce the amount of limb-            darkened pixels and to make the polynomial-fitted limbs more-or-less look similar.   ", "region       Which sun out of the three to find the center of. Defaults to the brightest sun  time       Prints elapsed time  thresh       Threshold used to select pixels  xstrips       Structure containing row strips  ystrips       Structure containing column strips   ", "          -1", "");
  
  libdata[libdataItem++] = new Array("obsolete_code/merrygotrace.html#circscancrop", "circscancrop", 'routine in <a href="obsolete_code/merrygotrace.html">merrygotrace.pro</a>', "merrygotrace.pro", "", "circscancrop", "       Quickly finds the center of the main sun, scans in a circle, and locates the two secondary        suns' centers. Crops either of the secondary suns based on what region specified.   ", "region           Which sun out of the three to find the center of. Defaults to the brightest sun  time           Print the elapsed time  mainxpos           X position of 100% brightness sun to scan in a circle around  mainypos           Y position of 100% brightness sun to scan in a circle around  image           Cropped area  thresh           Threshold used in finding center  xpos           Computed X position of center  ypos           Computed Y position of center  xoffset           X offset of cropped region's bottom left corner  yoffset           Y offset of cropped region's bottom left corner   ", "          -1", "");
  
  libdata[libdataItem++] = new Array("obsolete_code/merrygotrace.html#limbfit", "limbfit", 'routine in <a href="obsolete_code/merrygotrace.html">merrygotrace.pro</a>', "merrygotrace.pro", "", "limbfit", "       Uses the data from makelimbstrips and fits an n-th order polynomial to the limb to find where        it crosses the threshold.   ", "plot           Makes some nice plots  region           Which sun out of the three to find the center of. Defaults to the brightest sun  time           Prints the elapsed time  thresh           Threshold used to select pixels  xpos           X center  ypos           Y center   ", "          -1", "");
  
  libdata[libdataItem++] = new Array("obsolete_code/merrygotrace.html#getstruct", "getstruct", 'routine in <a href="obsolete_code/merrygotrace.html">merrygotrace.pro</a>', "merrygotrace.pro", "", "getstruct", "       Finds the centers of a triple-sun image and loads all relevant information        including offsets and angles into a new structure.   ", "time           Outputs how much time the program takes  struct           Structure containing the centers and cropped images of all 3 suns   ", "          -1", "");
  
  

libdata[libdataItem++] = new Array("obsolete_code/mgt.html", "mgt.pro", '.pro file in <a href="obsolete_code/dir-overview.html">obsolete_code/ directory</a>', "mgt.pro", "   JEREN SUZUKI: <span class= code-output >   Space Sciences Laboratory</span> <span class= code-output >   7 Gauss Way</span> <span class= code-output >   Berkeley, CA 94720 USA</span> <span class= code-output >   E-mail: jsuzuki@ssl.berkeley.edu</span>  ", "", " NAME:    MERRYGOTRACE   PURPOSE:    Finds the center of 3 suns in a single image. Currently limited to a .bmp test image. Instead    of scanning rows to crop, scans in a circle.   ", "", "          -1", "");
  
  
  libdata[libdataItem++] = new Array("obsolete_code/mgt.html#makelimbstrips", "makelimbstrips", 'routine in <a href="obsolete_code/mgt.html">mgt.pro</a>', "mgt.pro", "", "makelimbstrips", "       Makes limb strips from full-length strips   ", "nstrips           How many strips to select, centered around the row/col diameter  region           Which sun out of the three to find the center of. Defaults to the brightest sun  time           Prints the elapsed time   thresh           Threshold used to select pixels   xstripsystripsfile           File to be read in  ministrip_length           How long the total array of the cut-down strip will be  scan_width           Indicates how far apart to scan  sundiam           Approximate diameter of sun in pixels. (Based on bmp image)  ", "          -1", "   Exactly how much data should be stored in a structure? Since we're interested in saving space,    doesn't make sense to repeat any data in the structures.  ");
  
  libdata[libdataItem++] = new Array("obsolete_code/mgt.html#quickmask", "quickmask", 'routine in <a href="obsolete_code/mgt.html">mgt.pro</a>', "mgt.pro", "", "quickmask", "", "imagethresh", "          -1", "");
  
  libdata[libdataItem++] = new Array("obsolete_code/mgt.html#whichcropmethod", "whichcropmethod", 'routine in <a href="obsolete_code/mgt.html">mgt.pro</a>', "mgt.pro", "", "whichcropmethod", "", "fileregionscan_widthsundiamthresh", "          -1", "");
  
  libdata[libdataItem++] = new Array("obsolete_code/mgt.html#makestrips", "makestrips", 'routine in <a href="obsolete_code/mgt.html">mgt.pro</a>', "mgt.pro", "", "makestrips", "       Only saves 5 strips centered around the solar diameter to reduce the amount of limb-            darkened pixels and to make the polynomial-fitted limbs more-or-less look similar.   ", "nstrips       How many strips to select, centered around the row/col diameter  region       Which sun out of the three to find the center of. Defaults to the brightest sun  time       Prints elapsed time  thresh       Threshold used to select pixels  xstrips       Structure containing row strips  ystrips       Structure containing column strips   file       File to be read in  scan_width       Indicates how far apart to scan  sundiam       Approximate diameter of sun in pixels. (Based on bmp image)  ", "          -1", "");
  
  libdata[libdataItem++] = new Array("obsolete_code/mgt.html#circscancrop", "circscancrop", 'routine in <a href="obsolete_code/mgt.html">mgt.pro</a>', "mgt.pro", "", "circscancrop", "       Quickly finds the center of the main sun, scans in a circle, and locates the two secondary        suns' centers. Crops either of the secondary suns based on what region specified.   ", "region           Which sun out of the three to find the center of. Defaults to the brightest sun  time           Print the elapsed time  mainxposmainyposfile           What file to load in  imagexpos           Computed X position of center  ypos           Computed Y position of center  xoffsetyoffsetscan_width           How apart the scans are for minicrop().  sundiam           Approximate diameter of sun in pixels. (Based on bmp image)  thresh           Threshold used in finding center   ", "          -1", "");
  
  libdata[libdataItem++] = new Array("obsolete_code/mgt.html#mainsuncrop", "mainsuncrop", 'routine in <a href="obsolete_code/mgt.html">mgt.pro</a>', "mgt.pro", "", "mainsuncrop", "", "timefilescan_widthsundiam", "          -1", "");
  
  libdata[libdataItem++] = new Array("obsolete_code/mgt.html#merrygotrimask", "merrygotrimask", 'routine in <a href="obsolete_code/mgt.html">mgt.pro</a>', "mgt.pro", "", "merrygotrimask", "       Had to make a new version of comp3 because the old one called scanbox() by default   ", "time           Print the elapsed time  image           Cropped image  file           What file to load in  xpos           Computed X position of center  ypos           Computed Y position of center  xoffsetyoffsetscan_width           How apart the scans are for minicrop().  sundiam           Approximate diameter of sun in pixels. (Based on bmp image)  thresh           Threshold used in finding center   ", "          -1", "");
  
  libdata[libdataItem++] = new Array("obsolete_code/mgt.html#limbfit", "limbfit", 'routine in <a href="obsolete_code/mgt.html">mgt.pro</a>', "mgt.pro", "", "limbfit", "   Uses the data from makelimbstrips and fits an n-th order polynomial to the limb to find where        it crosses the threshold.   ", "nstrips           How many strips to select, centered around the row/col diameter  plot           Makes some nice plots  region           Which sun out of the three to find the center of. Defaults to the brightest sun  time           Prints the elapsed time  thresh           Threshold used to select pixels  xpos           X center  ypos           Y center   file           File to be read in  ministrip_length           How long the trimmed down strip will be  order           What order polynomial to use for POLY_FIT()  scan_width           Indicates how far apart to scan  sundiam           Approximate diameter of sun in pixels. (Based on bmp image)  ", "          -1", "");
  
  libdata[libdataItem++] = new Array("obsolete_code/mgt.html#getstruct", "getstruct", 'routine in <a href="obsolete_code/mgt.html">mgt.pro</a>', "mgt.pro", "", "getstruct", "       Finds the centers of a triple-sun image and loads all relevant information        including offsets and angles into a new structure.   ", "time           Outputs how much time the program takes  file           What file to find 3 centers for  struct           Structure containing the centers and cropped images of all 3 suns  scan_width           How apart the scans are for minicrop().  sundiam           Approximate diameter of sun in pixels. (Based on bmp image)   ", "          -1", "");
  
  

libdata[libdataItem++] = new Array("obsolete_code/minicrop.html", "minicrop.pro", '.pro file in <a href="obsolete_code/dir-overview.html">obsolete_code/ directory</a>', "minicrop.pro", "", "", "", "", "          -1", "");
  
  
  libdata[libdataItem++] = new Array("obsolete_code/minicrop.html#minicrop", "minicrop", 'routine in <a href="obsolete_code/minicrop.html">minicrop.pro</a>', "minicrop.pro", "", "minicrop", "       Small function to keep code small in cropit. Finds the row where the threshold is crossed        and then steps back in the x-direction to find the left side of the cropping box. Skips        over the sun by a predetermined value then crops out the sun.   ", "time           Print the elapsed time  temparr           2D array to check boundary limits of  rowscan           Where to crop the rows from  colscan           Where to crop the columns from  rowendscan           Where to crop the rows to  colendscan           Where to crop the columns to  scan_width           How apart the scans are for minicrop().  sundiam           Approximate diameter of sun in pixels. (Based on bmp image)  thresh           What the minimum threshold will be for scanning   ", "          -1", "");
  
  

libdata[libdataItem++] = new Array("obsolete_code/morescratch.html", "morescratch.pro", '.pro file in <a href="obsolete_code/dir-overview.html">obsolete_code/ directory</a>', "morescratch.pro", "", "", "", "", "          -1", "");
  
  
  libdata[libdataItem++] = new Array("obsolete_code/morescratch.html#morescratch", "morescratch", 'routine in <a href="obsolete_code/morescratch.html">morescratch.pro</a>', "morescratch.pro", "", "morescratch", "", "inputthresh", "          -1", "");
  
  

libdata[libdataItem++] = new Array("obsolete_code/newbox.html", "newbox.pro", '.pro file in <a href="obsolete_code/dir-overview.html">obsolete_code/ directory</a>', "newbox.pro", "", "", "", "", "          -1", "");
  
  
  libdata[libdataItem++] = new Array("obsolete_code/newbox.html#newbox", "newbox", 'routine in <a href="obsolete_code/newbox.html">newbox.pro</a>', "newbox.pro", "", "newbox", "			Since I kind of fucked up boxit, doing another one.  ", "filebmp", "          -1", "		newbox,file='$PWD/sep11_postit/104533_20120912_124300_353097_0.bin'  ");
  
  

libdata[libdataItem++] = new Array("obsolete_code/nutri.html", "nutri.pro", '.pro file in <a href="obsolete_code/dir-overview.html">obsolete_code/ directory</a>', "nutri.pro", "   JEREN SUZUKI: <span class= code-output >   Space Sciences Laboratory</span> <span class= code-output >   7 Gauss Way</span> <span class= code-output >   Berkeley, CA 94720 USA</span> <span class= code-output >   E-mail: jsuzuki@ssl.berkeley.edu</span>  ", "", " NAME:    NUTRI   PURPOSE:    Finds the center of 3 suns in a single image. Currently limited to a .bmp test image.   ", "", "          -1", "");
  
  
  libdata[libdataItem++] = new Array("obsolete_code/nutri.html#nutri", "nutri", 'routine in <a href="obsolete_code/nutri.html">nutri.pro</a>', "nutri.pro", "", "nutri", "       Object-oriented version of tricenter.pro. Easier to use? Not really, but 		that's probably because it was my first time writing a successful OOP 		program.   ", "time           Outputs how much time the program takes  file           What file to find 3 centers for  scan_width           How apart the scans are for minicrop(). Overrides defaults in crop().  sigmavalue          Sets the threshold to be: <span class= code-output >max(image) - sigmavalue*stddev(image)</span>  sundiam           Approximate diameter of sun in pixels. (Based on bmp image)   ", "          -1", "");
  
  

libdata[libdataItem++] = new Array("obsolete_code/nutricenter.html", "nutricenter.pro", '.pro file in <a href="obsolete_code/dir-overview.html">obsolete_code/ directory</a>', "nutricenter.pro", "", "", "", "", "          -1", "");
  
  
  libdata[libdataItem++] = new Array("obsolete_code/nutricenter.html#data::init", "data::init", 'routine in <a href="obsolete_code/nutricenter.html">nutricenter.pro</a>', "nutricenter.pro", "", "data::init", "", "", "          -1", "");
  
  libdata[libdataItem++] = new Array("obsolete_code/nutricenter.html#data::set", "data::set", 'routine in <a href="obsolete_code/nutricenter.html">nutricenter.pro</a>', "nutricenter.pro", "", "data::set", "", "value", "          -1", "");
  
  libdata[libdataItem++] = new Array("obsolete_code/nutricenter.html#data::get", "data::get", 'routine in <a href="obsolete_code/nutricenter.html">nutricenter.pro</a>', "nutricenter.pro", "", "data::get", "", "value", "          -1", "");
  
  libdata[libdataItem++] = new Array("obsolete_code/nutricenter.html#data__define", "data__define", 'routine in <a href="obsolete_code/nutricenter.html">nutricenter.pro</a>', "nutricenter.pro", "", "data__define", "", "", "          -1", "");
  
  libdata[libdataItem++] = new Array("obsolete_code/nutricenter.html#minicrop::init", "minicrop::init", 'routine in <a href="obsolete_code/nutricenter.html">nutricenter.pro</a>', "nutricenter.pro", "", "minicrop::init", "", "scan_widthsundiamthreshtemparrtime", "          -1", "");
  
  libdata[libdataItem++] = new Array("obsolete_code/nutricenter.html#boundaries::cleanup", "boundaries::cleanup", 'routine in <a href="obsolete_code/nutricenter.html">nutricenter.pro</a>', "nutricenter.pro", "", "boundaries::cleanup", "", "", "          -1", "");
  
  libdata[libdataItem++] = new Array("obsolete_code/nutricenter.html#minicrop__define", "minicrop__define", 'routine in <a href="obsolete_code/nutricenter.html">nutricenter.pro</a>', "nutricenter.pro", "", "minicrop__define", "", "", "          -1", "");
  
  libdata[libdataItem++] = new Array("obsolete_code/nutricenter.html#boundaries::init", "boundaries::init", 'routine in <a href="obsolete_code/nutricenter.html">nutricenter.pro</a>', "nutricenter.pro", "", "boundaries::init", "   Loads a triple-sun image and crops out selected regions one-by-one.   ", "regioninputarrscan_width       How far apart the scanning should be.  sundiamsigmavalue       Sets the threshold to be: <span class= code-output >   max(image) - sigmavalue*stddev(image)</span>  time       Print the elapsed time  ", "          -1", "       cropped = boundaries(region=1,inputarr=image,sundiam=sundiam,scan_width=scan_width,$            thresh=thresh)   ");
  
  libdata[libdataItem++] = new Array("obsolete_code/nutricenter.html#boundaries::cleanup", "boundaries::cleanup", 'routine in <a href="obsolete_code/nutricenter.html">nutricenter.pro</a>', "nutricenter.pro", "", "boundaries::cleanup", "", "", "          -1", "");
  
  libdata[libdataItem++] = new Array("obsolete_code/nutricenter.html#boundaries__define", "boundaries__define", 'routine in <a href="obsolete_code/nutricenter.html">nutricenter.pro</a>', "nutricenter.pro", "", "boundaries__define", "", "", "          -1", "");
  
  libdata[libdataItem++] = new Array("obsolete_code/nutricenter.html#cropit::init", "cropit::init", 'routine in <a href="obsolete_code/nutricenter.html">nutricenter.pro</a>', "nutricenter.pro", "", "cropit::init", "   Loads a triple-sun image and crops out selected regions one-by-one.   ", "regionscan_width       How far apart the scanning should be.  sundiamsigmavalue       Sets the threshold to be: <span class= code-output >   max(image) - sigmavalue*stddev(image)</span>  time       Print the elapsed time  ", "          -1", "       cropped = cropit(region=1,inputarr=image,sundiam=sundiam,scan_width=scan_width,$            thresh=thresh)   ");
  
  libdata[libdataItem++] = new Array("obsolete_code/nutricenter.html#cropit::cleanup", "cropit::cleanup", 'routine in <a href="obsolete_code/nutricenter.html">nutricenter.pro</a>', "nutricenter.pro", "", "cropit::cleanup", "", "", "          -1", "");
  
  libdata[libdataItem++] = new Array("obsolete_code/nutricenter.html#cropit__define", "cropit__define", 'routine in <a href="obsolete_code/nutricenter.html">nutricenter.pro</a>', "nutricenter.pro", "", "cropit__define", "", "", "          -1", "");
  
  libdata[libdataItem++] = new Array("obsolete_code/nutricenter.html#centerit::init", "centerit::init", 'routine in <a href="obsolete_code/nutricenter.html">nutricenter.pro</a>', "nutricenter.pro", "", "centerit::init", "       Had to make a new version of comp3 because the old one called scanbox() by default   ", "file           What file to load in  time           Print the elapsed time  sigmavalue           Sets the threshold to be: <span class= code-output >   max(image) - sigmavalue*stddev(image)</span>  region           Which sun out of the three to find the center of. Defaults to the brightest sun  ", "          -1", "");
  
  libdata[libdataItem++] = new Array("obsolete_code/nutricenter.html#centerit::cleanup", "centerit::cleanup", 'routine in <a href="obsolete_code/nutricenter.html">nutricenter.pro</a>', "nutricenter.pro", "", "centerit::cleanup", "", "", "          -1", "");
  
  libdata[libdataItem++] = new Array("obsolete_code/nutricenter.html#centerit__define", "centerit__define", 'routine in <a href="obsolete_code/nutricenter.html">nutricenter.pro</a>', "nutricenter.pro", "", "centerit__define", "", "", "          -1", "");
  
  libdata[libdataItem++] = new Array("obsolete_code/nutricenter.html#getstruct::init", "getstruct::init", 'routine in <a href="obsolete_code/nutricenter.html">nutricenter.pro</a>', "nutricenter.pro", "", "getstruct::init", "       Finds the centers of a triple-sun image and loads all relevant information        including offsets and angles into a new structure.   ", "scan_width           How apart the scans are for minicrop(). Overrides defaults in tribox().  file           What file to find 4 centers for  sigmavalue          Sets the threshold to be: <span class= code-output >max(image) - sigmavalue*stddev(image)</span>   time           Outputs how much time the program takes  ", "          -1", "");
  
  libdata[libdataItem++] = new Array("obsolete_code/nutricenter.html#getstruct::minicrop", "getstruct::minicrop", 'routine in <a href="obsolete_code/nutricenter.html">nutricenter.pro</a>', "nutricenter.pro", "", "getstruct::minicrop", "", "scan_widthsundiamthreshtemparrtime", "          -1", "");
  
  libdata[libdataItem++] = new Array("obsolete_code/nutricenter.html#getstruct::cleanup", "getstruct::cleanup", 'routine in <a href="obsolete_code/nutricenter.html">nutricenter.pro</a>', "nutricenter.pro", "", "getstruct::cleanup", "", "", "          -1", "");
  
  libdata[libdataItem++] = new Array("obsolete_code/nutricenter.html#getstruct__define", "getstruct__define", 'routine in <a href="obsolete_code/nutricenter.html">nutricenter.pro</a>', "nutricenter.pro", "", "getstruct__define", "", "", "          -1", "");
  
  libdata[libdataItem++] = new Array("obsolete_code/nutricenter.html#nutricenter", "nutricenter", 'routine in <a href="obsolete_code/nutricenter.html">nutricenter.pro</a>', "nutricenter.pro", "", "nutricenter", "       Finds the centers of a triple-sun image and loads all relevant information        including offsets and angles into a new structure.   ", "scan_width           How apart the scans are for minicrop(). Overrides defaults in tribox().  file           What file to find 4 centers for  sigmavalue          Sets the threshold to be: <span class= code-output >max(image) - sigmavalue*stddev(image)</span>   time           Outputs how much time the program takes  ", "          -1", "");
  
  

libdata[libdataItem++] = new Array("albert_version/para_fid.html", "para_fid.pro", '.pro file in <a href="albert_version/dir-overview.html">albert_version/ directory</a>', "para_fid.pro", "", "", "", "", "          -1", "");
  
  
  libdata[libdataItem++] = new Array("albert_version/para_fid.html#para_fid", "para_fid", 'routine in <a href="albert_version/para_fid.html">para_fid.pro</a>', "para_fid.pro", "", "para_fid", "", "inputimageinputstruct", "          -1", "");
  
  

libdata[libdataItem++] = new Array("./paradip.html", "paradip.pro", '.pro file in <a href="./dir-overview.html">./ directory</a>', "paradip.pro", "", "", " PROJECT:        HESSI  NAME:    PARADIP   PURPOSE:    Given a 3x3 array, does parabolic fits to determine position and value of dip. Different from PARAPEAK in that this computes the fit of the dip and not a peak. I don't like having to normalie my data so I'd rather do it this way.   CATEGORY:    IMAGE   CALLING SEQUENCE:    Result = paradip (z, err_msg=err_msg)   INPUTS:    z - (3,3) array of image values.  Middle value should be highest, corners lowest.   OUTPUT KEYWORDS:    err_msg - '' if no error, otherwise contains error message   OUTPUT:    Returns a 3-element vector containing the x,y coordinates of the peak (relative to the middle      of the central pixel) in units of pixel size and the value at the inferred peak.   PROCEDURE:    Given a 3x3 array in which the corner values are lower than any intermediate value,    PARADIP assumes that these correspond to the top of a 2-D circular gaussian; does    a pair of 1-D parabolic fits and returns the 2-D peak location and value.    The 3x3 array supposedly represents the function z at x=0,1,2 and y=0,1,2     Note that there is considerable redundancy in the data which has not been exploited.    An alternate technique would be to use just the 5 values in the '+' shaped configuration.   COMMON BLOCKS:    None.  ", "", "          -1", "");
  
  
  libdata[libdataItem++] = new Array("./paradip.html#paradip", "paradip", 'routine in <a href="./paradip.html">paradip.pro</a>', "paradip.pro", "", "paradip", "", "err_msgz", "          -1", "");
  
  

libdata[libdataItem++] = new Array("./partialcenter.html", "partialcenter.pro", '.pro file in <a href="./dir-overview.html">./ directory</a>', "partialcenter.pro", "", "", "", "", "          -1", "");
  
  
  libdata[libdataItem++] = new Array("./partialcenter.html#partialcenter", "partialcenter", 'routine in <a href="./partialcenter.html">partialcenter.pro</a>', "partialcenter.pro", "", "partialcenter", "", "inputimage", "          -1", "");
  
  

libdata[libdataItem++] = new Array("albert_version/obsolete_files/partialcenter.html", "partialcenter.pro", '.pro file in <a href="albert_version/obsolete_files/dir-overview.html">albert_version/obsolete_files/ directory</a>', "partialcenter.pro", "", "", "", "", "          -1", "");
  
  
  libdata[libdataItem++] = new Array("albert_version/obsolete_files/partialcenter.html#partialcenter", "partialcenter", 'routine in <a href="albert_version/obsolete_files/partialcenter.html">partialcenter.pro</a>', "partialcenter.pro", "", "partialcenter", "", "inputimage", "          -1", "");
  
  

libdata[libdataItem++] = new Array("obsolete_code/pb_lines_intersection.html", "pb_lines_intersection.pro", '.pro file in <a href="obsolete_code/dir-overview.html">obsolete_code/ directory</a>', "pb_lines_intersection.pro", "", "", " NAME:  PB_LINES_INTERSECTION   PURPOSE:  Use this function to find the intersection point of two lines  defined as segments (start and endpoints are provided).  For  now the lines must be coplanar (i.e. 2D).   CALLING SEQUENCE:  result = PB_LINES_INTERSECTION(LineA, LineB, $    [UA = variable], [UB = variable], $    [PARALLEL = variable], [COINCIDENT = variable], $    [ONSEGMENT = variable], $    [ANGLE = angle])   RETURNED VALUE:  A two element array of the intersection [X, Y].  If the  lines are parallel or coincident then the returned  value contains NANs and the appropriate output keyword is  returned as TRUE(non-zero).   ARGUMENTS:  LINEA and LINEB  4 element arrays that define the start and    end points of the lines in the form [x0,y0,x1,y1] or    [[x0,y0],[x1,y1]]   KEYWORDS:  ANGLE Set equal to a named variable to retrieve the angle (in radians) between    A and B as swept from A to B positive CCW.  The angle is between -pi and +pi  UA and UB  The parametric scaling constants calculated from the input    points.  PARALLEL Set this equal to a named variable which is returned    as TRUE (non-zero) if the lines are parallel  COINCIDENT Set this equal to a named variable which is returned    as TRUE (non-zero) if the lines are coincident (and parallel, too!)  ONSEGMENT Set this equal to anamed variable to retrieve a two    element flag indicating the point lies within the corresponding    segments.  For example, [1,0] indicates that the point is within    the two points defining the A line but it is outside the endpoints    of the B line (but lines A and B still intersect somewhere).   REFERENCE:  Paul Bourke's Geometry Resources located at  http://local.wasp.uwa.edu.au/~pbourke/geometry/lineline2d/  http://local.wasp.uwa.edu.au/~pbourke/geometry/insidepoly/   EXAMPLE:  A = [1.0,1.0,2.0,2.0]  B = [1.0,2.0,2.0,1.0]  xy = PB_LINES_INTERSECTION(A,B)  plot, A[[0,2]],A[[1,3]]  oplot, B[[0,2]],B[[1,3]]  plots, xy[0],xy[1],psym = 6   MODIFICATION HISTORY:  2007-07-15 BT adapted from description in reference.  2012-02-13 BT switched to cg* graphics  ", "", "          -1", "");
  
  
  libdata[libdataItem++] = new Array("obsolete_code/pb_lines_intersection.html#TESTLINES2", "TESTLINES2", 'routine in <a href="obsolete_code/pb_lines_intersection.html">pb_lines_intersection.pro</a>', "pb_lines_intersection.pro", "", "TESTLINES2", "", "waitInterval", "          -1", "");
  
  libdata[libdataItem++] = new Array("obsolete_code/pb_lines_intersection.html#TESTLINES", "TESTLINES", 'routine in <a href="obsolete_code/pb_lines_intersection.html">pb_lines_intersection.pro</a>', "pb_lines_intersection.pro", "", "TESTLINES", "", "AB", "          -1", "");
  
  libdata[libdataItem++] = new Array("obsolete_code/pb_lines_intersection.html#L_I_ANGLE", "L_I_ANGLE", 'routine in <a href="obsolete_code/pb_lines_intersection.html">pb_lines_intersection.pro</a>', "pb_lines_intersection.pro", "", "L_I_ANGLE", "", "h1v1h2v2PI", "          -1", "");
  
  libdata[libdataItem++] = new Array("obsolete_code/pb_lines_intersection.html#PB_LINES_INTERSECTION", "PB_LINES_INTERSECTION", 'routine in <a href="obsolete_code/pb_lines_intersection.html">pb_lines_intersection.pro</a>', "pb_lines_intersection.pro", "", "PB_LINES_INTERSECTION", "", "UAUBPARALLELCOINCIDENTONSEGMENTANGLEDOUBLEAABB", "          -1", "");
  
  

libdata[libdataItem++] = new Array("albert_version/picksun.html", "picksun.pro", '.pro file in <a href="albert_version/dir-overview.html">albert_version/ directory</a>', "picksun.pro", "", "", "", "", "          -1", "");
  
  
  libdata[libdataItem++] = new Array("albert_version/picksun.html#picksun", "picksun", 'routine in <a href="albert_version/picksun.html">picksun.pro</a>', "picksun.pro", "", "picksun", "       Decides which suns to ignore. Looks along the border pixels of the image and if 6 consecutive pixels are seen, it finds the closest sun (which will be a partial sun) and marks it as no good   ", "inputimage           The raw input image   inputstruct           Structure containing all the solar information   ", "          -1", "");
  
  

libdata[libdataItem++] = new Array("./picksun.html", "picksun.pro", '.pro file in <a href="./dir-overview.html">./ directory</a>', "picksun.pro", "", "", "", "", "          -1", "");
  
  
  libdata[libdataItem++] = new Array("./picksun.html#picksun", "picksun", 'routine in <a href="./picksun.html">picksun.pro</a>', "picksun.pro", "", "picksun", "       Decides which suns to ignore. Looks along the border pixels of the image and if 6 consecutive pixels are seen, it finds the closest sun (which will be a partial sun) and marks it as no good   ", "inputimage           The raw input image   inputstruct           Structure containing all the solar information   ", "          -1", "");
  
  

libdata[libdataItem++] = new Array("obsolete_code/quantifyblur.html", "quantifyblur.pro", '.pro file in <a href="obsolete_code/dir-overview.html">obsolete_code/ directory</a>', "quantifyblur.pro", "", "", "", "", "          -1", "");
  
  
  libdata[libdataItem++] = new Array("obsolete_code/quantifyblur.html#quantifyblur", "quantifyblur", 'routine in <a href="obsolete_code/quantifyblur.html">quantifyblur.pro</a>', "quantifyblur.pro", "", "quantifyblur", "       Quantify how many pixels it takes to make transitions.         Black   -&gt;  1-sigma        1-sigma -&gt;  White        Black   -&gt;  White        over x & y  ", "", "          -1", "");
  
  

libdata[libdataItem++] = new Array("obsolete_code/quickfidmask.html", "quickfidmask.pro", '.pro file in <a href="obsolete_code/dir-overview.html">obsolete_code/ directory</a>', "quickfidmask.pro", "", "", "", "", "          -1", "");
  
  
  libdata[libdataItem++] = new Array("obsolete_code/quickfidmask.html#quickfidmask", "quickfidmask", 'routine in <a href="obsolete_code/quickfidmask.html">quickfidmask.pro</a>', "quickfidmask.pro", "", "quickfidmask", "       Finds center of mask where pixels are above a given threshold   ", "input_image           2D array of pixels to mask with threshold  thresh           Threshold used to select pixels  ", "          -1", "");
  
  

libdata[libdataItem++] = new Array("./quickmask.html", "quickmask.pro", '.pro file in <a href="./dir-overview.html">./ directory</a>', "quickmask.pro", "", "", "", "", "          -1", "");
  
  
  libdata[libdataItem++] = new Array("./quickmask.html#quickmask", "quickmask", 'routine in <a href="./quickmask.html">quickmask.pro</a>', "quickmask.pro", "", "quickmask", "       Finds center of mask where pixels are above a given threshold   ", "input_image           2D array of pixels to mask with threshold  thresh           Threshold used to select pixels  ", "          -1", "");
  
  

libdata[libdataItem++] = new Array("albert_version/quickmask.html", "quickmask.pro", '.pro file in <a href="albert_version/dir-overview.html">albert_version/ directory</a>', "quickmask.pro", "", "", "", "", "          -1", "");
  
  
  libdata[libdataItem++] = new Array("albert_version/quickmask.html#quickmask", "quickmask", 'routine in <a href="albert_version/quickmask.html">quickmask.pro</a>', "quickmask.pro", "", "quickmask", "       Finds center of mask where pixels are above a given threshold   ", "input_image           2D array of pixels to mask with threshold  thresh           Threshold used to select pixels  ", "          -1", "");
  
  

libdata[libdataItem++] = new Array("obsolete_code/quickmask.html", "quickmask.pro", '.pro file in <a href="obsolete_code/dir-overview.html">obsolete_code/ directory</a>', "quickmask.pro", "", "", "", "", "          -1", "");
  
  
  libdata[libdataItem++] = new Array("obsolete_code/quickmask.html#quickmask", "quickmask", 'routine in <a href="obsolete_code/quickmask.html">quickmask.pro</a>', "quickmask.pro", "", "quickmask", "       Finds center of mask where pixels are above a given threshold   ", "input_image           2D array of pixels to mask with threshold  thresh           Threshold used to select pixels  ", "          -1", "");
  
  

libdata[libdataItem++] = new Array("obsolete_code/rb.html", "rb.pro", '.pro file in <a href="obsolete_code/dir-overview.html">obsolete_code/ directory</a>', "rb.pro", "   JEREN SUZUKI: <span class= code-output >   Space Sciences Laboratory</span> <span class= code-output >   7 Gauss Way</span> <span class= code-output >   Berkeley, CA 94720 USA</span> <span class= code-output >   E-mail: jsuzuki@ssl.berkeley.edu</span>  ", "", " At the end of the day this should find the center of the sun using a variety of (working) methods   Compiled the doc with idldoc,root='/Users/jerensuzuki/Documents/suncentering', $  output='rbdoc',format_style='rst',/user,/quiet,markup_style='rst'   ", "", "          -1", "");
  
  
  libdata[libdataItem++] = new Array("obsolete_code/rb.html#scanbox", "scanbox", 'routine in <a href="obsolete_code/rb.html">rb.pro</a>', "rb.pro", "", "scanbox", "       Boxit was too computation-intensive, this is more a rough boxing program   ", "file       File to be read in  time       Print the elapsed time  meanthresh       Use the average of the image as the threshold value. Otherwise, use half of max  scan_width       How far apart the scanning should be   ", "          -1", "       cropped = scanbox(file='$PWD/sep11_postit/104533_20120912_124300_353097_0.bin',/time)   ");
  
  libdata[libdataItem++] = new Array("obsolete_code/rb.html#comp2", "comp2", 'routine in <a href="obsolete_code/rb.html">rb.pro</a>', "rb.pro", "", "comp2", "           Finds the centroid by summing all values over a certain threshold and averaging them   ", "file       File to be read in  time       Prints the elapsed time  plot       Makes a nice plot  sigmavalue       Sets the threshold to be max(image) - sigmavalue*stddev(image)   xpos       X center  ypos       Y center  thresh       Threshold used to select pixels   ", "          -1", "           comp2,xpos,ypos,/plot   ");
  
  libdata[libdataItem++] = new Array("obsolete_code/rb.html#comp4", "comp4", 'routine in <a href="obsolete_code/rb.html">rb.pro</a>', "rb.pro", "", "comp4", "           Only used to save the strips into structures.  ", "file       File to be read in  time       Prints the elapsed time  scan_width       Indicates how far apart to scan  sigmavalue       Sets the threshold to be max(image) - sigmavalue*stddev(image)   xstrips       Structure containing row strips  ystrips       Structure containing column strips  thresh       Threshold used to select pixels   ", "          -1", "           comp4,xstrips,ystrips,thresh,/time,scan_width=10,/thalf   ");
  
  libdata[libdataItem++] = new Array("obsolete_code/rb.html#comp5", "comp5", 'routine in <a href="obsolete_code/rb.html">rb.pro</a>', "rb.pro", "", "comp5", "           Only used to save the cut-down strips into structures.   ", "file       File to be read in  time       Prints the elapsed time  ministrip_length       How long the total array of the cut-down strip will be  scan_width       Indicates how far apart to scan  sigmavalue       Sets the threshold to be max(image) - sigmavalue*stddev(image)   xstrips       Contains the row sctructures of strips  ystrips       Contains the col sctructures of strips  thresh       Threshold value used   ", "          -1", "           comp5,xstrips,ystrips,thresh   ");
  
  libdata[libdataItem++] = new Array("obsolete_code/rb.html#comp6", "comp6", 'routine in <a href="obsolete_code/rb.html">rb.pro</a>', "rb.pro", "", "comp6", "       Uses the data from comp5 and draws a linear/quadratic/cubic function to find midpoint.        Order is the power of the function.   ", "file       File to be read in  order       What order polynomial to use for POLY_FIT()  time       Prints the elapsed time  scan_width       Ondicates how far apart to scan  ministrip_length       How long the trimmed down strip will be  plot       If set, makes some nice plots.  sigmavalue       Sets the threshold to be max(image) - sigmavalue*stddev(image)   xpos       X Center  ypos       Y Center   ", "          -1", "           comp6,xpos,ypos,order=3   ");
  
  libdata[libdataItem++] = new Array("obsolete_code/rb.html#cc", "cc", 'routine in <a href="obsolete_code/rb.html">rb.pro</a>', "rb.pro", "", "cc", "", "", "          -1", "");
  
  libdata[libdataItem++] = new Array("obsolete_code/rb.html#rb", "rb", 'routine in <a href="obsolete_code/rb.html">rb.pro</a>', "rb.pro", "", "rb", "       Finds the centroid using a variety of compression levels  ", "file       File to be read in  ministrip_length       How long the cut-down strip is  scan_width       How far apart the scans are  time       Prints the elapsed time  order       What order polynomial to use for POLY_FIT()  plot       If set, makes some nice plots.  sigmavalue       Sets the threshold to be max(image) - sigmavalue*stddev(image)   ", "          -1", "   More Keywords/parameters     How strict are we going to be for the outputs of each compression file?   ");
  
  

libdata[libdataItem++] = new Array("obsolete_code/rotated_fiducials.html", "rotated_fiducials.pro", '.pro file in <a href="obsolete_code/dir-overview.html">obsolete_code/ directory</a>', "rotated_fiducials.pro", "", "", "", "", "          -1", "");
  

libdata[libdataItem++] = new Array("obsolete_code/rottest.html", "rottest.pro", '.pro file in <a href="obsolete_code/dir-overview.html">obsolete_code/ directory</a>', "rottest.pro", "", "", "", "", "          -1", "");
  

libdata[libdataItem++] = new Array("obsolete_code/scatter.html", "scatter.pro", '.pro file in <a href="obsolete_code/dir-overview.html">obsolete_code/ directory</a>', "scatter.pro", "   JEREN SUZUKI: <span class= code-output >   Space Sciences Laboratory</span> <span class= code-output >   7 Gauss Way</span> <span class= code-output >   Berkeley, CA 94720 USA</span> <span class= code-output >   E-mail: jsuzuki@ssl.berkeley.edu</span>  ", "", " Bunch of code deisgned to make sure the things I write are doing the things I want   Compiled the doc with idldoc,root='/Users/jerensuzuki/Documents/suncentering', $  output='rbdoc',format_style='rst',/user,/quiet,markup_style='rst'   ", "", "          -1", "");
  
  
  libdata[libdataItem++] = new Array("obsolete_code/scatter.html#cc", "cc", 'routine in <a href="obsolete_code/scatter.html">scatter.pro</a>', "scatter.pro", "", "cc", "", "", "          -1", "");
  
  libdata[libdataItem++] = new Array("obsolete_code/scatter.html#makesomescatplots", "makesomescatplots", 'routine in <a href="obsolete_code/scatter.html">scatter.pro</a>', "scatter.pro", "", "makesomescatplots", "   Makes a few scatter plots based on varying parameters. Sucks that the values are hardcoded.     Also, as of Nov 14, these are all wrong.  ", "", "          -1", "");
  
  libdata[libdataItem++] = new Array("obsolete_code/scatter.html#scatter", "scatter", 'routine in <a href="obsolete_code/scatter.html">scatter.pro</a>', "scatter.pro", "", "scatter", "   Abbreviated form of  Make Some More Scatter Plots     Making more scat plots now that I've fixed my program and am now moving onto bmp images   ", "", "          -1", "");
  
  

libdata[libdataItem++] = new Array("obsolete_code/scratch.html", "scratch.pro", '.pro file in <a href="obsolete_code/dir-overview.html">obsolete_code/ directory</a>', "scratch.pro", "", "", "", "", "          -1", "");
  
  
  libdata[libdataItem++] = new Array("obsolete_code/scratch.html#scratch", "scratch", 'routine in <a href="obsolete_code/scratch.html">scratch.pro</a>', "scratch.pro", "", "scratch", "", "inputthresh", "          -1", "");
  
  

libdata[libdataItem++] = new Array("plots_tables_images/scrib.html", "scrib.pro", '.pro file in <a href="plots_tables_images/dir-overview.html">plots_tables_images/ directory</a>', "scrib.pro", "", "", "", "", "          -1", "");
  

libdata[libdataItem++] = new Array("./setbetterpeak.html", "setbetterpeak.pro", '.pro file in <a href="./dir-overview.html">./ directory</a>', "setbetterpeak.pro", "", "", "", "", "          -1", "");
  
  
  libdata[libdataItem++] = new Array("./setbetterpeak.html#setbetterpeak", "setbetterpeak", 'routine in <a href="./setbetterpeak.html">setbetterpeak.pro</a>', "setbetterpeak.pro", "", "setbetterpeak", "       Returns peaks of 2nd deriv of sorted array to set thresholds for image   ", "input           Starting input image   n_suns           Number of suns   ", "          -1", "");
  
  

libdata[libdataItem++] = new Array("albert_version/setbetterpeak.html", "setbetterpeak.pro", '.pro file in <a href="albert_version/dir-overview.html">albert_version/ directory</a>', "setbetterpeak.pro", "", "", "", "", "          -1", "");
  
  
  libdata[libdataItem++] = new Array("albert_version/setbetterpeak.html#setbetterpeak", "setbetterpeak", 'routine in <a href="albert_version/setbetterpeak.html">setbetterpeak.pro</a>', "setbetterpeak.pro", "", "setbetterpeak", "       Returns peaks of 2nd deriv of sorted array to set thresholds for image   ", "input           Starting input image   nsuns           Number of suns   ", "          -1", "");
  
  

libdata[libdataItem++] = new Array("obsolete_code/setbetterthresh.html", "setbetterthresh.pro", '.pro file in <a href="obsolete_code/dir-overview.html">obsolete_code/ directory</a>', "setbetterthresh.pro", "", "", "", "", "          -1", "");
  
  
  libdata[libdataItem++] = new Array("obsolete_code/setbetterthresh.html#setbetterthresh", "setbetterthresh", 'routine in <a href="obsolete_code/setbetterthresh.html">setbetterthresh.pro</a>', "setbetterthresh.pro", "", "setbetterthresh", "", "input", "          -1", "");
  
  

libdata[libdataItem++] = new Array("obsolete_code/setpeak.html", "setpeak.pro", '.pro file in <a href="obsolete_code/dir-overview.html">obsolete_code/ directory</a>', "setpeak.pro", "", "", "", "", "          -1", "");
  
  
  libdata[libdataItem++] = new Array("obsolete_code/setpeak.html#setpeak", "setpeak", 'routine in <a href="obsolete_code/setpeak.html">setpeak.pro</a>', "setpeak.pro", "", "setpeak", "", "input", "          -1", "");
  
  

libdata[libdataItem++] = new Array("obsolete_code/setthresh.html", "setthresh.pro", '.pro file in <a href="obsolete_code/dir-overview.html">obsolete_code/ directory</a>', "setthresh.pro", "", "", "", "", "          -1", "");
  
  
  libdata[libdataItem++] = new Array("obsolete_code/setthresh.html#setthresh", "setthresh", 'routine in <a href="obsolete_code/setthresh.html">setthresh.pro</a>', "setthresh.pro", "", "setthresh", "", "input", "          -1", "");
  
  

libdata[libdataItem++] = new Array("obsolete_code/tmp.html", "tmp.pro", '.pro file in <a href="obsolete_code/dir-overview.html">obsolete_code/ directory</a>', "tmp.pro", "", "", "", "", "          -1", "");
  

libdata[libdataItem++] = new Array("obsolete_code/tribox.html", "tribox.pro", '.pro file in <a href="obsolete_code/dir-overview.html">obsolete_code/ directory</a>', "tribox.pro", "", "", "", "", "          -1", "");
  
  
  libdata[libdataItem++] = new Array("obsolete_code/tribox.html#tribox", "tribox", 'routine in <a href="obsolete_code/tribox.html">tribox.pro</a>', "tribox.pro", "", "tribox", "       The triple-sun variant of scanbox(), the goal of this is to provide cropped regions for        each centering method to compute the centers of.   ", "region           Which sun out of the three to find the center of. Defaults to the brightest sun  time           Print the elapsed time   file           File to be read in  scan_width           How apart the scans are for minicrop().  sigmavalue          Sets the threshold to be: <span class= code-output >max(image) - sigmavalue*stddev(image)</span>  sundiam           Approximate diameter of sun in pixels. (Based on bmp image)   ", "          -1", "       cropped = scanbox(file='triplesun.bmp',/time)   ");
  
  

libdata[libdataItem++] = new Array("obsolete_code/tricenter.html", "tricenter.pro", '.pro file in <a href="obsolete_code/dir-overview.html">obsolete_code/ directory</a>', "tricenter.pro", "   JEREN SUZUKI: <span class= code-output >   Space Sciences Laboratory</span> <span class= code-output >   7 Gauss Way</span> <span class= code-output >   Berkeley, CA 94720 USA</span> <span class= code-output >   E-mail: jsuzuki@ssl.berkeley.edu</span>  ", "", " NAME:    TRICENTER   PURPOSE:    Finds the center of 3 suns in a single image. Currently limited to a .bmp test image.   ", "", "          -1", "");
  

libdata[libdataItem++] = new Array("obsolete_code/trilimbcenter.html", "trilimbcenter.pro", '.pro file in <a href="obsolete_code/dir-overview.html">obsolete_code/ directory</a>', "trilimbcenter.pro", "   JEREN SUZUKI: <span class= code-output >   Space Sciences Laboratory</span> <span class= code-output >   7 Gauss Way</span> <span class= code-output >   Berkeley, CA 94720 USA</span> <span class= code-output >   E-mail: jsuzuki@ssl.berkeley.edu</span>  ", "", " NAME:    TRICENTER   PURPOSE:    Finds the center of 3 suns in a single image. Currently limited to a .bmp test image.   ", "", "          -1", "");
  
  
  libdata[libdataItem++] = new Array("obsolete_code/trilimbcenter.html#makelimbstrips", "makelimbstrips", 'routine in <a href="obsolete_code/trilimbcenter.html">trilimbcenter.pro</a>', "trilimbcenter.pro", "", "makelimbstrips", "       Makes limb strips from full-length strips   ", "nstrips           How many strips to select, centered around the row/col diameter  region           Which sun out of the three to find the center of. Defaults to the brightest sun  time           Prints the elapsed time   thresh           Threshold used to select pixels   xstripsystripsfile           File to be read in  ministrip_length           How long the total array of the cut-down strip will be  scan_width           Indicates how far apart to scan  sigmavalue           Sets the threshold to be:            max(image) - sigmavalue*stddev(image)   sundiam           Approximate diameter of sun in pixels. (Based on bmp image)  ", "          -1", "   Exactly how much data should be stored in a structure? Since we're interested in saving space,    doesn't make sense to repeat any data in the structures.  ");
  
  libdata[libdataItem++] = new Array("obsolete_code/trilimbcenter.html#makestrips", "makestrips", 'routine in <a href="obsolete_code/trilimbcenter.html">trilimbcenter.pro</a>', "trilimbcenter.pro", "", "makestrips", "       Only saves 5 strips centered around the solar diameter to reduce the amount of limb-            darkened pixels and to make the polynomial-fitted limbs more-or-less look similar.   ", "nstrips       How many strips to select, centered around the row/col diameter  region       Which sun out of the three to find the center of. Defaults to the brightest sun  time       Prints elapsed time  thresh       Threshold used to select pixels  xstrips       Structure containing row strips  ystrips       Structure containing column strips   file       File to be read in  scan_width       Indicates how far apart to scan  sigmavalue       Sets the threshold to be:        max(image) - sigmavalue*stddev(image)   sundiam       Approximate diameter of sun in pixels. (Based on bmp image)  ", "          -1", "");
  
  libdata[libdataItem++] = new Array("obsolete_code/trilimbcenter.html#limbfit", "limbfit", 'routine in <a href="obsolete_code/trilimbcenter.html">trilimbcenter.pro</a>', "trilimbcenter.pro", "", "limbfit", "   Uses the data from makelimbstrips and fits an n-th order polynomial to the limb to find where        it crosses the threshold.   ", "nstrips           How many strips to select, centered around the row/col diameter  plot           Makes some nice plots  region           Which sun out of the three to find the center of. Defaults to the brightest sun  time           Prints the elapsed time  thresh           Threshold used to select pixels  xpos           X center  ypos           Y center   file           File to be read in  ministrip_length           How long the trimmed down strip will be  order           What order polynomial to use for POLY_FIT()  scan_width           Indicates how far apart to scan  sigmavalue           Sets the threshold to be:            max(image) - sigmavalue*stddev(image)   sundiam           Approximate diameter of sun in pixels. (Based on bmp image)  ", "          -1", "");
  
  libdata[libdataItem++] = new Array("obsolete_code/trilimbcenter.html#getstruct", "getstruct", 'routine in <a href="obsolete_code/trilimbcenter.html">trilimbcenter.pro</a>', "trilimbcenter.pro", "", "getstruct", "       Finds the centers of a triple-sun image and loads all relevant information        including offsets and angles into a new structure.   ", "time           Outputs how much time the program takes  file           What file to find 3 centers for  struct           Structure containing the centers and cropped images of all 3 suns  scan_width           How apart the scans are for minicrop().  sigmavalue          Sets the threshold to be: <span class= code-output >max(image) - sigmavalue*stddev(image)</span>  sundiam           Approximate diameter of sun in pixels. (Based on bmp image)   ", "          -1", "");
  
  libdata[libdataItem++] = new Array("obsolete_code/trilimbcenter.html#cropit", "cropit", 'routine in <a href="obsolete_code/trilimbcenter.html">trilimbcenter.pro</a>', "trilimbcenter.pro", "", "cropit", "       Loads a triple-sun image and crops out selected regions one-by-one.   ", "region           Which sun out of the three to find the center of. Defaults to the brightest sun  time         Print the elapsed time   inputarr           Starting image to crop  location           Structure containing the cropped image along with the X and Y distances from origin  scan_width           How apart the scans are for minicrop().  sigmavalue          Sets the threshold to be: <span class= code-output >max(image) - sigmavalue*stddev(image)</span>  sundiam           Approximate diameter of sun in pixels. (Based on bmp image)   ", "          -1", "       cropped = cropit(inputarr,scan_width,sigmavalue,sundiam,region=1)   ");
  
  libdata[libdataItem++] = new Array("obsolete_code/trilimbcenter.html#minicrop", "minicrop", 'routine in <a href="obsolete_code/trilimbcenter.html">trilimbcenter.pro</a>', "trilimbcenter.pro", "", "minicrop", "       Small function to keep code small in cropit. Finds the row where the threshold is crossed        and then steps back in the x-direction to find the left side of the cropping box. Skips        over the sun by a predetermined value then crops out the sun.   ", "time           Print the elapsed time  temparr           2D array to check boundary limits of  rowscan           Where to crop the rows from  colscan           Where to crop the columns from  rowendscan           Where to crop the rows to  colendscan           Where to crop the columns to  scan_width           How apart the scans are for minicrop().  sundiam           Approximate diameter of sun in pixels. (Based on bmp image)  thresh           What the minimum threshold will be for scanning   ", "          -1", "");
  
  

libdata[libdataItem++] = new Array("obsolete_code/trimask.html", "trimask.pro", '.pro file in <a href="obsolete_code/dir-overview.html">obsolete_code/ directory</a>', "trimask.pro", "", "", "", "", "          -1", "");
  
  
  libdata[libdataItem++] = new Array("obsolete_code/trimask.html#trimask", "trimask", 'routine in <a href="obsolete_code/trimask.html">trimask.pro</a>', "trimask.pro", "", "trimask", "       Had to make a new version of comp3 because the old one called scanbox() by default   ", "region           Which sun out of the three to find the center of. Defaults to the brightest sun  time           Print the elapsed time  file           What file to load in  xpos           Computed X position of center  ypos           Computed Y position of center  scan_width           How apart the scans are for minicrop().  sigmavalue          Sets the threshold to be: <span class= code-output >max(image) - sigmavalue*stddev(image)</span>  sundiam           Approximate diameter of sun in pixels. (Based on bmp image)  thresh           Threshold used in finding center   ", "          -1", "");
  
  

libdata[libdataItem++] = new Array("./twopixfit.html", "twopixfit.pro", '.pro file in <a href="./dir-overview.html">./ directory</a>', "twopixfit.pro", "", "", "", "", "          -1", "");
  
  
  libdata[libdataItem++] = new Array("./twopixfit.html#twopixfit", "twopixfit", 'routine in <a href="./twopixfit.html">twopixfit.pro</a>', "twopixfit.pro", "", "twopixfit", "       Fits 2nd order polynomial to limb strips   ", "inputstruct           Structure containing all the solar information   inputimage           Starting input image   ", "          -1", "");
  
  

libdata[libdataItem++] = new Array("albert_version/twopixfit.html", "twopixfit.pro", '.pro file in <a href="albert_version/dir-overview.html">albert_version/ directory</a>', "twopixfit.pro", "", "", "", "", "          -1", "");
  
  
  libdata[libdataItem++] = new Array("albert_version/twopixfit.html#twopixfit", "twopixfit", 'routine in <a href="albert_version/twopixfit.html">twopixfit.pro</a>', "twopixfit.pro", "", "twopixfit", "       Linear fit to limb strips   ", "inputstruct           Structure containing all the solar information   inputimage           Starting input image   ", "          -1", "");
  
  

libdata[libdataItem++] = new Array("obsolete_code/whichcropmethod copy.html", "whichcropmethod copy.pro", '.pro file in <a href="obsolete_code/dir-overview.html">obsolete_code/ directory</a>', "whichcropmethod copy.pro", "", "", "", "", "          -1", "");
  
  
  libdata[libdataItem++] = new Array("obsolete_code/whichcropmethod copy.html#whichcropmethod", "whichcropmethod", 'routine in <a href="obsolete_code/whichcropmethod copy.html">whichcropmethod copy.pro</a>', "whichcropmethod copy.pro", "", "whichcropmethod", "       Crops differently according to which region is selected.   ", "region           1) main sun            2) 50% brightness sun            3) 25% brightness sun  ", "          -1", "");
  
  

libdata[libdataItem++] = new Array("obsolete_code/whichcropmethod.html", "whichcropmethod.pro", '.pro file in <a href="obsolete_code/dir-overview.html">obsolete_code/ directory</a>', "whichcropmethod.pro", "", "", "", "", "          -1", "");
  
  
  libdata[libdataItem++] = new Array("obsolete_code/whichcropmethod.html#whichcropmethod", "whichcropmethod", 'routine in <a href="obsolete_code/whichcropmethod.html">whichcropmethod.pro</a>', "whichcropmethod.pro", "", "whichcropmethod", "       Crops differently according to which region is selected.   ", "region           1) main sun            2) 50% brightness sun            3) 25% brightness sun  ", "          -1", "");
  
  

